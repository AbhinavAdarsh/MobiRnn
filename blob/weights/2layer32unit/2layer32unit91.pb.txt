node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "input"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\t\000\000\000"
      }
    }
  }
}
node {
  name: "reshape"
  op: "Reshape"
  input: "transpose"
  input: "reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "w_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 9
          }
          dim {
            size: 32
          }
        }
        tensor_content: "\312\302.\274\201\264\322\274\251\204\211>\t\204Z=\035\253\262\275y/\257\275\342|:\276\310\235u=\t=\243>\036!\361=\236+#\277\356\021\010=\r\203\214\276xm\014?m\252\344\2756v\201=\t\342\236\275\351q\310\274gz\336\274\323\253\354\255\234u(\276bEh=\031\322\206\276\335\323\257\276b\207\250>\342\220m\275o[\331\275$\313\177?7`\001\274S6\325\275\340L\210>\333\337\037=\322\251\334=\t\221\330=\"8C<zZ\277=\212\245g=$\305Z\275h@\260=E\022\222<\224,\031\276fJ\221\272\025FN\275\017\340\213\275\321\362\032=\312\037\205\276\245c\020\275S\334\270\275\302\035\022=\n\t\372\274R\007s\275@\354\276+\370A\354<\217\316\236=Tv\310\275`b\332=\354\013\335<:{\036\275\037D\003\274\3566\265\275m\014\212\275Qx0=&$\022\275\303\233\210=\224\270\202;\323\r\000=R\350w\275\035\233\341\274\207)Q\275\225b\257<\361x\201>C\006\323;\200\301Z<\350\013m\275\303(w=\344n\014\275\241E\014<#\3148\275\342\207&=\340\337\271=\356O\260\274\373\244\241=\313X\370\274\256\223\321*\202\200`=\352\355\247\2748u\025=\220\0215\275Ri\226<\213\255\r=\352\217\355<\211\236\263\273\016\200\243\275M\307\241=\037\022\301\274?n=<}N\021\275\277\267\300\274\336\244\352>\342\262\002?@\262F>\026\262\254=Yal\275\030%o\276\331Qq\276\255\010\363>\216\001<\276g\226\252\274\336d(>w\374\242>PS\357=\366\210\036\277\203\010\251>\231-\206\275\203\274L\276V\202\212+\313\006\003\277\276\027(>\231\002\235\2763\004\023?\355w\205>h\"\266=4\221\037=\2537\300=\204\004-\276\206\265\221\275\320\377\270>\221\223\220>\211\337\177\276[N\341;4\375\325>\037\177V\276\330\366P>\311\366\274>\016\365Z\275G)J\276\336\225\\\275\250\263\243>\376\023\352\276fq\302=+}\253=\341L\206\275r:\225=\233\263\255\276\305\274\312>F\237\200\276\006\"\204\275\022\207w+C2\n>\237q\256>O\257\214\276\347a*?\347N\025\277\354\223\013\277\221\340\"\276U\304\036<+\374\035\276V~\313\275dE\001\276\332\0373<d\246\353\275\244\365y>7=/\276\262B\021\276\222l\'\275uF>>\272U\274\276\331\022?\275\002\336\377\276\346/\021>\273\342\245>\255f\231>\212\3165\276hV\240>H\222\266>\372\323\223;<\270\005>\377\233\217\274{|\234<\356x\025-\235*\336<m\222\251=\"\323\345\276\tG\350>uh??pEu\275\362n\324\275\330:\272>[\372}=y\0024=5\261\177\276\261H\256>\344IB\277\367\352\251\276\027\210\r?o\266j\277DW\004>o\314\237\276\201IG\277\340l[?\347\317\363=\033\0326?z\231T?\244O\304\274\345\025\\\277\202\217\302>\311.\331\275w\2023?z3\215\277\313\027\352<\360\223u?4\267\376\266X\350\336\276H\t\014>\373\177\307\277\201}I?\227\201$?5\211(\275\247\370\304>\243\243\321?3\267\205\274<QD\277}\371.\276\210.\000\276/~n\277\305\345\035\276\254\337\360\276\rW\016>\270\033\244>]\234k>\347\321k?C\347\345\275\251\025\323\275B*\214>\227\240`>\374B\360\276\314\245\210>\016\260\014\277\360Y\010\276\367C\257>w\277\344=,\266N?p\030\352\276\312\252\2550\022[\231;\370\252\262>\351\3041\277D\253\031\275@\n0\275\240\244\366<*\253\325>\262c\241\276?>\021?\364H\375>\'\3733\276\356*\013\277\004\016X\276\370\361\332\275\251%o\276u^J\277\234_w>\346\004\326\274\nj\245\277\235\033];\354V\"=\203\241\217=M\"\311>\032\330\253<O\371\032>\210^\260=E2#>}a\342<K\241q=9\367\360>Y?/>\003U\0330u\327\236>0\246\030>\375\022@\276\323\307\017?\017\236\221\276}\266\017\275\'\265\262\276\201U\024>\360\014\224?f\376\257<\023\223 <I\215$>"
      }
    }
  }
}
node {
  name: "b_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\330:\310?\233\230\034?Cb\226?\253^b?\225\250R?\327\206\017?I\352v?\022O\311?\313\227\016\276\362\217:?\255G\263?\2571W?\272\204-?\323\242\300\276.2\260>d\n\243?`W\347?\014\337\026?\317ls?V\36712J\372\272?\353\024\242?|\024\312?\033\224y?\205\255*\277\257\202\234=k<h?X\306\263\277\312\263\226<\013\315\256?;\371\210>\2642\203?"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "reshape"
  input: "w_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "MatMul"
  input: "b_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "relu"
  op: "Relu"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split"
  op: "Split"
  input: "split/split_dim"
  input: "relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 128
    }
  }
}
node {
  name: "rnn/Shape"
  op: "Shape"
  input: "split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice"
  op: "StridedSlice"
  input: "rnn/Shape"
  input: "rnn/strided_slice/stack"
  input: "rnn/strided_slice/stack_1"
  input: "rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\014\255\277\273\326\272P<e\2326;\341o\223\275\316\304\202\272c)\033\276\261\341n=\342\370\005\275\300\307\021=\261\234J=u\253\034;<\373\r<\341\334?=\002\340\270\274\363\000*<~(\350\273}\250=<]\017\211:\372Q\361\273\004.k<nD\256\274\010\033\213\274\'\243O;\3020\223\274\204\342\006\275YD\000\2755\333\217\274\000\036\026=\002\222\356\273\370<\372<\272.5={\026\346;\244\020\215\272c\037U\275\357\272\022>Ct`>*\016\232\274.$\262=\335\217\276<\247\342\311:\0075\262\276Eg\003>\350\260\232\274\340\006\354\274\363H\205\275r\316\276\273\350H\317\274\203\021\324<\256>\014>e.\007\275@\332T\275\350\264\213=\330`\036\276\337\206.\274a\344\313<K\031\001\274\350\221\027=\322\005T=x\373\037\274\353\366K>\005\367\322\275\270\010\352<\\\271\\\275\226\004\016=J\371\352\273\336\006J<\016&\014=[U\351=hC\235\273Z\304]=\315\273\305\273\200\367\363\274\205\242a=B\024\204=;W\035\275\354IN<7\250C\275/\377\303\274\033I\253<\313\341#\274nC\000=j\223\212\274\n \007\274i5/=\177\372;=\231\021\202\274N\033\341; \302\255\274\034\352\317\274gj\376\274\010\337\227\274\276}\202<\026\035i\275\372R\345=\217\3708\274\234!\277<y\033E\275y\r\233<\rt~\274\n\\\305=K\020B\275\300\203W=\227s\215=\230\031\"\275\306!\214=\3411\224=\331\315\266\275Jf\334<T\314\037=H\242\267\274\326>\305=\324H\024\275En\342<\304\226\241\275\034\252\023\274\351\326,=\013J\025>\021\024\234\274\314\317Z<\3634\233\274:y\025\275\\a \275\336\222u\274\241}5=\211\202u\274\235\017\230=\037\3209=K\274F\2736\332\300\272|\313D;+\333)<\3507b\276\252Y\237\272\305D?\275\354\232\236<B\000\372\273|\356\275<\264>\261\275:\252i\273M\272\214;%\344\315<\242\303\332\272\214\2124;\2309\215\2725\300Y\274\254\2678:-d\335\272\365\233\215;\337\342\300<\301S\261\273\205\225\2669\271\275\250\273\n\355\026\274\311s\337\273\034\215\361\273\032\nc<\373\021\336;\227\264\236\275\337\211\242<\234\235\300;l\033\226\273\325\310\333\2744\037\325<s:\260=\374p\250\273k\226\024<\0235\354=\267\276\321\274jR\214\275\302\324\021>L\017[<W\002P\274\234\323\">R\333\232\274\340\215\255\273\310\347\261;G_\201=\334Dc<\0363\372\273\262\270U=\342\0367=p\235\375:\325\235\237;\202\031\225\273\374\205Z<\022\302\351<\324\316\255;\001\356\226=7\344\034\271\2416V\275\263l\302=H\215\026<oQ\313\272\204za;\222c\032<\021\341\033=Mo\032\272Y\272X=\322;\234<\333\246\267\273\007>\225<DJ\006<\330\231\207\273\250\240\325;fD:;\303\355\2709\307\314\300;f\255\306\272\270\327\347\274G\354F\273\n\271\335\2729D\276<\006\300\037=\353Z\326\273\335\273\013:\321*\343\273\225\007\345\273\033\300\311\273\264\242\331\273B\341\025=\300/\277<\307\034w=\206\303s\273:\324\251;,=7\274\321<\212<G\313 \273.\210\352<\257\212\"\274\005\317Y<S~\232<\273T\377\273Ex\021=\037\003\014=\205F\232\271\004V\227<K`\034=\221`\324\273\371g\275<\003\223*\274$\254\002\272\232\364\221\274`m*\2735\215.=\331\263]=\200\363\271\273\232\342\340\274\017\032m\273\332C(\274\352\344@\274\304l1\274\260\212\266<\316\307\023=q\216\353<h\003\240<\220Z\016<=\267\224\274n\t\371\273QaR;;e\211>\225\341\360\273Yl<=\220\261\210=\305JZ\275\347d\324=mS\363\275\323\010B:\306U\027<4H\230=>\245\317\274f\313\223<\244\247\237\274\200{\022>\036\t\224<\353\357B\274\211p\374<H\266&<\nH\362\274\231^\027<i\007A\275\276\371G\275r4H\275\237\377?\275\255#\001>\250\220\332<\241\2301\274F(\006>T\233\001\275\337\347m:\002\215\230<\274|\022=\001I\004\276\310\370\214\274\256VF>\223x\\\276\334\272\320\275#b\265\275\240\\\010\275\263\010\022=L\007\r\2750\245F\274\362\373a=\351F2\275\315\334\030=\354\000\312=_\034\202=\030\'\323\275\340\361\367\275\022\347\226=;\227\312\274\t\010.=\327\320\325\274j\030<=\222+\203=#\374M=\262A\025\276/>\345=*0\277\275VN\340\275\201N*=le\255\274p\265\252\274D(Q=\01604>\353yN\274\225~!>\006\025\245\272\375\277W\275\362\254\267\2753\r\206>\023\325\035\275)7\334;0\006\246\274\337\2703\275HT\007=q\326\307\274\271\036\340;\352\304\032<,\360\217\274\305\223\021=#@*\2756o\336\274&\321s<\353\2667\275)C+\275T\034I\275\367\001(\275\003l\000=\2453U\275.L8>_\267\240=\301\246w\274m\013\205\275\225`&\275\252\204\311\275\322\021\021>\216Z\267\275$\306\230=5\317\366=\225\r\210\275\244\310\321=z9\r>;\260\372\275yoc<\024\223\275<\213\211\306\274Oly<M\213\303\275?v >Kn\005\275\274\237\330\274\240\264\273=,)n\275\211\000\006\275\034\240>\275:\377\363\274\224\033c\275x\376e\275\022{\204\275bR\r>\354$d\275\211\355\005>9\020\240=\225\007\355<KE\024\272:w\251\272\244\373\361<\211Os<\232\241\252\273\367\253\353\275xA\343; \342&\273k\277\037\273\2423q\276m\255\216<w\263\276;\363\340\362<oa\264;\221\004\000;\362\213\023;\002B?\275\212\316\266\272\307\233\216:\235\201h\272U{<<C\211\'\274(\\p9\204\3607;g\275\240\273\204\224\203\273K\005\013\273\345\241\222\271\367\232\002\273\005\236\264=>;\267;\n`G<\217y\205\273\232\242\036\275\201\246\246=8\010\200=#\323\326:.c\346=\354\324\023\276]m\371\273\231\235\000\2776\0338;\355\217\234<\361\016\022\274\037\347\010>\240\335o\2741\317U\273\266+\234:\262\246\256>4\257\344\275\200\220^<K\323\306=\274\210a>zy\224;\25105:\376\222U\275T\231@:c\252\307;hY7<\206i\026\276\321[c>2\302+>\356\027\335<\013\033\014<\336\354\350\271&2-\272\275\263\'=\204l\037\275\233\'\200\273_\021\325\275\212\223_:y\262\336\272D\227\267;\226\220\362;\3409\254<\026\326\030<|to<\010\335z<c\261s;\320\007\014;3L\256\273<+(\274\004\352\001;\252\0203<\001\231\017=`s@\274\333\247\2629\252\005\n;\270Q\301\273~\207\205\273\227\232\352\272*\277\035;:\263\251<%\310\336=D\036\302\272/\376\212<\t`M\273=\364\253<y\327J=\230?\301\271wM\307:\021:F\274\345Q)<@jB\273\232\240\376\272\036\314\316<Cb\272<r\360N=\306Z\204=\312M{<\210\034\035=,[\010\273]q\025\275!\373f\274\215\323\r;Gk\242;\013Y#=\311\025)\2748\347\021<&2\243;\014M\344\273\305#\210\273Nr\245\273\024\205\326\272B:\002=\315>\207<\272\2400\273W/\341<\304\270\365\273\313q\032;\0234\211\274\260\323\302\273\210\256\204\272\377\331^\276\334HB=;\227\022\275\243\254\215=\252\245i<\331Go\274\346\367\251;\020\352 =v-\227\272\3278\030<\033\213\030\274\343$\253<\007\320W;\361`\355\273\330\344\323<\3560#<D\347W\2748\354\200;\nC$\274\262d\337\274\352\232\312\274\232\354\261\274W\357W=7\016\367;p\347=\276{\244p=\n\272\337\274\360\037\242\2727\030R<i8g=^\020\270=d\010\275\274@\227\254=\214\204\322\274\224\020\211\275\311\374\002>\265T\032>M\\\361<\266\035U\275\201\034\024\276\215F\246<\3436\273\274\2076L<o\236+\276TLz<\324\2530=o\014\375;\220r)=_\251\034<\332&\002=~\245\206\274\211\324\252<\007B4=P\322\264\274\0253g\275K[\214=\374\377\260\275,\320\340=\245\274\t=|L\020\274 0\346\271-\"\275<\361\261\300=v\215\247\273g\271\037\275t$#<\034\002\017\275\206(\337=s#?>\257!Z\274D\376\245;@HE=\332\2521\271\3473\226<.\032D\274\277G\257=\0215\354\272D\034\003\2745F[=\253\226\365<OV?\274fo\014<\320\326M\274e\336\236\274{\307\303\274\'\365\234\274\373\3401\275Zr\257\274\343r\352=\334\351\335<\n\236\302\274\306\265N\275\247c\005\273E12=\341q`=.\305:\275hv\252<z\313\204=\275)7\275\020i\251=\357\017\320=\202\214`=\332\266\310;\215\025$=t\376\317;\350\372-=XD\031\275\212)p=\370\362\230\275\240I\035\274\270\214|<\366\026\312=\261z~\274+\246v\275w\325\271\273\224\353\355\274u8\004\275{{\024\275\305\006i=\257s9\275\220\213\260=I}\303=6H!;\235\207\256\272l\ni;\267\023\020;\346\244\t\276\246\272\254\272\034g[\274CfQ<\270\375\256\273\021\277\023=\257\336*\276\254\246\217;q\232\225;\213\234\233<\346.+<T\331G;\016}i\272\312\346\342\274\236\255\r7\032\005`\272%R\024<\356\227\265<\334\315s\273\036\364;9\337\377|92/\306\273\340\"p\273\352\374\266\273A\227D<\236j\177<\'\344\370\275\337\356\037<\343\241\337\271\247\301*\273\361\022\214\274\241\"\221\274\223\255\017\274\205\025\202\273\2126\325=7\310\016\275\253}\235\274\266e*>\244\217\273\274\336C|<\',\312\274\3126\027>\013\375\324\273\020\244\242\273\3241\243;\006\371\317\275\371\367\315\272\n\357d\273u\356\226=<V\320=pS7<\230\314\332;\260\301\207\275zlh\272}\207g<h(\271\273\371\343\216\275H5\214\275\253\300\273=!y\004\276y\336H<\376\267\270\272@\372\274;\237\312\304\2714\301\312;\343\312\332\271\264\014\211<C\251\020=\202\377f\273\\0\275<\230\305\212=\237P\356;\273B\351;\225\373\221;h\370\225<#,\241;k\024\260\272\271m\354\274\320\2622\273\341eG\272eF\n=\002\345\230;\313\354\241\273\244\250\0359\367B\336\272+q\221\273\324\243F\273z\355\230\2735Ob=\036B\035=\305\322n=\320S\001\274U\371\300:U\010\010\274UE\313<d\223J\273\007A\262;\211\022\267\273\270\326\207;VGl<\204\336\255\273;\267\277<\007\362\353<!W\264<\264\004\226<\271\013\021=8\022O<\263\020\312<\213\302\016\274a\304 \274\341\357\242\274s\314\316\272I\267u<u=.=\022.z\273*\210\256\274H\2514;\343h\336\273\306N\344\273\302\205\r\274\264\274\267<\322\031\200=\2134\361<\261\364A<\322\250\276<\270,\260\272)\313\020<C-\002=\014\265&\276\200X\260\273\340\033\261\275 \227V<D.\025\273\260D\263<\264\203\020>2b\347<\274S8<\224\300Y=;\201e<?N\221;WH\316:\364\\\203\275\001\206X;\212Cs9\017\361\254\273\304&\213\272\232\266$\274X\300\366\271\236C\227\2700w\324\273\006\nW\273$b\327\273BC\206\273\224d3;J\264\001\275\327\300\000<\264k\027:R\270\n\274\035\t\214\275\214*\375=\270\225\321\273w\2321\273a\216\177\275\035y\n?\317\344\032\275\034\322\315\276h0\313<\341\331\024=zp\257<uW\225=@\3252\274\033\356\335\273H\217\303: \211\007\277\357$\237\275\377\2510=^\010\242\273\200\264\246=\242\031]\272\r\020M9\273\212n\275\207\334\375;\273\200\250<*\350\261<v3\005\275\347gg>\363\232m>k\013.\277\271E\300;g\267\253\272p\275H<V\003%=\242\247x\275\004l=\273_.\221<\031=T=\366\345\356\272\260\030\001>\020V\352\274}&\003=\010\252\227<\034G\327<\306%\233<\365\315\336;8zZ:\205\361\243\274\022w9\272\334k\320:\327\350J;u\276\013>\264\000.\274\246QS\272l:h\273\234\241\004\274Tl\205\273\024\205\316\273\001\354\216=\030\342\203=\274\262\213=\024\031w;u\n8:\225\272\022\274p\277|=\006\221\017=W\230>\274\276\000\346:\2079\215<_\331A<\301\270-\273\202\201Z=\032\314\010=\371(W=\3077{=\326\032\331=\226\226\220<\215\374\203=v\222\010\274\232\264$\275\0165\216\273V0\r;\220_\365<\036\244#>\201;#\274\362\344\272\274\345\327\026; \237\016\274\305\302\251\273\014qZ\274\\\304\221<\037\374\367=}\n\017=|$\326;\334\264\317:\235\031\004\2758+\031\274\241\376\014\275g\255\205\275d\233\'\274\224#L\275\243\240\003>\312\211\232\275F\270\220=\352n\245\27413\214\275\311\341\177<X\240\305=\232\224\243\274je\264<\300\243\362\274\370\244k=\t\005\252<\206\177\306\274\303{;=;\341\022=\356\007+\275U\216\177<i,\034\275\356\254\214\275\207\321\200\275y\217\223\274Y\223\016>\315\225\013=\007}\326\273\025\216\323=\373\263#\274\355\363\020\274\320\235\247\275\330\251\335\274\310\035\243\275\017\240W\274\027Ra\2752-\255=b\210\027=\225V\322\275,0\224\275|.\212=\000\314\311\275U\233\n\275\316Pl=\n\020\203\275\345\376\014<-\207o\275@\320\232\275\tR\205\275`d\335\275\2454/\276\001\027\002\275:\200{=\262>\010=\300\004!=\022`v=~\331\323\274\215\032:\275#\371\224\275\227\356b\275\335\235&>\364\033\223=\035\217\013\275N\232\327\274\365\004\334=\253\030\373=8\362i\274h\002$>\303J~=\3442\220\275\0274\306=\033\004\311<g(\000\275\375\335\':\312\373\203\275\234 \214\274\274\005g=.\363\003\275G\326\246=l\252\373;W\243\200\2744\267\222=\214xs=\023Y\034\275\016\367\302<\3749\200:\216*i\275\226\230|\275m\3747\275\230\260\323\275\330\220\"=\220pd>b\022\036\2751\3645\275.\266\300\274\"-,\275Y\253\034\275\336\371\035>_\214\260\275r\363\007>\246\216\374=\347\214\251\275\244N\033>]\336\264=\033\254\312\275\316p*<=\336\376=\324~\024<FO\373=\242\365\370\275\317p0>\263\300\036;D\354d<\271l\256=8Ij=\260\3442\275\020m7\276y\016\345\273\274{\227\275&8\245\275\253<\177\275\223\356\017>\343\n\005=;\3524>\014\213\006>\004u);o\276\204:\276c;\273\023\230z\272\365\260*>\202x\343:\251HD\274\224\230\241\271\234y::nk\213\273\234yL>\367\335\251\273}\233R\2725/(;\037\235\002;\026\262\332\271\0333\343:\316\202\262\273\333\002\263:@\021x\272\260\224\246:\262;\035\275+\376z\274\257h\261\272r\")<\316(I\272f\242\n:\010\205_\272\340)\004\272\224\317\247\273\330\017+=\203\246-;W\357a\273N\205\301\273\030\253\246\271\314\212\013<l\357@\276\243!<\273\263\260\261\275P\244\222=N\3453\273\3578\201=\303\000\255\275i\247\310\273\023l\245\272\270Fc\273`Y\324<\377Q\315\271\251\314\210:\351\256\223=\224A\371;L\261\321;\272.\347\274pT]\276\007J`;\273\246I\272\r\372\010<d_b:\355l\000:\340\\\244;R\035\243\275\361\306.\273\005\267\274>\223\361\000>\260\017\227\273\214\270K:^\347\227\273\223J\2069\312\340-\272\n\222\327:\277\220(<\2449\317\273y,\3359M\313K\274P\3165\275\313\315\215\273oO\341\272\263Q3\274\034\237T:\242\321\003;2\300\252:8\377\275\274+\252\r;\0367\024\2730\317\312;v\367\23493\362r\274\257\311\243\272\'M\032<\020e\207\272\300dn7\351\037H\272\267P\200\275~\360r\273\241R\246;\335\302G<J\276\343\272r\307\3479\321\225\277\273\027\236w<V\036.;\255\375N:.\255H:\032\025\325;b\265\307:\312c\002\2747)\230:8\036\372\273\377\"\366\273\305 \344\273\215\"^;\304\311K<\236zz:\270\232\275\273\255N\342:Y/\037\272\304AX\271\262O\300;W\"\210\274\311I*\273epJ<`\001y:^\336%;\202Ci\272\230Ei;\"=\314:4\005\232\271\320\\\004<\241\277\333\273x\361a\274Y\300\315\273;u\021\275*\222\303\2749\224\241\273\243HV<\226M\205=w|A\275L\214\277=TRz\276\351\013\201<5\363\246;\330\035\177=t\323N\274y\177`<\252\333~\274\374\000\316=\271#Q<\250U3\274\371\307\372<\317>\226=\004\206\263\274pL\347;X\220\376\274\350\026\035\275p\246\033\275vR\357\274\200\372\327=\361\233\275<\242i\326\275n \364=dT\356\274\270/z\272\231\310\340:vrV=\326\340\207\275\253C\251\274\325\302M=)\241c\275\010:\023\275\376\205\225=-{\275=\354\022D=\303\343\002\275\263\020B\276\364\303\006>\224i\n\2756\273\252<\347\025\001\276\316\2642\275W\272@=>]\230\275e+,>\007\323\356;\3415\033=\340G\010<\2724\035=wah=h6\022<Z\377C\276\354\304\251\275\310!u<\'\243\232\274\017\225\n=\263\352\204\274\"@\203\274\016Y\306\274\242\020*>[Q%\274q\260\026=\357\333\261=\')A\275\000r?=\002\212\003>\321\337\241<\214\276\273;\237\035\202=\305G\217\2746\032\317<\243\275\236\274\267\376\365\274\370\326\313\274\013<p\274\325<7=y\323\252=1c\242\274H\326E<\007\317\216\274\367\301\375\274\213\036\035\275jh\002\275\277\007<:\364\343\243\274\374;\261=\300k\274\2744HM\275`\217\242\275>\217\374\274\203w\241\274\215\337\330=\2258\262\275\361~V=O\311\306=2\013s\275$A\336=\032\336\000>a\200\240\275-V\366;1\214!=\372\322-\274\256\227\347\273?\303\214\275\3175\006>1im<+\240\223\274T\230p\275~S-=QP\313\274EM\310:\277\212r\2745\355-\275\357\320:\275\305\224\250\274\027x\366=\301\\\211\275X\347\357=\032\374\006>\267p)=\320\334\343\274j\356<\273+h\221;\230\272\265\276bC\035\274S\356\177\275\364T\007>@\250\217\275\317#\351=\021\2232\275\314\017-=vx\227;S\303\247=`\377\321\274\203\205\316<\231U\332\274\356/\250=u\314\221<\206\226\301\274\275\025+=\305O\236=\217\347\014\275\323oh<=\273\030;\353\005w\275\270\310f\2755\276\022\275Bd\313=\3371\246;\250\037\375\2746\311\020>)\213 <\344\225\353\273h\003\312\275\322d\201\275\017{f>!\212\314\274\262k\017\276\373\201\">\332\263\234;\334\205\264=\245\214\335\2757\225\202=\341^\310\2756\222\006\276le\316\275\266fd\275\223\'\237;`\376\331<x\364\206=\027IY<\211\234\201\2755\234Y\275\331\357/<k{k=\201?\"=\361D\030=\001\333H=+\353\214\274^\0071>\217 \257\274\001\315\217=\207vz\273Fi\206=\354\351\362\274m\247\221\274y\301\r\275\307\253e>\317\216y\274\0220\"\275\333\025p=\370C\222\275\274\234k<m2\034>\032@\227\2754H\336\273\036\344\252<\006\343@\275,\'*=\024b\356\274\021\022\216\275\323\2644\275t\312\265\274\342\223\236=\210\177\332=\276\325\003\275k\222\257<\372aS\275R\363M\275G\211_\275\260\247r\275\271\322\362<\270k8\274\205\3528>hg\256\274\241\321T\275g\375|\275A\025\354\274.:\005<9\310\266=\371\270\231\275\350\243\227=\241\364\374=\3747\257\275\306\264@>\351\343\374=\210\343\316<(|j;}\231\233=\303\201\033\275f\312\307\273\367\216\216\274\370|\014>lE\020<w\360\022\275\362\307O\274d\374M\274k\377\037\275@\223!\276/\265\244\274N\263\212\275\246k\213\275\"\006u\275\322\321\242=\247\326z<B\317,>\000\225\005>fZ\272\274#\266\256\273\334/\234:\001\233\331<\356\222i\276-\277\334\272\2420\321=\246\2242=\001\244\355\274S\306]=i\264\210\276\206\251>\2758\000\262;X\212\023=\350\274\261\274h\374\007<\306\345\343\273\302i+=M\032\274;\325\216\376\273\325)\223<\222\212@=0\272h\274\231\375\037;\306z\222\274%\367\330\274\260\027\317\274[\255\255\274\\\\d=O\000\341;\001v\361=\265as=P\367\210\274\020\022N\273\343\334\324;\226v >\345\356\202=+uu\274\200y\352\274hdX\276\317n}\275[\240\007=\234a\207\274v\2774;LkS\275\335\274a\275\226\376V;8\215\241\274p\006\337<\305xS\275\235\324\242=9\\i<\316}\215\274\021DX=\220\250H\273\223E\256<\317\267\033\274\353$\013=\374\302D=\031\036\021=h\304\n>\275\246\031\276\314\365{=\346\003O>l\004\275<\316\232\324\273\313\344I\273\207\371\300\274\233!\303=\023@\247\273\375\026&>\036|\347<\216\257\336\274\3613\223\275\200\336\341;\245+u\275\312\314\322;MD4\275\312 \301\274\003\250\203<Gq\034\274\244\236t\275U#\020\274\036\022\n\274\333\'\010=\303\177\210\275\323\340T\274\210\270\256;\275r\255\274\030\314\247\274\007\"\320\274aj\273\274\nh|<\247\001\017\274\304\364\244=\267\347w\274\001\275\345;\341\353L\275&\n;\2744\343\215\275\034H\243=\366\361\024\275r\325E=\226]H=\237\352\022\275\006w\204=\327q\324=\306\357{\274\375H(<5\200\034=T\234\321\27472@=\227Y\003\275\000\004w=\023 ,\275OI\003\274K\350\262=\306\326\374\272\006\316\201\274\027\017M\275\222#\200\274\351\357\360\274i\206\006\275F\251\032\274@\226\022=\200g\274\275\345H\216=\266\266\020=\261L\264<b\331\352\267\250\206\024<\352\342\'<]uE=^\\\347:\031\300\327\275\244l\321:i\023\225\272U7x9\333+g=\263\r\233<\270^\355;\320bm<z\364\313<\364\307\013;\273U\240:\372C\323\275P)\3477lqF9\314\026?<W\034\337\273\203w\2339\212\010\3268$j\344;\214n\2568\226\240\023:|\306\021\272I\031S\272w)\027<bI\177=(\n\236\272\240\177\246<\376\301\216\272\346W\224\274\022\360\022>UX\370=\264~\217\273\362\330\370\275\3515\265=\006I\267<\213i\327==\006\217>V\220\263<\216\244\275\274\273\301\337=\'B\312\275\343\005j\273\340\275\014\274:\372C>\220VW\275+\367y<:\357W>bj,\275O^\311<\t\001\006<\327\266\277\275\247\003\017\274\346E\246\273}\215\301\274\252\0200\275\177ul=\0274\264=\2129\010<+\\\233<\007\277]\270\351\025\216<MY<<\327\341\026\275)\345\026;\200t\241\275\030\270\202\273\260\266\031\2725\357l<,g\376;\007*\355<\375]I<<\020\273\273\037\356$=\262n|;\300\364\216:\"j\302\275\226\303\250\273a\303\2319\177\273==\307\270\321\273\024%\3529\263\232Y9\274R\213;\010tm\272Z\310X\271_B\342\270\007\"f\273\222\317\315<\250\304\243=U\246\'\274b\313\336<8(\311\2726\013\207=\322#\210=\026V\205\274\010[\313;]\313\264\274\207\273\276;w\235b\272I\326C\274\037Ua<\024RY=\225B\016=\352\202\361<\355\306\026=\367\353\r=\267\317<\273\242\201\217\275\0205t\274\337#\330:x\367\016=\177\345\300;\001\026\3359\316\271\031\271[\007\027<\034\362Z9\257Ya:\">\223\271\014r\240\2739H[=<\235\307<o\232o\273bS?=\036\026\2369[\245\254\273\204Ss;dU\240=n\360I:8\317\377=s\362\240;}\002\223\272\357\036C;U\370\017\276\211\017\214\273\t\027\n;\210ru;.\371m:Os\270\271\217\327\336:H\330\026<|\025F9=u\267:\245\250];0\034\355;\266\337\266\273\252\340\002:\346\177\000;4f\3149V/\241\272\235\263\354\270O^\222<\n\204\005<\346$H>\274\225\345;\371\253\003<\302\3705:N\031\301\273\005\243q<~\252\270\275a\272\365\272QU\212\276\221B\262=Gzq\274\021u\270\274j\317b>vc\034\273:5\270\274(A:;\002\014j=\220\272\004:}\270<;\276\254\366>\215\323\005<GnJ\274\235o\006\2756\332\350\275\266\2668\273+\223\2769\321\272\353;|\210\02294\322|;(1\321:Hv>\276w\233r\274\024\346\t?Yi2>~\233\213;\250\215\0049\334\262\021\274E\254\322;M\375<;\331\017\201:\331\355\221\274o\037\263\274M!0\272\225g\204\275 \250\322<c5\253\273\207\3713;\227R\235\274\227\363N:\315\261u9\304\350\276:{\200\362\274X\215Q\273M\210\342:D\377\317;\340%<\275\321\304\006\274t\313\024:\314)\255:N\357\216\271r\354\225\272\025\006\221\270t\233\216\275\224\356a9\225{q<\305\276\206<\274\016\032<\227\255\341\271\257\t\353\273\341 \023=\262\313X<\375\206{\271\t)\004<\226r\305;\265\370\302\272\301N\017;\265o#;N\240\212\274\275p~<]\241\332:q\251\225\272\335\312\021<\001%t:\261i\267;\274$\216\274.WC:\026Q0\274\234\220\314\274\224X\241\2730i\267;\001\250\";\327\306e9a\234\004\273\265D0\272\350\212\360;\017\320\363\274\'8\";\023z\221;Bk\254<\"\004\241\272\034!\234:D\302\024;\347\'\213\276[p\204\272\341\245\356\274\016G|<\274\233\177\273\323.\250<\3641\t\276\307\224&\271\374 \007;\267bP<\2273\32191\263\365:\345\222\220\272,Z\321\273J\362\244\272\250n\273\272\336o\330;\017+\252<\312\225O\273\341\314\3159\245#\005\273\270\325\254\273tqi\273\264\244\224\273\036\317`<k\014\341;X\212,\275\276ic<\204.\224:pJ\335\272\2403\000\274\355\244\227;\215v\030>\272c\037\273\027\263\350;\326\221\342<\351\267\032\274\353\317\317=\241q\\\275\375\246\000<\023\366L\275\334\206\254=YP\254\274q2B\273\221L\222;5w,>\320\241\333;&\320`<\326Q\244=\350\232>>%l\337;\316H\252;\216u\355\274u`%;\027.\200<\345\317\361\272l\035\315=R\234\000\276\211\022\253=I\253\310=v\321\035<\217D\247\272\352\204\260:\366\377#\271\031X\021=\024$[\272\260J\204\274O7\367<\027\206+\273\211\377\261\273\r\036\032=\220\264\327\272\250\263l;\022\0017:\306\332\223;x\241Y;\036\010\231\272\017\375\252\272\246\277\247\273\210\357\300\272\260\356\000=\245m\006\275C\335\203\2739\241\3769\002\335M\273\001!}\273^\333F\273\263Yx\273\251*o9-\204\247;\323\031B=j\256\224\272\014\002_;c\316\325\273Z\027\020<\366 \017\274\000\312\223<\362:\010\274\276\204*;#|\203<Pe{\273\353\255\247<J\217\275<\314\214\264:Or$<\271\217\231<\2248\322\272b/\005<u\265\325\273\261\033\027;5\022\276\274(z%\273wX\223<\275\226C<7\206T\273\320>Y\274$X\023\272f \274\273/\271\337\273p>\352\273\241\'I<;k\n\274\001\006\260<\225\370s<\373rA<\242m\273\274>\217\335\272\317\3659=\n\354D\276\334\230\341\273\271\3276=\201\276\332=\240E\203\275\212z\244=\254z\375<\346\237\031\275yvI;G\016c=j\272\267\274x-\257<\326\332\312\274\351\3450=\355\022\307<AZ\226\274\007O\'=\307\353)\273F\215\001\275\305\311#<h\352\200\274\211\205a\275\306AO\275\023P^\275\255R\227=_\336\"<\300\223\276\275)\303\336=\3267i<n^\350\273OC\342\275\312V\265\273\200;\216\275w\361\344\274\035XA\2760\312\273=\353\203\250<,F\272\274%\255B\276\340\252\231=\210\233\237\275\303\300\320=\'\324&=R\203M\275DV\007\273$W-\276\221\321\241=\260[\347=j\262d\275\017\234\034\276\247\032\007\273\242\305A=r~\273=\024#\033=\251\3566=Q!\251\274\246\005K>\t\315\250\275\\\255\225=\344\311\006\275\366\022c=\240\030\317\274\371\302\203\274\267\023\352<\265Q\034>\324\376Z\274\225\332Y>\233x\226=a\331\202\275w\322\002=\035\332->4Q\214;\352fc;\210+<\275\355\033\014\275^\323\037=\013\323\342\274\031j\226<_\313\036<\'\344\247\274<\t\177=p\037\317=5[\362\274Ha|<\025N7\274V\3278\275\253\304J\275\347Z<\275>\206\273\275\343\005]\273\222t)>\305\337\273\274\020\350K\275\376\341\271\275\353\353\324\274\262\251m=?\265\244=I\323z\275\030\336\240=\004J\265=&\347\240\275g\307\327=\213\303\350=s\3635\275\2511\273;\007\205\201=\276L\334\274a \313={#\032\275\304\236\357=\360q\307\275\200\200\356\274k\227B<\253\244\301=\363\022\025\275\3203\023\276\372\211\230\274i\346}\275B\213u\275\030u\227\275qHo=\262\363\032\275\232\250\017>\277~\022>\033U~\2755E\326\273*\322\257<\310\036&\273\213\234\204\275\310\321\237:\330Dd\276\013\326\034=\225E\t\275jL\237=\307\331\307\275k+O=g\260\r<\332\354A=J\n\232<\200\3340<\030q\004\274\347=\027\275\330\222\242\273\246k\230\273e^\334<\310rJ=\312LS\274\177\302\235;\233x8\273\356\010\344\274$i\276\274)$\201\274\206\345\021=\211\351\253<\303\202\023\276\016D4=X(@=g?\244;\t\213\321\274\373y\000>\211c\007>\360\207\312\274KDN>\274o\016\276\251\246J\2755\323\316=\263\374\027>D\236\022=\234\010@\275\371\374\301=\204\316\321\275\314x\304\274\t\206|<,2G\275\2046\006\274a\265\204=\213w\031>C\021V>\264h?<\036V\026=\324A\351\275\235c\317;\352O\027=QTz\274\342=\223=\014\310M<)k\245<\337\360\240\275,\005I=\215@\352\273\2340\367<]\2316\274\017\240\272=x~\213\272\314\301\264\2748\2750=/\241\001\275\257=\267=\313e\325=\2247\033=\245\333W<\332Z6=-\300\313<`\224\245<\206N+\274\270\307\244\274ii\341\274+\270\245\273\330b\210=]\3449=m\024@\274\344=*<\352\000Q;y\r\226\274\023\271\245\2746\260n\274\216\262[=\037\320\245<\366\202\003>\3520{=NyA=\025\030\021\275j5h=\305\245W=Y\2629=\3143\004\275\016\341\204;\271\t\207=\007\275)\275\225\367\225=\003j\307=\205\256\224=\345\024\303<\235I\225=K\362$<ID\023=Y\354n\274S\365\343\272\205\201\r\275\213\305\271\273\005\264\322;\210\332\344=(\024~\274\351\357{\275\016\267\236:tX\360\274\322\222\367\274%\022\236\274I\221\216=\032)\026\270\253k\245=\265\314/=*\325\241=\326\306\207\273\320\177\314;){\340\273!\215M=\307\327\032;\241\354 \276\336\307\r=\346P\266\274f\347\351<\377Z\225=\010\204P<\346Ff;\217\304a<Bl\252<\006\010\236;\347\222\224\273\263A.\275\302\374\245\267\350\177T\273z\304\343<\216#&<z\341\214\273\205M\256:\036\250\257;\211l\035\274\217\356\210\273\016\247F\274\025>4<N\007\336\272=\037\376\275d\336\027=Q\211\020\274[<\2408\377\027\220\274=LL\274\035>\343\274\002\205\254\274Xq\025\275\365O\223>\362\367\270<+\031\234>|\022#\275\272\226\356<\n\003?\275P7\271\275^\351L\275\277\3508\274=5\021\274\234V\217\272\263)5\274\216g\353<\214G\355=Aa\210=3Z\373<u \333<~\365J\275\241\375-\274\345\256?<\271\202b\274]X\307\273\361\330\">\031\034A>\237\322*\276)\003\375<H\375\221\273\276\003\007<8\021\240\274\266E9=\250\202\220:\024\200\217\275\340\213o=I\r\270\274\252\033\307=\374\024\017=H5\363<\257pt;\021\2661=\013e\367<\315f\'<I\203\276\273\n&\203\274\3742\220\273\242\354\\\273$t\201=\325 g=2\213m\273(A\225;\256\031\210;\262Lp\273L\341i\273\325\212.\274\211\270D\275\363\213\266\274\243x\227=P\233.=(X\020\274.\254z\274\320\333\261<\032\036S<U\211\032<\367\206\247\274<\225\256\273\200a\030=j\364\345\274\300`\037=\366\346G=\335H4=\207\032\007<Oo:<\311~\306<+!)<\307\275[\274\013\355X;\230a\002\275\341\255\214\273\357\331b\273\021\275y=\355\273\306\273#\270L\275\311\353\351;\014X\366\273\017\330/\274\202&\262\2741\244\377<\022\273\007;\033\246\206=\024mc=\212\"\022<Q\202\253\274J\020*\274S\t,=b\035\220\273\375\224\013\274VY\371\273t\257\271=\342\321q\275%\226\211=L\302\335=y\313\307\275\014\356\304;\233)&=O\313\017\275\277\202\242<\"\222\261\274\323\323\304=\365\375\200<(\010\201\274\233\030\017=*R\014=N\001\373\274\270\252\034<\321\3613\275\"\277X\275\266&Q\275\211AS\275\350\210\331=\230\020\026<\223\177\353<\276\352\265=\372.\213\275\t\374\234\273\2435_\2743E\004\275\372i?=\032\220\234\274\261c,\276\204\347\340\275\231u\310\275h\335H=\003A\301\275E79\275\260\346\261\275\275\351)\275\274<\305=\375\333>\275f\025\035=4\2441>\324\235\210=\3446\220;\246\352\007\276u3}=~\264?<\200\3274=\331\237\343=\356\0204=c\033\\=b[#=\242jQ=\245\3645\276\223&\302;z^\212\274\023\342-=\233\035\304\274\r#\345\274g\226g=\\\250O>\277Aj\274Pv\341=D\201z<\231Ek\275\201\203\274\275E\206\375<\2516\330\275\336\0359;\314\371\250\2745\231p\275\342\201\327<\335\236\325\274>\370=9\317V3\272G\252\270\274w\256F=i\377\256\275\357\260\347\274\372ix<Gn0\275\003\0056\275\301\277P\275\350\001\340\274\264\256\014\275U\332\377\274c\310/=6/y\275\\j\271<\007\251\322\275\333\204O\275\312\326\201=\3279 >t\350\331\275\377\237\005>\215\037\266=\211\335\223\275U\014\300=L\177\332=\272\327)\275\210@\3449\350e\223=x\256a\275\320\027l\275\363n\300\275\343\025\032>\351:\\\275\277\352\313\274\263\373\234<m\337\303=\251\217\014\275O\364m\275w\345\350\274f\315q\275\305\232n\275\245)\265\275S\235\326=\002\274\263\275}\313\021>|0==pZ\377<\023\356\355,zKe0\361 g0\000\223\\1\343\265m/\375V\n\257&gX.\36101,\025/\274\255\261a\004\256\r\000d0T\303\0040@F\272\256\374D\237.\"g\342/\236\001)/\243H\233\260\361^\277,\250\275\234-\016\327[.\030\022?,:\303~.\321sM.\320\213$\256\030\263\251.\206\336Y/\226IA-\372q\355.\371*1/\306\333\3750\333U7.\353\257\265/\3519\365\257\002q\210\2604\215\307/Z\242\257/\017\206\030\260\200\357B\256\233\200\314.\312\343\033\255\357\305\025/\205\203\230-\261\024V0\243G\312\257\322t\0213\202\344\376.\242\247U\260\026\367\245\257\256\000\3451\212\255T\257\306AW1h\336%/z\013\t\2577\022\261/~\005y.ZN\333\257\243\204\314/\353\272\t/\305|\005\256\241\216\031/\217!\2310\236O\2330\274a\240,\234\004\225/\263\320\210,k\257\3050\203\021\2520\355\355>1\373\275\227/.\200\327\254\305\233\024\2566\005\250+\007\314\367-BF<,\212\036\2530E\006r0\002/\327.\302-\333-\304ho0eeD/\n{7\260\000 \301)\223\"\343-\034\322g,m\321\035-r\223\206.\266\233\263.\37496/$\227\220.\243\177)/\210\217$-/\"\263/\247x\302/\267P\3310\024\010\033/\375\020\0130\205&\265,\024+Z1SNR1O%@0\316%\0130g\371\000\256w4\2530p8\262+0\255A0X\233a/\221\007\0211[\342}1\245,a/:\036\177.\357\372K1\202\010\204/\355x\"\260\201\224\313,\374\330\244-\351##\261T\330\2450\006\322\222.C0\n0C\214\245.<t\375.\200S\212/\300\337\036-\004\357\3170\314/\3050\021\350\2210\315\023k0\000\033[1\nr\035\274\002\025%<\245\366!=xsM\276I\0341\272\210\312\300\275;\030^=$G/\275\245\257\245=i\332]>\242\241\257;\330\r\216;\245P\010=\242\035\002\274\222\263`<\375\343Q\2746\313\311\274\267e\326\272\377\017?\274\367F\372<d\2749<\2702\220\274\355\256\267;F\027|\274V\371\021\2753\311\000\275\004\201\246\274\216\314\t=\205]!<\347\324d\276P\034\221=\256m\251\274w=\007\273S\207\340;su\241\2748\217\253\275\227\305\336\274\275ge\275 \031(\275\035-\241\275|aM>\305 \352<z\001\305<vj\030\275\005\3335>\272\331\346\275\\m\374\274G.\222<W\004P\275\003\354\361<\311\'C;`\320\307=\003S\r<I\360^<\020\326\030=\315\010\2748\273bs<\010O\035=)Q\220<o\316g>\334\027~9\271\366\203\275n\222\314<\264CD=5n3\274\337i\034<l\231)\275\312\006\002>O\232\263\273):%>\312\326`=\030]+\275\023Q\037=\333\322s\275\325,r<A\343A;\207\260\007\275\205\355\021\273Z\340\316<\274\334|\274\177\307.=\322uY<\264\236O\274HO\204=\336?t\271\335\335\204\274\330\2041<\335\230\240\274\213\225\330\274\335\277\355\274\225\\\304\2741\317\3639\364]}=t\205\346=\242\310S<8|}=\222\206(\275\034,z<\277\3459\275\250\203r=\033\377,\2758GK=\017#\216=j\225Z\2755\256\265=2\342\240=]B\204=&\263t;\213\\+=\266\312\307\274\355\375\210=\334K&\275\037\014\340<\036\247\223\274)#\006\274\035b!=5\234\226=\n\371\253\274\024J\257\275\225Z0\273\2445\"\275\023\302\032\275\210\327\212\275\312\242\212=\260~b=[\016\307=P\337\236=\320\325.=\374\027y\274\270\204\367:L\265\030\275\217w#=\010\277}\273\002\332\345\275!\n\211=MNL\275\002\021\360=\307J0\276\260RI\275Y@\020<g\332C=\227em\273I|\211<\177/\220\274\261H_=\214\023\206<$\346l\2747\371\016=2\235\203=\036\337\271\274gg\016<\302\231K\274\312\306(\275\233\347 \275)\247\312\274t\221\261=\td\335<-\373=\2766)B=\340\001b\275!\270\201\272\362U\326\274%X\227=\370\277\204\275\230\177\313\274\021>\016>(\2520\274\\\274\017\275\242\326%>\272\261\031>\326\216\025=\331\312\214;\300:\271<\\=\005=\002\214\035\275\021a\346<\313\005\006\275\202mG\275Z\326\273\275\013K\367\274\344\236\217\274\325\275\216\273\225e4=\3536\245\275fD\342<t\203Q=\363K*\274}\200\235\273\320KG\275\335y\232\275\367\207X\271\037@K=\210\341\214\274\232\206D\273 \373B=h\005=>\277\351\023\274\254\327\030\275u\356e=7\304O\275\320\210c=A5^>\202SG=\215\343\273;\321v|=iE\216\273\234I\344<pP\251\274\250\r\227\275\271\220\315<\361\025l\274\344\374u=\262>\370=\013/\253\274\333\273n<\\ \343\274\267\367\006\275E\200\034\275\237D\031\275V\2610\275V\232H=O\233\255=F\r\356<}\220\301<\ra\217\274\222\327\335\273;o\226=\367\373\266=\300L\021\275\206\004x=h\217\243=\353\216\202\275\237\023\356=\254w\257=\221]\206<\030\026\340;\216\363\265=\032\346\017<\322gW<\304u\222\274\010^\303=\320\227\250\275q\177\235\274\210R\026=\215\324\034>\014h\330\274\250\307\267\274\253z\270\273\035\325=\275\235\370?\275\3570\234\274\252\316\266=h\321\213<\017\005\373=\361\025\005>\222F\003<\034\377\2548\223`v<\025X\024=\356@\323\275\264T\363\271\r\177\204\276\230a\"<\323$\332\273S-/\272\014\301\215>)\373\234<\332\317(<Rp\020=*9\226<\232\232s;g\027\027;\373R\000\276\317 \032\273\246\034\255\271\233\212\374;sp\036\275\314L\014\274LG{9N\034\361:\356%\n\274\334\262\267\273\375\336\331\272\036n\246\274\214\240\216<\323\002l=-\006I;\372\3230=\373\263\036\274\211\353P\275N\r7>\301\357\210>\227U\330\273^\352o\276L4@=\305\030\032\275Q\255\016\276\010\324\211\275P\324\260<Kl%<\030v\221>)\302\2119\034\230\342\273\335 {;5=\276>k\036\207\275\332\351\274<\335\017\204>\3250\272\275]\273~<^\265\037<\372\204f\2756\250m;\210\341\230<\023\301\351\273N\375V>R\371\343=\267\342\333>pT%\274\021$\333<y{\202\270\'\020\272<bOU=\322\375\265\274\035\374\261:Y\3173<\204\'\311\274\271Q\200\273\321\314E=\\\032\n\276\310\232\311<\022P\214<\024\230\326\2745\004\316<L\324\010<\305\301\r;\321\300\r\276\310\350p\2748\312\007:\276\003%=\177\202\247=\251\177\030\274\326Cb:\0162.\272\346q\357\273\356\261\217\273\262\262_\272\244U\022=_\007\207<\013G\340=R\002\255\273\310\323d=;Ms\273;\350\257=\224\017\240=\327\252\312:akD:\030H/<\307\324\363<\373\276\351\273R\304|<\3418\251<(\301\336<D\323f=\351\333u=\264\374`< \216\301=\246\232o\273\321E\273\275\265b\000\275\2568\023:\\\037n=\212\341\333=\354T\r\2741\2428<\036\351\267;1]\032\274\276\223\352\273\234\317\213\2736\275\333:.\325\273=m\367\307<\307\246\231;o\317O=\022g\240\274\321\330\035\274o\350=\275\301ZO\276on\377\273\373\223\"\276\372\320\224=\022\343i\275yp\n>$)\254\276\377j\244\275\320\320\0219\273\264\225=\265)\212\274\237\307\216<V\273\242\274v\242\313=\312\330!\272\362z\231\274}m\024=\312Y\257=\340\242\330\274\375\265<<kD\375\274\220GE\275\026\267@\275l\010\n\2757\013\365=\354\023\376<\037\271\214\276\247\016v=\210Mf\275\021[/\272\356\035K=l\260\310\275\017\310&>\024g\235\274\351\376`=\215\372\026\276\222\257\033=\277\200]>f\2177>\226\'\254=G.\353\275\037\207\230\275\240_\226\274\213\275-\275\225w\023=\227s\304=4\021\301=\246)\233<\023\000C\275\326\3122>\373\306\274<\271\010M=\3708\302;6\312\025=\033Pr=\303\275\221\275\t*6\276bie\275\304\251\237\275z<y\275\252\260?=Cc\262\274\356\374\245\274\210=\034\273\2646\272=u\023O\274|\306\327\273\230K\237=k@l\275\276\237\031=\003\341\225>q17\275\243\251p9\265\321d=\356H\256\274\323\306\006=\343R\304\274\262)\033>\004\306\315\273\250~\274\274y\207|=\020Z\366\275\004\254\305\274\221l\226<\230\025\230\274\220\271 \275\r~=\275\031\305\377\274\345\253!\274\301\272R=\3508\276=I\001 \274\376\376e<\361\010\270\275\375\006\033\275\326\372>=ka\001>\023V\311\275\314bo=\355\212\363=\226+\222\275i\t\311=\212\2051>\024.\024<\032\372\314\271\312\301\233=7\210\230\274mx\214\275.n\013\275\346Y\r>\2569\263\274\2365j\274\307\204^=u\241\200=\370\225\361\274\213\360\226\275\206\270\233\274\001?Z\275\010fW\275\256\265v\275\317\341\014>\326\022\316\275\321\320\023>\246q\253=\t\221E=\240y\254\267\035\241\237\273\205B(<\361\370\251\275}6b\271\216\304\377=Yh\247;\305z\035;@8\355\272\253\315\213\276\305}\223;J\310\001;\222\223\027<2c\013\273U\230\024:b\3238;\334\n\211;c.q:H\313\265:l\257\022;\347\316i<\316\312\260\273\374\206\3409j\020\335:\022o\202;\264\253i;\221\326\235\270\202\013\351;\262v\206;\265P+>\360\013{;\203p\217<\'\255\326;\223\213\246\273w]\335<\201\365\354\275j+1\272\221#6\276T\243\271>v\277\247\273\241\207[=\316%\003>\022\n\232;\274\216\305\274R\300R\275\013\364k=\275i\343\271\0274\036;>Zp\275\354@\023<N\314=\274\336\201C\275\364\355;\274\205\300\235\273d\342\2209Y\323P<\351&J;x\177\207:\205z\035\273\334>\227\276A\240\023\2744\030\036?\003\377\312=\244\025*<\014N1\271o\014\020\274\004\037\211<}\242\273\2726\n\0179\250\272B\275\264\336\217\274\243\343\217:\013\365[\275\r\216_;\032\207\003;\030\254k;\232\230O:-X\347\272B\030q:\177\363\032;\210\254\306\274\325\235\370\272\316B\351:u\023\234;%\014\003\275R\304\366\273\362\325\2479\016\222\230:\333Y%;\021\351\347:\r\245\310\270\346(\250\275x\231(\273\245T\222\273\366\260\030\274ti\235<\"O(\272\213m\004\274\300\364\"=\352\014\016\273\243w\216\271\216f\037\273F#\007<4\327\031;\236\035\227;\t\033^;j\322\020\2748\006\211<\266\217@<E\321\211\273#vq<\371\3525:V\'\313;\027b\003\274\236\035H:\233Df\274q]\207\274\307\177\233\273\326\371\3179\271 >;2\"\244;j\372[;\030\256\207\272\243\331\364:dp\246\274s\245\005;fuY\273q\207\004=h\334\2479+5\211\273C\270\275;\021\275\223\273\251\2075\272\201\307\261;,\241\257:}\235+:4N\245\273\366\256P\274\014\374\0269\306\337&;\237\227\024<\303\300\277;z\361\005\272 i:;*\346}\271{\330{\272$\027H\271\347\320\020:_b\356\273\327\334\205\274$oP9\r\335q;\000N\2679bC\264:\027\342m\272\312\221\025\270\376?z\274\265\335\245=\326.2;\016b\245;\242SC\273\267A@\271k\343\222<\014\357\321:\000\334\206:;\237\230\275\t\342{>\225\304\241\271\220\377\322=|\005D\276\301/\241:RrO\273a\300/\275\371w\217<f\005\021\271hHI;\241\004-\275\275\277\221\274\202\036\004\274\202\014Z=\022cU\275l\347\276;J\210\3218B\341F\273\273\023\342:\253+\024:\366\000\236;_7(\276\262\224Q\272\375\034\257>\327\257\271=\"\244\274:=\274\0239\023G\370\273V\367\355;D\276@;\2138\203\272\032\014Z\274\227\270g\274\001=\0069\n\226\345\271\213\202\016\275K9+:\3558\211;\331A?\272\022.\220;[\344\236:B\243\";/\253\212\274-(\251\272[\240\035\271l?\007<\033\324\254<b\013\214\274\014}\3439<\324K;\220h\272\271\002\320\215:\006;=\272\333\017;\275\370,)\274\034\310\211;\220\037\202<i\230\355;\335|\237\270\337>\340\273\215\237h<\244\376g;\253\306\200\272\340\333\321\267\231\207\262;9\210\252:\373\203\361;\212L\252:N]\252\272\025\207C<\270\206\335;\371O\252;r\277$<\0376\276:O\317\3239\262\003\235\272\010\347/\271\375\311e\273\325?\342<\035T\204\274f\202K;VN\210;\210\314\207:\276\254\306:\022o|\272m\013\255:\242\201\001\273P\317\351\272\252ml;v\274\006\272\303\2779\274\263c\3469\342\353\014=\244\004\300\275\376^J\273X\272\212<,\203\225=\016D3\275\021\002\207=\315;\313=\006O\335<\320\031\355;\014\\[=3\005\215\274\254\267O<\337\274j\274\235\\n=S%\031<y\313#\274\372N\300<+Q\303<\317\262\253\274\260\307\224;N\021\241\274\215)\024\275\272\336\n\275\t\217\350\274N\246}=\016Z9<\331\221\214\275\237\271\217=2j\314\274\256X=\273kkE\275\213\3008<\276e\216\275\016\022\306\274\373\027\002>\021%\216<\344\000=\275\254\027\251\275;#\013\276\'\323 ;R\030\240\273]\331$\276\037\270w=\003U\000\275\334\336\273<\230\245\007=F.\027=W\321>\275\037\207\277\275\036\020\332=\370\365\030;O#\376<!m\356=ZH\020=\224xO=\332D\245<4OV=\244D1>bmq\275c\"\026\2768\230\n=\242%_\274\265h\371\273\354\r`=\304\203\035>\360p\t\274a0\345\273e\213n=\350\225/\275\001\027\240=z\304}\273\000\014\225<^\357\354;\025\251.=\017\332\250\2747\267\314<\217\244\216\274\316h[\275yWc\273J,.\274\'\377.=BT6>\314\316\233\274>\r\007<\347\245\320\274I\217\350\274\374\013\r\275{\354\321\274\243\263J\275\351\250\321\273\224\212\213=\004|\306=\370\316\344<\363\360N\275\341]d\274\20523=e@\361=7\274\211\275{qF=O/\203=$\374^\275\224w\265=\263\301\265=\000\223S\275[\332:<\323\221\204=\247Z\273;\360\351\226=\0168I\275\3721\302=\220\314\213\274\240\013\325\273\342\273D\275k\3329=\224S\305\274\270\356\327\274\026Z\217\274\207\327#\275\251\350,\275\306\351\023\275\223\261\267=X\246\016=LR\331=6C\221=&\221\350\274\351\216\212\272\3669\247:\336<7<\252\356\301>\331\347?:l\344\244>\314\227\266;\236\021?\273\022\236\210<*y\223\276\263p\335\274e^\360;>\241\347;\220d\021\2734\021\336:\356\226\260\271\313\250\260<Io\235\272l\004\271:W\366\244<\031\220U<e\n\216\273\320\262\005:_w\324\273;\"\330\272J\206\226\272\204\225\202\2735\230e=,2]<\362N\345>\333#E=\374\026A:c\n]\272\020\202\213\274\033\204\377=\311\333\224\276\217\r\215\273\341\301H\276\177`\030\274_\'\306\274\341\305\221\275\204o\377=<\331#\274\"2\257\275\310a\246<\024\277\315=Bt\t\273\360\317U<\370|c>\303\335\037=\264HS\275)z\223\275\302l\246\275\331\233(\274y\255];s\036Y<_ER<\021\331\263<\261\212\365;.U\252\276\024\005B\276\217{\301>s=\264>\032\030\025<\332\374\236\272\364\257\010\271\357\323\207<XuR=\026Z\0018\265m|<\231\365\256\274\363\253\035\273\001\340\021\276\213\336\232=B\277\006\275Q\304\310;3\270\034\275\321\345\027\274@N.;.\231#\272\022\031\204\275bC\273\273h\254N:()\256\273-$\267\275\310\311\267\273\222\030~:\2141\337\273\336K\321\272uf\336\272\314\322~\273\204\347!\276\210\276\301\272\337>!=87\245<\377\360\000\273S\021\306\273\230U\004<\333x\251=\223\202\010=I~\225\274\"\260D;\013\346Y<~\n^\273\315\226\375;\004\002\314<@\350\216\275t\253\312<\213-\337\272\323!M;-\021\033\274\240\2579\274P\372\344<@w6\275P_\305:b\2249\274\n\211=\275\234#x\273\026\205Z\274\345\\\244\273\343a\'\273\001\r\203\273\310\\\245\273e\367\272<=\266\224\275\352E\243<m\004-=:\217\245<t\3327\272q\333\250;\020\326\271\274Ut\024\275\267PT;\034+h\275r=\305:\303\300\307\273A8\370:\237\037\305\273\374\242+<\363\003\250;\332\231\037\274\277\357\022=\016\253\327:\253\342\222:7\324\202\275\363\264\256\272\235Y\013\272\200I\362<\000\\i<\n\353\t;\2006I9?\327Y<,\250!:\\\251\227:\030\342\307:u\253\317:I\014\206<\244\340\010\275\265\231\223\273\365-\203<\023[\352;y\376\236<q\307\266\274+\371\221\275\355\202\347\273\343f\306\2751\036\352>\217<0=f\371\210>\263\275\230=\3524\207<x\274\031\275j\037\310<\224\336\243\274H\207i\273x_\234\273(\327\036\277\241@\320\274\2758\357\273\245\016=>\261\271!>B\215G=\"\271\265<\031eK\275(S\314\274\372\207M\274N$/\275\007z]\275\355\273^\275\376\227z<\037F\251\276/\317\363<7\214@\272\346u\013<\260\334\n\275\335\371I\274\235\r\210;\265\014\200\275H\221\000<D\342\271\273\341yQ<\017oK\272\223\205\237<I\377\322;\245\356\250\273\253NP=\260\352Q;\220I\223:X*\322\274\226\342\006\274\354\017#\272$d\206=4~\303<\357\251\r;\320\363\341:\325\230.<8\366\3339\010\356z:\030\210\350:\345\347B\273\021V\177<&\321\000<\37613\275r\304\250<\320I\032\273\'*\225<\307\362\224<tD\301\274\221hL;g\203\312\274Q\264/<4o\330\273U\"\211\273*\302+<\251;?=\000\337e<\372\301\000<\341v8=M\201_;\355*\014\273\021\023\010\275c\335\237\274\031\023\210\272}\366\242<\332^\346<g\376\004;\306U\213\274\213\325v<D\014K:\031\325\203:\310!\251: \005\030<HU\033=\374{\233<\366=L:\343\343\013=\203q\221\273U)\223<*\354m;yA\205\276\275l\021;6\361\204\276\276\362+=\307\251\305\274f\000\036=\346\347(<\206\365\356<\035\253\010<\275\240\023=>\213\252<\274\375\347;pE\252\273z\306\206\275\332Cs\272\337\3450\273\370\352\301<O\325\230<\353B\007\274\315=\364:\361J4;\221\340\214\274]\343D\274`sN\274l\306\324;\321\201\003<H2?\276\313\030\006=\017\205\250<\266\232\3119\373W\273\274\366\345\024>\271~\255=\246\034\274\274\257\350\241=\244Ny>\260\376o<a\274\355=\245\026\n=\307\215\032=\342\317,\275\001+\275;\240\375\366\274\031w\205\274R\347E\273\226%\r\275\247\332\344\274Z\257\017<\350\335!>\255\262\343=\235V\257<\312)\341<\316\316\336\274M\346\363\272q7\301<\027\366\217\274\274 \006>A\350^>\220\030\320\273\316\361\n\276\262\032\034=D;\237\273<\217\320<\376\313\\;\350`S=\034\203\277:\207X\270\274{vU=\241\257\272\274\224B\002>\340ID=\264\234*=\243&:<\331\351\320<\212\226\367<\227\333k<N\307\341\273\241\363\250\275 0\023\274\247\n+\273`s\205=\327B\217=\000\024\373\27388\253;!&|7Y\274\"\274\007R,\274\247V2\274\315\007\343<(\2017<\t4\270=\003\260B=\350U\261<\327\347\255\274\256sa=\027\3423=\353\377\272<N\037\216\274\221v>;x\2601=\233\234\367\274/E~=\240\212v=\340\203\250=\310\320\253<BN_=\233R\251<\303\374V=\337x\n\274\020x\223\274sN\r\275BS|\273L6q=6\250\364=\021;,\274\321\335\036\275\351\305\376:=\355\213\274G\227\241\274`J\274\274>\003\007=Oc\330<\225\350\217=\300\016H=\277\315\374<\356Z\003\272\234^\212:\321\020{;%\246o>H\004\247\271\340e`\275\"\365\377;\261\207)\2733\314\267;\222\366\315\274\232\302\203\272u\317v;\352g\231;\365\254m;HSu:j!5:\3102\033\2728\035\265\272r\223\26797Y5;1\033/\274\315\354?\273\026hx9\006\203\275\272\324\274]\273x.>\273;\337\322\272E\340\314;\014L\273\271\241}\305=\212\276A< \245 <\241\317\324\272\010\230\354\273;-{\271\013RI\275z\216\313\272\013\364\216=\374<[\275H\345&\273\332Z\022\276)\365\227\275OJu;#\020\214\274B\r\003\276_,\246=\260\320\315\272;\375\211;]\263\317=~oK\275\307m\314\274V-\202=v\251\246\275\372\266\206:p\321C;:;0\274\300wT;\314uB<\240\204\250\273\360=\372\275\234\177C=\352\245\371=\026\304|<\311$\r<i\367\377\271\335\300\322\271\024\221\216;:J\226<5\361\301\270zQ,\275\341\030p\274\270X\321\272V\006+<IW\254<\\\244\347\272s\260\264;J\013\203\274\250\030\221;PL+;\264!1:\234\203\260\273\376E\027\274\003\236\3109&Y<<\022\237N=\3110y\273\242\351\002:l\240\004\273\036\205L\273\332\242%\273^\331\265\272@d\032\275\206\272\236\274\230\205&=\204\372\240<\374\223P<\326gv\273\203,\256;So9<K\257\177<\256\202\257\273\233)\333\273Yq`<\351\355\020\273t\276\030<|\017\204<\t\211=\274\312&\257<\031\036\307;\373F\262;Sa\024<x\332$\273IBd\272\331\003\214\274\315\223\3469\234D%;\262\\\206<\364\333G\273_\267\202\273\023\361;:\013\356\177\273\345@\201\273\022Cc\273\237D\313;\2743\351\274\251n$<bPb<w\rD<o\370\334\273\177\240\210;\025\310.<\247\333\016\276\225\177\013\273q\254$=[\357V=\250\311\014\275\311\275\211=\201\272r\276\t\353\r\275\364\271\324;\264\275)=\357\360\206\274\362\013\034<[\372\000\274\000\3048=\373\357\340:\014\017\t\274\034\275\267<\001\265Y=v\245w\274\024p\214;yd\233\274\354-\360\274b\030\354\274]\261\311\274Cg\210=\016\312-:\206V\006>\256\0102=\361\326\026=\364\tN\270\227\017i<\310 \371\270K\340O=\271C\217\274y\213\201=\241\304\223=d\2074\275P\300y\2757Y\325=\255\262\272<\024\234\240\275\306y\031>n\\\336<\326\r\275\274\350\361\300<\032ZC>\256b\005=\306TF\275\356\340\023=\023Z\231=d\310\211;\211\302\357<\037\315\202\274^\032\013=v\240M=\277\203O;\326\030\267<\332V\026\276\3052r\274$\355l=ml\373<I\331\004\274\316\265q:\265&\357\274n\375\002>|Z\316\273\266P~;?\221\317<\017C\006\275\220 M\2755N,=gRK\275VD\t<\305\245\202;\305\033\206\274Q\002\235<\317l2\274\250\321\237=g\245?\273>\342\025\274:W>=\306;\304<;\231`\274\307z\020<;\214\244\274=\252\271\274\236\266\353\274\326{\233\274\nj\027\275k\225\223\275\207\364\003>\253}`\275\261\302\004\274F\375z\275(\201\237\273\222\'\037\275\266\303\370=\347\226\013\275R>4=\246\254\201=\0361.\275\3034\234=\264\256\311=1x\213\275\310\347\200<[HK=\344\241.\274O\004f=9}\r\275\366\023y=\207\2441\275N\3547\274\264\264`=]\356/\275]\343\212\274vsP9/na\274\335p\004\275\335\001\025\275\027\313[\275\206R\235=\360\322\001\275\223\325\241=;\224\213=\372H\265<\271\214\0269\210\377\2009w&e\271* o\274\016\220\000\270\001\0161\273d\004\226\271\302\267\371\271\353^69\206\374\316:1:!\273\363\263\3478/\223\253\271\0370\205:\320\003F\271\322\221\177\267\"\t>\273\013KG\272\026\332\2548xG:\270?\275.\272\202\356\0139\312\240Z9\301\325\25693]Q\271u\017\275\2714N\"7v\"\2328\340\306\371\271 \n{\274\034\354\3429\271n1\273\320\321\310\272\022ZL\273\004oc<\014\302\034<\\ _\270\377\220\251<d9\227;\242\314}:B\312\236<Z\305\020=\361\272\254\272mMo\274\326\313\342<\004 \370;\265\336\2239\273\264\270:\245\333\321\274\032\331\276\273\370\315u;\031\030\033\274\236\026\336<\364h$7\243Z\3638;\\\230;\006\326r\271\326\345\240\270\336c\030;l\303&\275\367\305\203\274\371\225a<\021\256\347<\t\336U\272\006SH9\t\363\021:Vb(\272\025\n\004\273\367\000\2758\366\221\017\273\361sp\272\020\260w\271\014{\t;c\235\304;\345\2001\273\200\23309\024\362\200\2722\351\230:\370\010\260\271\033X[7\332\312\201:Hi\233\2727p\35086\230\n\271\016_\353\273\277JG9\334\335\2219\205Oa9\260?\'\271*\370.\271\261\231)\270\036\254\205\274\301-\265\272\2318\237\271/\t\261\273.\ta\273|\370\022\272\351Ya:\335\230\325\272\265\236\":\246\251}8!E\372\270\323\\\026\270\346m\022\272\365\320c\272\365`\350:\036h\267\273\2251\3369\274\037N;a\336\321:\"\231\t\274\324v\367\271o\374\223\272\024\273\'\273Yu\3508\r\261\306\273\227<\010\272n\010\0039L\346\315\271\004\377w9\254\332\260\271\266Q\202\271\315\"z\272\230\035V\272$0i\272z\312\235\267\030\254\3278\330\351\266\273*ti\271TV\206;_\303\314\273\340\277s\274\211\332];^\317h\2749<\201\274\237\250\312\271\024\2572\274\301N\256\274\226x\245\273\210\326\244\271\321f\356\274\311\220\311:x>\330\272H\376\210\272v>\200<\213\204\213\273\004X\2269\367]\001\271M%h;\246U.<\222\344E:s\263\202\273\322\307\301;\301a\201;\355\326\\;U\017 \274\334\333\341\273\315\333\364\275\021\3750\274\3152\223\274\217lM:x\327<\271\021-\000<L\016\312\274\027\000\247\273\024KE<<.U\274\207h\357\272\313w\000\274\355\322\020<\202\240!\274\232<\254:]\307\n==\273h<\021\032\200;\004\265\t\273\262QW\274\335\356Z<\006\316;\274\003S\262\275LNT=\037\'\260\273\330\341\242\2705\003\210<\234>\350:\2127k:\375\305\275:\205T\"=\270\242\005\275\3372[<\2155\"=6\374\023\274\000?=:\330\335S:m\340\327\2735\313\202\275\345D\204;\037\205\030\275\271\261\333\274\0046\224:\356\351\036\275\021\204\005\274\266%\007\2744\350x\273:\240\312\274\206f\n\273h:\246\273\326{\276\272\210\250\016=\'w\204\273x\023\3469/\245Z\274v^\022\275\230\325G<\005\242\231:\360&\206\273\301:\321;\337D\260;hi\035;\tXl\274An\217\274\334\270\267\275\033J\207\274\216r\272\274_3\016;\375*}\273\201\277\352\274\006\316o\274\352\346\351:d!3\274\375\333\214\274\372;\0109&Q\034\275\234\374z\273O\271q\274e\272\332\274\243\330\223\274\344\025\\\272\261\277\215\275\364\017\034:\006\316p\273$\r\340\273^\370\3559\342\"\314\274~Z\006\275\204\027\'<g\364/;<\214{\273`\213\374;\312\244\334;\230\2139;\211o\306\274\332I\262\274\036\217d\274:\247*\274\346\340#\275\326\271\021\273\364!\004;\372\013\232\272X\014\000=T\260\346\2719F+9)`\257<\034\262Q\274o\273\326<\300V\372\274\t\367\t\2732{\326;\177\347\326<\004)\262\271.YO;\236\274@\272_\032u;\235.\250;Z\267\337\272\216\227Q<^6\004<0\306\375\273\345\207\3709\264]\210\272#\235(\274!9+\274z\322.\274\032\007\333<\03286<\311\227\241\274Q\303\022=\036\030q:\240\337~:}\360\322\274\307\333\253\274\017\367\n\276\335\2574\274*\242~\275\347S\034>\277\317\270\274Jb\372\2748\245\233=0>Y<s\325h\275G\271\345=\014\273\274;\213\250\367\273\263\346\233<\256\230\n>\255\016P<DK\223<H\0178\274\322m\310\272A<\005<Z\373z<\3148\313;b+\302<\035\301\036=(\2574\272\362\3766\275\237^\317=\337$\341\274\0045A=X\317\213<\234\346&\273+\224\203;\0018\272\273\214\031;=\032>`\272\212\262\314<\3002g\274\001.P\274\266\2703<\026L\020=\304m[\273\003h\026<\262\232\365\271\344P\003;\017\200\377;\364\025\022\273\2362\014\275\002\373@9\327\367\322\272o\017\355<\253\345[=\233\262\024\274(\377\026;Q\264g\273\013\273\n\274SxM\274\207\276\034\274\003\351R\274\020O\215;\355\311J=Z\264\354\273\033;N;\230\302\211\274\204!\211<o\223\207\274\331\237-=\030u\241\274\354\241\242<\204>\346<w,\230\274\236\327I==\247U=RC\354\272\352\005\333<\t\006\322<b\304i:\246\373\235<\271U\200\274.\253\253<:\245\215\274U\316\031\273<r\333<s\212}=\034~\001\274\307_\021\275\234*\223:%\261@\274\211,\213\274\324\331\216\274\277\341\026=\0237\n<\3252>=\366v =Ex\362;0\007\216\273\356hB\274\245h\345\272\345\250\007=\307I\350\271\200us=M\267\n=\221\014G\274\3518 =\211\337b\274\0277\027\275\334oI\273O\324\375<\231o\250\274fsd;z\034\301\273/\344\226=9\027\362;3\307\337\273\014kl<\316w\r=\022\264\024\274t\270\275\271u\323\204\274\242\245\256\274Z\375\244\274!U\322\273\r\3664=\253\006~<\\\307I\275\207\266Q=^\322\274\274\034\220\026<\244\240\321:b\364\201=FH\340\275\355\220%\274\352e\212=T\r\335\275mz\252\2758r\330\275\201\rb\275\277#\037\272L\005E</\245W>\274W\233=\367,\017\274\370\362\217<V\363_=\020\200\364\267\240g\314;\216\032\257=+\000\2318Q\222x\273\2416\263;~\203\207\2744\367\316<7\2402=\237\0063\274@LT\274\352Q\243=\273J&\276k\223Y>\000\210Z<\233A\223\273b\311\224\274\025\337\005\274\"(\223\275K\003>\273/e4=A\364)=5\340\'\274\362\017\267=\020\207\022>\333\256E\275\320K\357\273\256\376\375<\216`\230\274&\341!<\324:\350\273\320\3244>NS-;\216\246\000\274\362\377\367<\236B\324\271\337\321%\274h\315#\272\240j\221\274\260`\217\274\303\232\261\274\232(\264\273\221@i<h\215P<\206^-=\335 B<P\316\300\27448\246\274\264!/\275X\376\315\274A\'\254;\207I\372\274\372\364\272<50\325<\034\213m\274\264ub=\270\371z=|3\245\275\025\313\001\275\323\276\317<u2\232\274\360\032t\274W\234\351\274\304\257\203=+\242>\274\320Z\375\273\035\371\031=|q\215=\341\344\030\274\346\363\'\275.\205\207\274\360/\313\274F:\344\274\236\337I\274729=%\266\300<u\204K=\261}-=Je\242\274a\022\017:K\335\324:\346\021\206\272\237w\351\274;1|:oX\334\274:\036\223\273z\211!:\"\001Y\273\304\260O;\006\222W\273\366\0160\272\377b\360\273-\301\3619\241hd\272e\027\213\270\237\r\220:\034\020\252\272\000\237\2609\226m\3427\366\211R:K\257\022;\024\200\1778\362\346\340\272\021\000\026;\376$\363:\327\020%:\271\2547\273\247m.\273\261\377\033\275\213\231\027\272\337\277j\272\200\373w9\226\230M;f\254\336<\004\203-=\253\232\017\272\013hK\274NX6\275e}L\274\037\225\372\273\271\3061\274h\332K\273\263\376\317\273\333z@=\356\307\227<\220`\261:o\355&;\227\327Q\275SfF\272\276\277\325\273W$6\274qf\010=\237\250,\273\253\024\2207\260\205\220<\270\024\271:\354\3040;\203\342:\273M\214 =\300\316\333;+8\032=\200M\021\274j\023\023\273\260\034\031:\346\225a;\265$\277\272\362$\021\274\016\001t:A\264j\274\242>*\274\233\261\024:\023\252\320\273\002\320\"<\330H\236\273?\223\203\272\320\032\003\274\306<\265\272\034\333\315\272\306\304\0178 \346m\274\024\273\321\272\006\364\2769\274>\004\273\343\r\300\273\272\241F;\177 \0139\267\314\334\272\304\330\035;\300\222\357:9\213\3709\272\343\201\274\266\205\222:}E@\274L\222?;~\251\203\272\354\314\3779\200\3138;x\032P\273\210\'W:\301B\337\271\277\301#\273\013\000&\273\031\035F:\01095\274q,$;\340.\023\274\200G\264\273\251\347\021\274\303v\304\272O\314J\274 \354\3248\346jc\273\303K\243\273\226\261\3049Li8\272\236\222\343\273?\366\017;\342\3574\272X\242\317\272\261\252E;>\023\026;\202au:\322\267\326\273\255\024\035<\322_\277\273\371cR:\360\356\005\273\372\245)\273mn6\274\207\025D\272\374\355\236<\014wy\273A0\212\275\311\202\203<\006\346\367\272\222\274\025=^\001,>.\2233\274\221~-\273\317\242\245<\376\323\304\273 /\222\267\227\352P\273\314\2460=\021\215}:\266\214$\273\014\000Y;\030\215p<\374~\017\273\225\321r\272\254\220.\274\337\375\004\274\365\010\342\273\233\006\240\273G4\204;\t\245\035<_\317\334\275\227\020\251<F\342\t\275\234\024\271;\207V6;PY\267\274R\323\017\276\267\351O:_\255\345\2758=\370\275\032\277\n\275CK\337\272\205\220E\276\207\364v;\305\376\r\274\201\024.=,\206\233=D\352H\271\250\017\213;\224\277\265<[8\010\2756\324\252\274\370\330\306<.\022_>\2018\262;\272>!;\342\210I;\327\234$<Sy\300<\001\312\275;$\365$<m\376\356\274\263\217\026\276\023\355\262\275j]\314\273I>\"\273\304\313\213\274w\377\247\273\260\355\"\275<\252\207\273\320a\355\275\2751\262=g\360\336\272\205\356\024>\332\'0>\246\373P\274aN\251\273\247\232\333<\276\037\320\273%\013\2479N\246M\273p\307\333=\2463T\273\031\350^\273\321\214f;uv\373;`\3411\273\334\233\240\272XF9\274\262)\023\274\032\251\313\273o\302\231\273\016zF\272\210HD=E\214\346;S\221\017\274\335t%\275|\334\355\273W\327)\275\036\037q\275\336\2204\273\327H\205\274$\340L\275al\256;u\250 \273\006\3438=0\312<=\363\347\366\274>\032\327\274\353J^<bj\207\271\\\314J\275\036\235,\274~3\027=\222\355@\274\331.;\273O+\002\275\335\335\314\274\347\316\032\273\020\211 \275mv+\274\266\336;\274\037x\027\274 \205\t\274\305b\017\274\307\251\210=:\377\230<*\342\207<9\340C\275\034x\225\272\244\212\250\273\312\240#\274G\027\000\277\333\242\003\272\324\354\336\274\334\030\227<<[\357;\300\253\257\274\2524\330\275\202\265N<\022\223\222\273\363\211\250<\000\037\235<~7y;\254O6\272<\336\221\275t\005o;\000\334\211\272:Vv<i;7\274\342.\305\272x|d:\2622,<U\027\202<\275\214\220<\3145\373:\272\234\002<+\025\315\272\205~\206\275\332\231\303<Y\273P=\254\022\223<x\3630=wC\347\275\346j\037>\200|\303\273cs1=\3012\274\275o}\261=4\272)\276#\'\365\2738zf<\310\251\207<K\206)\276\356\247\340\275\323\227\234\273I\"\242\274Q\332\322\275AC \275%\240\000=\272\255K=\r\264%\276Qi\235\274\351\031\377;\251\303\213=GY\024\275\275\177-\275\032\355j\275\2762\267\2759\234O>\242\307\">T\321\020\275\370\023J=3\346\231\272_h\252\273^\244\020\274\373\377\227=\270\212\2029\201\033P\274w\2530=\3147\030;DU\204\275\257@\360\274$~\252<BP&\274-\235`=)\357\031=vP\262;;\242\272\272kh^\276\315#M;\241\013\213\272\233VN=\000\037\">fv\305\272\334n\304:\037\313\004<\204\337\002<\031X\035<\255\211\t;\240\022\212\275\201px<\024\036o\275\262\310!>\343cn=\323\036>\273\356\353U\270\244\004\303<;YD;\245/ \273\206\350\303\274\3765\\<\343\025\010<\334P\033=\350\336\331<C00=\021JK\275\003\233w;\006.\024=\330]\205=\333\344\203:C$\026\275\241\323\301<b\363+\273b(#=O\331\251=\031\016\t\273~\257\222\274\357\360><b\347\215<\271\205\227<\3501\3269\020 \003=x\340\314==s\r<\245\366\244<\366\272|=A\204\02790\025R:\001\337\230:\355\013\251<\333Y\3479\0230<=N\324\375\272<#K:{`\360\272LHi\275>\343\t;0\351\020:\212\322-\273?\037\2439?\243\242\271\332\337\2038\033\344\271\273\250\021\3348\007I\0348\370\230v\2703\213\255:\271*V:\223FY\270L_\263\271\243\017\001;\356\333\375:!\307q9%\266\354\272~\352 \271\242\005\'=\027\'-\272\300\315\033:\316g\3519(\352z;\225\360\025\274\324 \252;\227PY\270\204\210\232=\317\206\204\275\305\356\030\274\004\205\204\275\273\202\361<\036\245\210:\246\240H=\270\300\022\273i\206\240\2744\367\t:)\350\254\273\256\315\322<\212\310\210;\310\016\t;\356F\336<3fF\274;\310\377\272F\375\206\270\311\205\216\274\3068}:\375&\3009\314V\263\272\331\355\222=o2\235;`\247\335\275g\365d\275&\0161\272c\243L9\366\034\030;(\2408;W\301\350:\273%\021:\236\233\032=\233\371\037<c\013\013:[\352\n\274\221\026\234\274\332\2639;b\350B:\214\367\376\273\314\220\2659=\244\020\272\234v\2568|\006\007\275\274\205\3159L\026\2258\271s\312\271\274\033!<Y\343\217:\247\262\016\270\351\255\233\271\365\017\004;\211.\312:?\330&9\231-^=\355\226\2769b\217\276\273/\337#=/\354\257:{\233\2329\374\005\224;\221\237v<\365\210\351\272\307;\3009\224Y&;O9\037\2736\241x:m{t\273\252\250\002\273\22485<`\245\000\271\003\277\305\272\373b\3469N\367\322;T\310\2019\272\362\343\273\325_\177;\255=\0249\374 \201<0\264\035<\000lP:7\300\017\272)P\014\272j\233/;\260a\275:\363\312\2779~\037\377\272\323\032G\274\003\240;\273\226\263B\272\256\001\213;\014\337\226\272\350\001\";\003|\211\275\245\247\202\276j\304\201\273\327\306\332\275\222\277\221<!\025d\274>\004\311\273dV\265>\007\035\210\274\250P\345\273\006\352\024\2756\200\007<\017\374l;\326\017\345\272\016\177\350\274\227R\375\272\022\215\231\273#\251\247<\026@\354<e|\201;u+\333:\022\264\315<tz\016\271R\374f\273v\t\371\273\344\227\214\271HH\316\274\266ms\273\343-\311<\005\2648\275\241\323\200\274\005\356\330\274R\007\250\274Z\337b=\34767;\327\276\241\275rh\212<y9\345\274\365\255\025>\215_\226\276cG\366\273\277\214i\274*\234h\275a|\270=m\362\245\273\202\321\361\273\350\224\336\275C\265#>\376\3327<\000\220\203=7\302\310=|\310\242<c<\201<\010*\346\267q\247\250\274%\265?\272\225\026Z<\240\324}>\331\241b\2751\231\375<\356\242Q\276n\204\026\272\346_\316\272\361\372\221;\365\206\266\275iM\022=\265H\334\273\305pk\275!G\314<{^\210\274&kG<\320\315/\275\353\021C\274\376\342\'\274b\356\221\274@\327t<\233j\332;\006\001\310\272\\\006\262<;\346\350;D\020\245\273g\357q=_Fh\275v$\226;L\306S;\3763\264<\374\021\032<\250\0017;\305\274\313\273\350\013\256=D\0075\275\2716 \273\261)<=\261\255Q\2753j\372\273\007\300t<\314\304\274\275\0217B\274B$\267\273\231\241\010=\365\316\243=),\275\274\2225\330;\246\241^\274\"\233B<\3649\014\275\334\022I\274B\032\025;>O\022=\336\006<\273\371\353[\274\315Q\300\274p\022\326\273\361p\032=V\370\177=0\324a;\350Q#\275$\026\277<\201\276B:_=\332\273\214\330\200\274]7\267<\307\323\216\2750\023\233<i7D=\224\376\220\275\306\276H;\"\321\264;xX\221:\206Q(=\227\272\300;\033\276\010\275\302.Z\274i[\220<m\350&\274\3312\326\275t\362B<\302\344\355;4f\300\274\026#\200=;\'\226:_\250\345;\342\007\277\275\253iI;\323\202\364;\361\335\324;%I\267\274\320\220\016;mn\276\272A\026\263<\323X\005<\302:\021<\250\3503\273E\001\204\274\260B^=\326R\022\276\177\t\030\275\2578\023=\375\022\340;\377\263~\273e\226\002<\266\215Z=\310\316$;\322&P\275\270:\314\273@\225\200\275U\207\033>\266\235\t>3T\031\273\034\337\010=\315\027\357>\234(\227=\341\275\001\273r\304\221;\314\225\273<\031.*\275T\370{<\272ph=k\005y=\242\016O\274\330\343\037:\314\366\204\274{M\336;n\242\331:\226\221\331:\253\216\224=\003\327\371\275\317\333\251<\021\310\326\275\235\224\312; \313;;7O:<\376\270\227;p\022!;\325\271.<\362\340L\275\232ja=\202<h<Pd\014\274m\230\232\275.U\356<\355\3559<\237\350\355\275\031k\231=\362\235L;\001\025\273;\332\003\353\275X;\257;\220\300\377;\322\"\016=@ \211\275\362\317\256:\2501\271\272Ag\232<X\332\254;8\'_;\204\227,\273\314wu=\214.0>\304\244\017\276-\351\036\275\016O\022=!\002H<\325\342\375<\306\244\331:\325\217\221;\'@%=\347\344\241\274\214\205}\272H\020\301<4q<\274\204\352\366\274\363\2046=u!\251<\245\035\276=\001\'\205=e\330\217=m\033/<hn\332\2758`\207<\301u\017<\255\251\321<\330\264Y\275\337\337-;\200\203(=\003\215\334<\217\214\033<\201%\021<\000\350\306\272\305w\262\274#V\022>\374\367\223\275b\"f\275\271$\322<\206\355F\272\274\272\235:de\344:\341\353\371\275B\327\200\270\021\320\266\275_6\030<l?<\273:\336&<&\016\350:\323\343\340\273\316\324\201;/\010p<@|\326;\311I\372:#\177\0219\240$\326\274=mE:\225\022\331\271N\033\362;;g\205\273P\210\240\273:\332\t9TS7;x\014H\273\311\306\003\273\274\025\234\273`\036\000<\032i\246;\013\316\232\275y\361R<\236\317\350:\336\2273\273\006\332\202\274\214\357\210<\247T&\274\373\251\244\273l\223\022\274\027,\206=\304\234\217\274\032\212\261=O\270|=\010\020h;\354\334)\275]\253.=\306]M<\223\031A\273? \335;\224\303\3708\354\223(\273`\355G;DLG=\034\035\003>\031\345\026<\210\312\r<\245\211\320<\307\255\331;\177t\251<7\005=\273\313\323u=W\225s=/\301\225\275;\354>\271\201\021+<y\265Y\272\347\210U;||\037\270pj\244<\250c&:(\2232\274\252\332\351;8\003\027\273\340p\260<S\322\230<=\262\332\273\245\251\313;\366\014^\272`\200L<WUr;vW\027\271ah\'\275\203\336<\273&;\230\271\255p\330<h*\267<n\326\265\273\227\304/:\177\2520:\264\221N\273ii\021\2731\201\210\273\253%<\274\215+5<sM4=@\355y\271\312|\211;\2752\003\274\261\n\253<1\227\r;\004\236\235<\232O\302\273U\n\002:F\203y<\331\256j\273.\211\243<\350E\364<\244\342\314\273\375^\271<\352A\213<u\306\034<P\245!<\303\302\332\273\344\2317\274\033\303z\274M\325\347\271?\267i<\231!\260<Q^\227\273\203\177\230\274Y\"\230;8\226\201\273\363Wt\273\364\201\027\274\320\227u<fV\320<\374\302\264<\266\372\210<\013\366\013<\034\254O;o\255\032;\371\206I\274a\013\242\275o(G;\272o\231\275!\030\322\274\225\270\225;\n\274\271\2743\264\"=\000\236\370\272j\377\307\272\217X\004\275:K\n<Q\211\211\273B#\267:\200\2160\274\030!\243\273i\242\207:\226\222w\272\216}\367;|\251\014<\200\252\02091\220I;\366mO<\307\267!<@\004\\;\336\275\231\274\346@\306\273\341V&\276\250w]\274Sz\021\274\270\177\250;*\253\207<\031A\224<\001|\253\274%\362\223:6*J\274\272\354}\275\245\"V\274!\270J\275sW\223<\'\376\023\274\277\035<;\023\002\274=\221\333\021=\177\\\322;u\372\321;\323\035\n\275\357y\231<p\376\017\274tX\340\272\032\366\215\274\313Qe<\302\224\3748\272\035h=\263\243\350;\320cv;!n\203\274jO\032=D\232\210\275:|\025=\207?k=\250\350E\274[\350W;\316\014\021;\030!\203\274o\365\312\275\276\247a;(\246\236\275\272\n\245\274\352\353a;7\330_\275\315@\237< T\225\273]\261\\\273i\357\t<\363\226\202;\2440\372\273\214\177\271: r\322\274\322\323\213\273\365c\361:\231Ak\274y\217\036\275\330\244#<|\232\3319ZWi;G\037E<\243\341\032<\242J ;\342\357_\275\360\233v<:\271\322\275d\205\332\274q\356\036\274\256\031t;\314\214\267;\014Q\314\274;B\345\274\220\244n;\003\235\364\274\260\003?\274\255\241\264;\215\0229\275\004\264\215\273\316S\352\273\324\255\235\2729\\\377\274\200\017\027<urj\275T#\217;\316\335\013\275\212\305\025\273\220#4;4;\251\274\2210,\275l\034\023<d(\201;\270\367S;\254I\200<QYA<\213\374\257;\234\3003\275\337\251c=\234\210\003\275\254\275w\274\253d;\274\330]x;H\215U<\257\350\\\274\342\271\375=\n%\225;2\034Q\275\262T\035\275\230\235`\273E\226\363\274\324\3138>\3541)\274\267#A<H\305\246\274T\316F=\313h\206\272C\310\006<\203O\246\275e\241\002\273\037\223\326;\340>3<\244S2\275\316s\241:\264<\272\272\327T\r=\216!\247:\203\321\\;\211x\347;}0/\275\353\325\244<0h\334<\341\032{\275\031>\256<.\272\274\272\342\213C\274\272`\212<x\303\253=j<}\273\347D\030\275\250G\257\275\202\202\251<k\002\265=\001\306\310\275\247\0213\274\327xZ9\020\206\256;\376)\203\275\341\202Z;\332\346G:m\221\234\275g\001\021=k\0201\275\023\'\345=\314\342s\275\357\014K=\306\260\034<)\331\237\275\324q\032\275\'\347S\275\001\367\036\274\335\224\352=b\271\351<\311\264\322\274\310\330\341=F\2344<\254\235m;\036\t\306<;\001F\274\344\364x\275\253\311\024<\nK\317=\002\367\327\274\276j\230\272\320oZ\274\325\261\037\2762\027\231;\230\336\231<\211\247\016\275c\322e=\026\300\355\272\2479\366;\215\366l\275\322~\265:\031b\350;\302\364y<\365(\230\275\"y\030:\351\2677:\355i\005=bW\354:\347}\000<\216C\276;\027\357\246\274p\375j=\332\206\357;\257\364\330\275\333\364\347<\342\301\202<I\316k=\002\352\016=sY!\275\241U\'=D4\206<\002\001\305\274\264tq\273F\273Q\275\3353*\275\272\251\304<eB\210=\177O\310<rw3=\322\341\323\273tR\234<\210\311\231\275\007\337r<\236\177\003<&\\Y=\205,\035=\323U\305:V\004\024=\220\304\034=\0058I:X\210\017<\327\257\370;Y\226M\275\3559\000>-#\312\274\2332\226\275\257\354\037<\037\036\213\272\245\037\301\273X\3244\273n\201\017>V\231\361\272\241\203\226=\356\272\021<\346\005l8\212T\302;\224\206\342<\225\033\301\273`\3344\273<\266\323;\005\036\036\274\262\357\23494w(\272\003c\211=\027R\007:\014\300^\272\010 \t\271\005.\342:\231\375e\273#\220\357\271\036v\020\274\262\377o\273\205\3726\273lbS\272\252\367\237;m{\020\273h{2=\374\306\274;5\371\272\273\366\321\\;X\333\026\273\002\300\";\375^|\273a@\206:l3\363\274\320\2227\274\333O\331;\233\2456\275\214<\237\275\001]G\273n\030\353\274\t!\242\274\314\n2;\036+\212\271\304,\364\272\272\274\257\272\256\370\206<\032S\032:\356\257\320\275p\245\212<X\307\017\274\252Z&\271.\221\352:s\260\007\273KTR\272\222\300c<\2125\370<*8\320<8\002\021=\273\374\020\275\371\377\273:\323\314\213\272\314\246&\274Q\230\240\273\037\317\272<I\000\000\273\034\026\317<\274p\266<z\344\275\271\331\333\306\273l,L<\304\306\032\274mR\201\273\3736\233;\336P\240\274\315\324\3508\232\372x\272\311d\256=\377<\242\271\033\212\230\272jw\014\274\212\264\203\273\212g\227\273\005\277A\272\221\255\r\274\025mp\273\335MK\273|\222S\2728\277\010=\261B\261\274\000+\302\274\357\351\256<\341\263\'\274\000F\264\272\007M\246\274\337\325\007\275\353\321\257;F\354\204\273\245g\234;\323Y><,\2560\271\303\257\201<\276?\036:\315>\216\274+\001\252\274\203\271\323\273mo\235\274\366\274\267\273\033\255o\272\365\315P=Y6\020\273h+\271\272w%\204\274!\300E\273\315E_\273\205\304\215\273\177Z\000\274\200\257\233\273\230\211\215\273\357\251?\273\000\237\213<\271\206O\275\374|\024\273&\204\337;\007\251\303\274\325dz;\323P7\272\243\214\276\273\253\260\201=\306M\323\271\261\000;=I\003\023\275\320_\247<\256~\017\275\375n\331<\006A\370;]U\306\273\327\210\373\2745\226\303;0\327\225\273(R\215;\026LU\2743\235\n\273*\266b;\313I\200\274\245\005\264\273:U,<\343~\244\272^j\360;\240#\205<\001C\204<\233\277\201<\267\014\007\275\311t\273\273\253\362m=\242^H\275\202\270\016;\006\330l;\234@\353<\n\016\327\275\004\334\267\275M\326\225<\346^\375\275\322\002\240=\217\346\334<\r\356\001\275\225\336\005\275\n\2765\274z_>=]\362\203\275~-\014\274\301s3<4\367\250\274\254z\301=\023z\014\273O\265\255\273\247\301H\274\360n\036>\372@N\273\320\265\244\274\242\352\320\274 n\304\274\003K%\275#n\235\2733\232\260\275a~\300\275\004\237\354\275\241\362o=\341!\256\274\377\'\221;t\261\307\272\\-\367\272\240\260\214\275\004\314\274:\t\317(\275\303\263\212\274;P\242<\216?\352\274N\246B\275\205DD<\231\200\376\273\352I\232;\251\3702;7\2768\274\356\021\314;j\350\022=+\036\321;_\"c;B\007&\275D&)\275\375\273;<_+\201\273k1/<\270\265T<Z\030\217<\007\177g<\026\334e<\024\367|;\344\302\206\275\330>\244\274\000*\312\272\0162\265<,\260\252\273~d\201\273\370A_\275ZJ\336<\324\303\332\274\t\3160\275\207\246\345<\340Ro\275=T\205\275\365\321\225<\373\234~\2742y\013\275N$\200;\347\024\212\274\024\276\247<L\356\r\275\225\235\013=\033\033\205;\033}\341\274J:v\275\320\3252<\217\2664=4\250\322;\271l\233<\037\024\301<\374\342\305<\203&D\275\004\210\3009f\004r\275\315\014i\275P\250`\273\2162\377\271\022\203\363\272\377\006S;\"\353 =\332\247[\272\304\330\333<\025\253\242;M\320W\272\373#\201;?\301*<\342\211#:\245\216\343906\302;<\276\245\272\375\263&: \252\344\270\321\376\200;\354\351w8\014T\202\271?7\002\272\023\003\035\273\020\325o\2730\217o6\005V\234\271W+\016\273\024>\334\272\232\026l\272{\331T;\250\021\276\271E\350\265<\375m\300:\347\233\367\272U\351\233\272&\311\270\273(\325\255\275\022\"2\275?\237\203\271\336\035\332<Bw#<S\0367<J$,9\014\321\305\273\020\303\320:\325S\005\274\221f\252;\375f\212\274\371\333~\272\370\211E\272\256Q\224\274\337\323\271\273\250d08\357\3349\274\026v\026\274/\204\025:\2066\0238Swo\274@\000\265\272<\256\300\272\360<\323;3\362\026\275s=\253;*\346A\273[\326\236\272\361\022\225:qg\004\272\310Fc\273\377\211\205;\320\322(<k8+\2721\213\210<\214`W<\023\263\037\2721\252\351\273M\3431\273\343*\266:\353R5:}\017c;0\321\2646j%\204:J\343\246\2710L\303<1nY\272p$\210\271d\304\243:\362$\205\274I\013\245\273\374\354\025\267\302O\331\27117\n\273\"\227\345\2725\350C\2727Bf<wt\034\274\373V\r<u\311?;\234=#\273Qg\360\271W\215u\273D\343\271;7\375\364:\361\2504:A\346z;4O:;\204\333n\2727\020\244;\310\226\305\271\027q\341:\372\n+;\205=\345;\327\352O\272\252}$;\322\203\212\271\214\252\352;\350\341\211\272o/\225\271\224\007\246\273\242\t\356\273\247\257v\273\371\026U;Vu\210\271\324\0200\273\220\211)\273\331\016\350\272\225~\336;\022\337\261\274X\275\222;\362u\034:A!c\273\234f\2219\332\013\305<\016\003\243<7\033\240>\252\300\356\267\026\222\020\274K\000\333;\031<r\273\'\222,\274A<g\276\246\275\007=.\233r<J7\206\273\302\235\023\275\271e\265:\333\224\023<\350)\031\274\013\252)<\260\376?;\271z\025\274J\262\255\274\351\271\254\273\350\230\347\267-\255\001\274\270:\347\273\324\3157\274$\264\237\272\343\361\253<\n\367\233<\\\241\341<<H>;\217u\214=\336(\026;qA8\275\'\rO\275\201/\006\276\227\347\225;\361\\\324<\357Z\222\275\367\245M\275m\362\207=\342!\003>\3519\303<\250\344K\272AP\336=\303<\357\274\252\322i\273z\352\252<J\177\301=^D8=\302tj\273Uh\317\274\036\253R>\000\330U<|j\003\274\254|\201\274j\351s=&\265~=Zb\035\273\305F\331\275\2618\004\276a\254\246=w\317\013\275C\034\216<\346g\2329\352z\016=\234U\344<\316\232\\\274,\255~:v\203N<\204\240\215\275\322\327\320\272\253N\345\275\314\306K\275k\272\326<xi\300<\307\227\356\2759\3258\275\016\301\230;\001B\020<\272\373\236=\245\351\000<\264\035b;\373\202$\275G]}\273\257\366\324\273\000\333z\272\017\246\304\273HW\351\273\340rP\274r\243\355\272u\327\242\274\334\237\231\274\277g*=\331\217\353\274C9\223=b\205\004\273\264|\223=\320\007\206<w\023\002=\026A\271;V\304F<[\3746<\320,\252\273S\312\246<6^m\274\314\234\207<\354>\301=\303\3545<^4-\275\202\343\222=I\204&;\t\221\177\274l\302\307;\033\353z;!\034\355\273\340J\240<\206N}\273\324WG<\323p\202\273\355  \274M:\201\274\333\213\204;\352\340\346\2713V\020\275\005\342\236\273U\020U;\263\365\221=w\3662\272\333:\'\273\240O&\273\t\355\251\275\340\231K\272h*@\275{%\331;\025\010L\273[\326\007<\360\004\374<\273\336H\274=\367\020\273\337g8:&\213\330\273~\364\013:@\"\275\272\210\243\274<ik-\273\332\"\262\272\037\247\\;\333\325\205;\205\177\345\272\366\326\3239\331P\246\273\370\255\251\273X\311\221\273\355\254)\273\033z\233;\357\316-\273\\\323\'\275\035\320A<\332\255\003\273K\200;\273!F\213\273\351\014@=\311\354\210\275\243aX\270]\350\273=\323\004\274;\020\n\366\273H\020\205=\\1\240\274\330\'\375\273\004\034\266\274\273\007\240\275\223\325\252<>q\'\272\3113\300;\0026~\275;\2076\273\352\216\240\273\336])\274\202H\271\275#sp\273\257\352\';hKU<\220\344\3367\336\301\324;F\272\025;\365\276\306=\277\227\252\273\323\r\035=\314>\210=\2466f;\234\3766\272\214\231\213\273\2002\216\273\335\213\253<\241c\304\272s\022\207<|N\010:Nh\000\273k\200\274;\216m\263<\234\273\216\274$\274l\273\300\324R\273\223\245\030\274\311\327\210:\251l\231\272t\234\205<\326@\352\273\273\373\277\272\260\276\361;\246\351U<ul \273\375\033!:\247\247\256\273\016ai\273\314\310T\273\3165)\273\261z\275\274\306[,\274\244\246\215<a/\"<\356\2516\273\024\375\255\273\335\030\021\274\200\313\026\274>\227r<\277\241*\274Vz\017<|\220\211<\216kK\273\374>\225<\317\271y<p%\331\274\223\007h\274\267\264\226:\216\377 \274\'\233\337\272\373\207\275\273t\267\223<\220\212\324\274\266)\360\272\212\230\275\273\tF\366\272\203Q\340\272\351G\024\274\232e\243\273\360\352\266\273L\367\312\273-0\307\273\244\301\030<\303\321\025\274\366\312\250;l4\212<\210`\343\273\366\332\3008B\352\261:\344\000\2217\020\353\231\275\022D\3419\261\2369\274\304\036\r:\033\252\207:\256/5\273\005\0067<\315\361\036;\320UU:\035o\2049\237\332\224:P\255\3558x\25359\321\2201\274\316\326u9\255\325\353\270\241\357\353\271\375\017\214\273\2210\027:[\241\3558\233v\227:\317\300\347:\300\261\023;\300Sp\270\213\030\"\273-\362\010\273\335\232\334\274\002mz\272z\036\224\271\272\346\317\271\334\234\003:O\375\004<z@\326<J/\220\272\016*\334<\230@\341\274\241\227d:\257\023\271\274a\322\227;\350\263\356:V%\243;9\341\200<\321\313\025\274\004~p\271\231\236;\272\354}\337\274\226k\203:k\357\226\273\353t\341<\263<V\275\006\007\365:~Sj8\254\004\2529\251\265\353:\303S=:\026\254$\273\242\025\320<\331?\265<d\341{;i@m;\316\036\022\272\310M=9W\211\027;\212\305C9\207x\'\274Qbr:\207\371H\274~0\353;p\201\031:ysH\274\314|n<\026eN;G\212\261:\344\3671;a5\024;\336\002C9\300\nF9\265v\251\274\\\325\3329\342y,8\301\034\'\272\277\341\231;\274\002*:x\214A9\343\226\263:\013\311\300:\251\014\332:\341\3364\270[\277\003\274\r\315\022;+\207\304\273i\2112\273d\342c9\230\006\2009|\006\215;6\272\343;mh\224\273\312D\214:\200a`\273A\252\355\267?\354\226:c\000\036\273\354\274\032\271\223\204\354;\"\303\244;\030\256\014;\3026\223;i\2616\273\300ej9h\002\353\273q9\251:5|\2329l\331C;\005\364d\272\230\251\020:\276$f\272\344<H::\234\r;\274\245F;\232\345P9#\010[\273\271@o<w\375\3249\341[\271\272\t\374\367:\275\026<;Z\026\345;\002\270\336\274\210\211\237=\251T\267;\317\006\362<\310\006\023\275gJ\022;.-\026\275\014+\224=<\256,<\305\372\257\271\014h\034\275\003hf=$\261\022\273\317}\271;1\324\226\275)1\r\273\n\255\226;\234\201f;n\254\336\273\036\212C<\204\223\231\271\260\322\007=+\277><\230\233*<\250\330q<6q\325\274\032l,:\374\336\262=Y8<\275\206\202\252;s\370\240;\243a\007=J\311T\275F\"\305=\222\227\304\273\300\227\304=k=!\274W\214y=j4\\=K>\034=\204J\270\273\"\204q<\351\231\376<\200\306\347\272R\262\245;\200l\266\274\352v\014=\361\357~\274,\3272\275$\316`=\014P\271=\263\255>=\253\004$;\322\243\307\274k\014C\275\213lV\275\246\205 \275\016\372\203\275\317\\)<\360\362\276=u\267\025\275k\341\2019\316Z>;\272hn<d\r\354\274 \315p\275{\314\n<\307\035\023\275\236\243\217\274\364(\004;3^\205\274}\371\204\275\245\304\256<q\n\004;\022\300\030\273\361\n\216=\216\233\237\273B(\326;\036\334\n\275\247em;/\347\225;\221J\322\273\2041\237\274\020]\\<`\323\3669Q-\013=\200\241/<\213\262[<>Ub<!\241\351<\021\230\257;\033\231u\275Y\347\031\275\005\276\016<\200ys<P8E=%@\306<i:b\275\031\260\352<\207\234\017\275\232~>\275\013\360u;\001\346\223\275\276\027\372\274P^G=:_\232<[\265T\274?C}=\262|\314\274l\357\313<\336\205}\275\243\346\346<\371u\245;\331\325\306\274\023Ll\275\216qM<)bI<P\201\024=;Aa<\327\372\215<\347}\276<]\331\230\274\225\374\377<\225\021\032\275\014.J\2752\201P<{\352\232\273z]\';\202\340H<\264U\250=`\014\205\272\240%\201\275\312sJ=zR*\274\207\230#=\232\035@=4\213x\273\361\233\016<%\013\311<\313\332\265;F\246[;\031\3415\273C\371\370\274\007$\377\272\234\3372\273\022\202\213<\026\355,\274\306S\023\274\232I\006:\376\344\216\273\355\205\226\274\315\213\236\274\023\237\237\274#\227\004=\355\003\342;t\217\203\275\247\343\005=\020\324\275\274\312\367\240;\214\226\006\275\322$>=\246p\363=\022\006A\274@[8=\367vP=\250YS\275\204\226\203\275\252\241b\276?\257y<\355C%\274\320\356(<\240x:=\r\316\033\274\210J*<{\205\374\275\247J.\274\305\343\315<\227\300\223=\367\021\303=\332 \236<$\203\243<\204[\302\274tH\253<\333/C=\331t\201<\304\317\361=J\031\n\276\307\031\302\274\241i\254\275)Y\033<Iv\245\273\375\010c;$/Y<\031\273\314<h\217\025\273\324\377\177\275h\262J>d\347\016\274u\232\201=\272\351(>[S\230\273\3727;<L&5\274k\240:<\255\275\016<\"\031\212\273k\005\033<\332\024h\274\214\315j\273\357\n7=\206\202\243\275\366\257\024\274\032y=;\277\256\010\274n1v\274*e\242\274D\305\214\274\376H\301=\332\026\215=\2571\374<\003\003\202\273\211+\324\274\276\203\251\274H=\342;\304n\276\274\331\n\265<\374O\236\274~\353\332\274YW_=\215SE\274Vz4=\242q\245=rp\007\272\234\311\311</\323\204=Zy\374;\250V|<-\201v\274\374\373\350;\336vT\275;\262P\273hQ3\273|\205h\275\022\276\"\274\247\2100\275\t\216#\273Br\262\274\025\230\331\274\325w\355\274\200\2237=\221\016+=\2716\024=\357\254\034=e}Q\275\206\270\311\270\020\217\261;\334Q?:\264Q\200\274\370m4;\006\3736<\306\364\223\270(\347\233\273\303\311\'9\263_\211<$\361\353\272\031\177\331\272:\232\227\273\226\272F\273\252O\033:u\\\265\272\244\204W:\3667\364\272\030Z\210\270\273,\216\267\'\377\267\271\372@5;&\236\013:\202\360\3378\314s\334\273\265>\031\274\317E\3449\340H\220;\327\026w\273\204v\205<\240b\002\273\'\326N:\337\017!\271\235\301\350\272\204m\343\273\t\215\222\273\377(\201\273\300\272\027<\313q\357;\022\274\211:F\365\315;\271 \325\274\345\267\347\272y\276\367\271\022\231h\275\326\247Z\274y\r\203\272\223Hu\272!\t\323\272\033d\177\273\310\264r;W\nE\273w\347\204\274\334\345:\274\303\216^9\2313\223\273\371>\225\273l\001\316\272\250\206\031\273\340\3328<8iI\274\335y\235\275@\265\336\274\022\214\230:\021&\272\2708\"\367;\242B\327\271~\310M;\330i9;g\240F<\265\357\373\273\236z-\273\267\250k<\n\036\'\273\257\240\260\272\333=&\273\t\036\037\274K(\026\273\300\333\241:\307\352\271\272b\002\351:;d\267\272\341\030\002\271U\235:\272Xo\356\273\036\3659;M\017D:,\312u9\241\201\261\273\020\007\311\273\226b\2169q\275\202;o-\260\273<\035\202;\351\t\332\2732(l:\3576\220\270{4\377;\205\r\343\272u\307q;*yV:Z\322];\254&\317:uW\240\273\0210\243:\022|\3629\301\250$\273\305&\332\273W\231\005\272\0075\271\272W]\035;\034O1\272x\326\3179\327\324\334\272\330\224\024\270L\325\026;\3205\035\271\261K ;gn\200:\016\322\223\267\266\021\372\273\212\306\264\273\247\256\26091\244\216;eD\233\273\367D\003;\3340\311\270*\245\026;\355\n)\272\223\023\026\273\330\0010;\021\346\273\272\272:\221\272\006~%\274W\245\307;\207\004>\272\007\300\254;\376Q\204\274\024\202t9R\257_:0\370\021<\030\215\237\272\t\032a:\336\220\31180P);\213\233m:\274\006\247\271\204\355\2609\306\310\234\272\305[P\273W]\004\271mN\3619)f\"\273\214\267\360\272\267p\221\272I\337\242;\271\236\232:\314#\201\274.\334\310;\274+L99j\220\272/\302\n\274-\237\n\274k\346\266=&_\317\271\301\300;=\027^\325\274PG[\274c\327!\274\245\000K<\310\307\202;\220\017\263\274\207\3315=\003\014+:\361\314\251\272\371\026\2679\355\222\226=\262\315\223;\222\0106\272\031eF;\310\274\231=\225\317/;\270\377\3407\225w\347:\374\255\014:\357e\341;\002\276\257:\235%\t=\021\275w<\277:\254=\303q\305\274<\224%;\264\261)\272\334\240\200\273h\203\';\300T\037<(\247c\272\337\035\227<@\260[;\010\355\025\272UI,;\010(Q<\274\315\2379J\242\230::\205\2169W\r\3509K\n\303:_$\324\270]Z\221\271\223\347W9\250G\250\2718\017\253;\331\r=<\020\025\213\273\373\033:\271\251\224\2229\254g \2735\224\357\272\377Qz\272\2068\t<d\217\213\267\243\350\206<r\367\013<\207\204.9\310\202\001\2738~H\273k\251\004\274\241a\371;\211\247\223\272\222#\206;\203\251\322;S\213b\272?\205(<\375\203\346;d\307M\272\016g\273;\222\000\334;\177\034\301\271\265O\320;\364\321\376\272\302\035\251;\221\024\210\273\375&\324\271\261`\024<\204\373\242<\313+L\273\037d.\274\034EA:\003\031K\273y&1\273\325\212G\273\250,8<\025\205t\273\212F\334;\005\241\003<\227\2227\272\026\3141\272=\037\221\273\206\023\003\273\207\320F\275\341h\005\272\332o\241=#*\026<$\267\2708\177\025X;JD\3369\351\224\235\273\277\327\030\273\310\273\202;\300E\355\273\245\230j9\275\017\330\271p\343\n=\243\325W\267nS\025\272\000\3147\271\330\241\201\272\357\346;\273\246$\266\270\2334\346\273\356t\342\272H\004\217\272\017h\232\272\350+\215;\337\323\240\273#\376\203<\273n\251;\265\350\210\273\372\014\014:b]\013\272\330\357\213\275\330\034\020=\214\27259GnK=\t%\242\274\227g\211<%\2224\275b\030\314\274\302C\020\273K\020o\274\252\251\234\275\211\316\242\274\225/%\271G3>\273%\300\305\2749Y\301\273\207\314_;z\376\260\275\200p\260\275\001\224>\274\030I5\271\210\353L\274\346U\266\272\212b\351\272\375\210\013<O\311\375\274\36503=~\326\372<\217\017\177;R\226\202:\217Y1\272\353B\356\273\263x_\273\322=\005=\322 \201\272\221\352\177=~\226g<\364\216d\271\362k\246\274\261,P;\376W\334\273Dwt\273\030[\2257\367\372D\274/xU9\321\204O\272\326h\017=\310\2727\272\327X+\272t4\243\273\234\240\260<t\007k\273\351\320z\270\373\303\340\273:~\007\273#E\321\272\377C\231\272\273\002\203\274\326\200\341\274\344\365\006\274(\364\200<\255\371\355\2731\220\325\272\256T\201\274\253\321K\274\301[\315;ONd\273tW,<\026\201\324;pl+\270;F\217<N\004\346:\210\036J\274\034\014\237\274\027\303%\273\226\331Z\274s\300b\272\351p\253\272Mw\003=\244k\010\2719\022\213\272)V\034\274\261\200\213<3\0078\273\317\252\216\273\321\026\370\273\036\205\017\273\322\330\016\273H\227\204\273z\3119<\377sc\275\014\271\0319D\376\237;\030\013\212\274x\037I9\316\001\241\273\305\275\211;\367\236O<\300J.:\214\n\346\274OYl;A\207(\273>\224\224;\3561\224<\340W \273\365\304\363\272Ah`;\324\350\276\272\273\312\023:\377\213\000\271\331gF<TG\002\272\325b\250\270\276YC9L4\020\273\306\336\304\273\267s@9\331@%;]\007\230\273\314\252\223\273\313f%\272\222M\224;\356@\017:\365@\335:\333\2719;\272\241N;\0163g\272jl,:\246\240\214;7C\337<\257s\262:\257\025\240\275\253\376}=\226ot<jK@=\262\374#\275\351\203\342\272\215\004)\274\010\202\244\275\223(V:)m\211\272\3534\030\271\2160\250<\262T\266\273\257\270^;\235q\220\274\3450\253<v\230\036\273\312s-9\004k\235:\222r#\273\261\246`\273:o\2218\\3\233\275R\351\333<\373>\215=\327\311z=\371\333\371:\352\335\3308\331\201\374\273\272\327\311;\001\272\000<\367N\034\272\326\337\262\274g\202c\273\214\200\337\272\355\336\035;yHR<\267\212\023\273\221\227J\273\026\355o<\001\232V\272\327;\227: \255\202\270\246.\316<\362Ph\272\320e\033\271\375\357&;\010\354\035\273gy\355\273.\272~9n\005#;\212\331\217\273i{_\273\005\222\345\271\214\364\372\274\312\261\377:\330\202\210<Z\377\251\274:^\217;6\313\340\271&\016\032\274{\213\307;\243B\316;\374\244\255\272\272\372\365:\001\360\302;\253T<\273x\3433<s\010e;\244\300\365\273Pf\327\273L\"\240;\273\220\314\272\330\263 <ua\264\271L\233\275;\274R\005\273\322\352\350\270\206\027\343\273H\032O\273\210+\310\273\260\250b:\277\226B;OU\304\273\207?\270\273W\356\000\272?d,<\206\246\342\271n\212%;U\336n;t\355\324;&|D9C\323+\273\342HB;\01456<Z\227):f\233\370\274\207\273\222;pv\017\273\267\177\217;\220k\201<\324\024K\273\033\223\244\272\2233\243;\350\030q\272\353\016M:\250#\0348T\243R<\320\277\304\270\251M\311\270b\363\2308\3747\354\272\n\261\375\272J>\0349\253\343\003;\306\302\211\273yVm\273\241\005D\2723\232Q;\037C\037:\016o\300;\345\246\033;\316\343\024;\354\337\233\272\016\354\316\270\262\337F;e\206\016=\316q\243:\006o\205\275\327\223\200=U\206\320<$\202N=\242#:\275\016-\333\272X\004\032\274R\344\235\275\024\207\006;k\350\235\272\215\003\000\271&@\270<Q`(\274UMP;o\300#\274\202\261o;\360\2073\271\212\256\3528hx\204:\2462m\273E\201*\274\276\027\365:\264_i\275\371\324\021=\354_~=\\|w=\350~\":V\363\0377w*\321\273\272\314\226;\036\\\n<0\030]\272|i\321\274\325\366\264\273\2529\304\272\344\265G<\275nH<u^\\\273\236\270\024\273\217\222\202<3qQ\271\375\321\267:\022 *9m\003\326<}c\020\272\255\216=\271-X?;\274\302G:\264\364$\273GR\3708\365X\013;=jz\2736\261/\273R6\010\272\230$\352\274\271-D;\220$\244<xG\004\275\244V^;\301g\001\272#\220\004\274+\2700<\304\320~;\202\026\206\272\030\321\000;Tw\275;f\257\'\273\307\3447<O\245H;\314\2363\274Y-\024\273\032l\302;\374*\260\272>]\003< \326\352\2718\347\315;rE\030\273W\263\210\271\374\237v\274\300\374\2668\360\370\360\272y\177\275:\307JB;\324\017\257\273])r\273Ry\030\272g\216\027<Y\255\253:)\371Z;\2314\037;\031\217\245;\320*|6\343\300_\271\246\337\213:\214 \236<;\220\322\270\327[\333;\306\314\232\272\314\366\3316\256i?\272\023\202h<\006:\014;O\000\305\271T&\236\272\255\371\021\272\210\327\000\271\206\274\263\270T50;jz\3408\243\251\240\267\344\024\\8\254\035\3049\032\034\3308\261\033=\270\257\000\033\272\020\354@\271\371y\322\271\245\255\3259\226\371\311\271\325\030x9\342a\215<X\034\200\272P\325\221;f\325\':mu\322;D\321\021\275k0\233=\\\310\3229\322\203\024\275\330\276W=\243D\351:\ns\256\274\341\374\304\275\257\2268:\273>\215<q\370P=\214\003\2529Q\'a9\237\216\322\272\306\351_=\366W\345:\020\207\304;b\2621\272\225\313\212\275\034\236\233\272\242A\366\267b\264\017\273l(\247\271\'<?\271\002\346b\273\205\374\024=\200\221\243<\005P\316\274\321+i\273\345M\33592\32007\331 3\271\327\242\013;\n\010\2469\232\371\002\271#\037\206\272\346\032}\272\242\361\206\266\t\220\035:u\342\031\274\032\263\024;n\036&\272\014u\331:B\216\004\273I\274\224\271\252\215\203\270\202\0213\272\223}0:\325\356\316\267\314/\357\271x\034@\273\035\01349\007\241[\270\003^\330\271r]\016\271\346\367X\271\350\231[:\300\026S<\314,\253:\202\266y\273F\302\212;\233\375\266;\'\353\260:\357NP\272$\353\331;\2648c\272\364\016\2119\023\300\374\271{\022\014\272.z\257\2702a\021\273I\222\217\273\264\346\242;\303\311\023\273Jvo\273\246\027\332\272\r\267\366;\274\007k:\307\304\2568\365\3758;\372\335\0178$tX;\302^\001\274\006\305\3548@$k;AGB\272\344\260\223\271\220)\247\267I{E;\253P+\272\375i\371:\315\'\374\272\274y\031\272\265\246\006<\201\366\203\273\021\333\225\2735\217\214\273[\221\237\276\374\351~\272\372\2117\276I\373\013=c\260\250\274B\034\010<\242\316\032>\310\362\216\2745\213)\272\327\277\013=\274$#\274\334U\242;\342\023\337\273\245\320\032=\365L-\273\346\002\004\274v\276\273;W c\275\243\266\344\273\276j\0309vY\344:@\204\267\274\031)\201\274|A#\274\230+\211<\016\n\337\274d@\036\276;\020\006=\312\215!\273\361y\002\274?\\$\273r\014\n\275f\235\021>%\316\254\274\263\344h\274D)<</\022\003\274\201\2333\276-5\201=j\3247;\017X\330\274\301)\343\275\320\225\023\274\214\312\346\273C\014)<P\203\367<\254_\027\272e\031\260<89F=<\375L\276\246\304\225<\270\256\200<J\224\035=\034\344\'\274{8\031<\0016\272\274&\022#>\311\266\002>\245\327\000\276\257vz=\303\026\301<\337f\215\273\264\307\350\273\226F>\274\377\217\006<bJ\216\273\327\331\373<yT\256=\246\365\231\274\251]x=vX\034=\276M\210\274j\006H\273\321\237\225=\356~\005\274\211\315\007<9\347\370\273\374\356\024>\222P\014\274\242S\026\274\032\232\021=\255\020\235\275@\227\354\273M\036\347:\007\327Y\273%\343\213\274\224SE\274\326e\010\274\217\347\n\276\375\276\234\275 q\003=\340\271@\274E\365!:\361\333\220\274\236\344\242\274Y\276\250\274\026\374\310\272\263\n\351\274\357\244_<d\227l=P\375\353\274%\003\010=\332w\316<g\233\332\274\032\211\272\274WbK=\004\250b\274\370\243\311<\235\204\235\274\306fO=_\"\316\274{\230\031\274\320(B=+\312W=[\016\005\274=\324/\275\354O\3379\366\270\313\274X(\247\274g\277\232\274h8B<\017d\200\275c\256|=\301p\023=\357\234\005\274\005\005&:\377\275\347;w\210\205\273R\225\032=~\304*;\022P\227=O\303\301\273\\\031\326:\314\033\355\273\"@\262\275Yu\006<\010\316\217;J\007\264;\016\337\314<\324\214\2479\242\300\355:(\344f\2750\233,\272I\366\257:%f\365; ;\235<+\'%;\202\020\250\271\274G\031<\3011\331;\302\354\340;\256T\036;\350e\010\274\210\030\336;\222\r\263<\221\346\335\273g\374(;\273L ;f\221\224<D\204\215<\270\010\013\274F\030\203\273\341Pg<}\332\013>\231dS=\303\276\370\275-\013\377=q\351\335;\031\234\326; \320\307\275d\265V\275{\265*\272PCv\273{F\002>S\306[\275G\303d\272H\210\230=\025G\025\274\317\362\207<.(f;t\237\311\274\"F\301\274hQ\005\275JF\333\274z\2565\275\202\346J=\001lU\274FK\"\274\005s\327;\375\325(:\251w?<\0234\343\273j\3209\275\226\231H;a\226\206\274\206\216\344\272l\233\231:v\354\032=\020\272\007=A\\f<R3\323;\236\205\004=\\\347\024=Wa,:Y\354\252:\035B\016\275r\233\215\272\323^\270:f\323~<\212\366\305<\302\272A;\351W\021\271}v\005<\225b\276;\000\214\252;sR\r;\324\223\002\275F\206\231<\210S\277;)c\267<\317\216\224;\300D<:\243;\r=c\313\244<\352\234\r\275\367u\247;\206\014\201\274T\344z\274\302\016\017;\343\344\223\274u!\r<AK\004=\213a\322<O`*\273\005%\025=\263r\264;\363\017&;\261\300@\275\266\r\262;\345\230\254:\333JP<\326\234\030=\370\317\027;L\035\016<\253\3742<1*\021<\217\007\017<\317\313\201;T\226\014\274\234\376%=\304\242\306;_+.\274\0104\341<v\246W;\220\366\330<\305\316\007=Vw\021\276\330\246\301;\317I\030\276\3570C\274\006\321\367;}\353\277\274c\377\016\27663?=\032p\021< |L\274\302\254\204<\266\214B;\234\213\032<\337a\"\2768\375)<_\r\021<\016\313\277\272\362\356\205\275\246\332Z\273\3046\r9\242d\023<\010\267\257<rV\227<\320H\332\272\222\210\005</\224\t\272{\010\355\274\241r\271\274\016\314\307=\344^\314:\002\223C\275\314e*=\242\206\227\275\250\203\223\273\247\313h\274n\213&=\347\"]<\322\364\243<\224\310\270=/\370\r=c\t\342<\364F\324=\224\302_\275\231\003\253\273J\353\345\273a\341\265=\302\033\0318&\325\304<98\317;t\361\030\274G\274\006\275.>\033:\314\325\366\274\347\"\354<^\346\000=\350*\257\274\3340\315\275\207\333\325\275\233\247\270\274u\362a\276Aa;=\333o;;\221\2333=3a==\277\327{=\00110<\341\266\023=\323\220\361\275\360\226\206;*\0165\276U\275\351\274w\307\204=\004\335\222<\343N\264\275\022\335\257<\215 \013<Yd\373;\232\216\266\276\331\254\356;\320\034\'<@M>;\376\226\003=\331\347\326\273\200\345(8\360\204&<\331e\221<$H8<\237\266\003\273\177\343L=F#*\274\255\364\255<\037W\205\275\235e\341=\234x\277\272\264\360\377=\035k\274=\241,\027=\377\000\257<\330\354\014=)\005r\273\340O\"<\024V\301<V0\006=b\312\350=g\336\215=\22147=v,B<a\361\245=7\354\021<\344D\350\275\307\253\361;\002\325\027<\030\325\036=$\325|=\335\2509\273\343\270\201<\257\250\177<\306\223\335<`.\210<\217b\265;\262\314\310<ReT=\024\2430<\337K\004\275\210\316\365=\214\257T8\263\031\244;\304>g\273\340|L>\016\251b;\315\227z>o%\352\274\300\362#\274\"\233\346;\204D \276\337\177::\325\226\275\270\204\202\034\274MQ\322\274\336\266\212\273\216X\n\273&\234\222=\246\t\220\273\272\006\3159\277\256\'\274q\031\231=\323i\003<\244\246\362\267\020q\200\274\203\3717\274\265\036\"\274\331\t-<\310\0315<\317\303u:\371}\246>\0302\034\274\r\262\261\274F\243\n\274oM\362;\032\243\256\275\207\206\010\276\236\006\200;S\203\244\275m\332\177\273$&G=\367\n\006>8\303.\275\240\323\025\274A\320\024\275$\2024=\035\\\"\275\252B\344;+\220\262\2729h\270=e\355\031=\027\271\201\274\224\352\320\274<\237\025\276\004\375\353<\2125\204\274\213at\275\341\312\252\274\005C\027\275(ti<<b\312\275b\232y\275\'\177\224=\274(6=t\030\366\274*\016\2129\331\2679;\261E\253\273\203\311\r\275\374f\316:\021\023\226=\0109\355\275\241\021\212\273(\022\343\274\324\243\261;\237\037\277\272\357\263\021;E\tO<\242\255\017\275\377\261\363\273 \\\325\272\334\"#>\335\037\224\272\274\035\2439y\2620\275\210+\200\275y@\016<\371\213\221\272\202\3524\274)\357\226\273\275\351B\273C\030\032<\002\307\016\275\016\236L\275\310\307\231=W$\211\274\240^\270\274\r\232 <\266G\023\274\203>w<\'O\315\274\323\246\034\272\002\037\311<\347\2535\275>J:\274\330\370\025\275\3360\211\275\307\276\261\274\251\341\355<\027\225R\275\277\017\005\275Z8\235\274\004o>;\255\002\\=\230e\267:A\302p:U\210\305\273\361\372\202;\024\374\362;x\320\321<\267\254\231\274j\224M\274t\317\003\274\315J\222<\005\024\314\273\027k\372\275\351\275\315;\374}y;\373.\014\274o\362\370\272\212\030\256:\230\311\235;o\321\221\275\022@\35294\206%\275m\025\255<%\367=\274Y\215\255<\2518\326\275\213\314\371\273W}\271;\342\026\253<\353\314\020;\210/M;\231\\\\\272WE&\273])\003;\017\216\225\272N\312,<\034\204\220\267gC\026\2740\242\3459\244s\013\273\210\273\004\274\237\003\014\274z\034E\274\'\200\321<zW\345;b\232\256\275\345\256\371<\373\206\253\273\300\366u\273J\355\354\274\215j\t<\336\204^\275s\261P\274C!;>dL\256\274\0048\354\274\370,3=l\304\027>d=\352;\037\303H\275\351\312\007<\267\317\013\274\370\343\345\273F+\205<K\354\377\274\242h\355;\356%5\274]\221\217<\372\347c=\034]x;S\250`<7\365b<\017\226\274<iE\031=\321\'\327;\264\313[<!Ve=DM\254=\013\205?=\264\253@<\022\357\017\273\004\215\203;Hr\310:)\001L=/\363?:\030|U=(\264\027\272\313\2673\274rpm\274\274^\020=\272(3\274~1\004<w\362\262\274\334s\260;\224\323\004<8\004\006\273\002g7\275\314\033\207\273\2009\211\272>\250\376<\'*>=0\324/\274\236\004\000;1\356\234\273\355&\345\273\267|+\274\214w3\274\310&\020\272\274i\264;\220\206U=\351\033\';<\252\377\272\322\352\200\274\305B\211<Jr\023\272\267:==\252`o\274\354\240\264<\361:\314<\310Y\177\274\034R+=hM^=\313 [\274\246)\257<\327\016\365<\346\310$;\314U\023<.\230]\274\363\t\211<\202\351\243\2743\177\306\272V\t\362<\203\0039=\370p\020\274\374[\003\2752\014\2658\330\331\034\274;\261g\2744\005\233\274\006O\031=\277\223\022<\212` =k\305\013=c\315\354\272"
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "o\r\347\273L\264E;\340\247\352;c\t\243\275\341\006\202\272\r\324\233\275=2Z=\025.\017\275\257\217p=\211w\007\275}\032\250\273RT\352;\030\222*=T\021Q\2746\271\017<\014l\023\274\'?\340<\360\326\201;+W\357\273\241\005\274<f\344s<\021\001t\2744>I;\303[S\274o\241\357\274\227<\336\274\226J\267\274.oM=\352\311\250;!\317\217\275\371\016\207=&\354\261\272\322\003\023\273s\265\350\274\177\226\\=\200h0=\206Z\271\274\207aZ<\240\335D\274\255\215%\275\302a\306\2745\036\002<\014\347\236<@\253\022\275\215c\023\274\241\217\346<\207\360\274\274\351{\267<\023\372D\274\224\245\2619B\250q\272\314\014\237;\253\2058<\360t\207:\212\022\341<b\037\202<9D\350<D\277<=O\017T\271Y\270\255<\275\251\362<\2324\020;\2233\007\273\235\343\377<\267`\007\274\2026\305\271i\032\234;\016\322\307=\375\202\243\273\337v;=k\265\345<\005\270\010\275\3711R=jC\250=\201\301\260\273z\351\004<\343~r;7\3656\274\344H\227<\002\315?\274\200G\020<\266\035\305\273F\000\002\274\333\014C=\354!7=8\322b\274\324\022\336;!=\204\2742v\261\274\257\277\335\274\212\250\251\274l\024\2679\265\205\201\273\325\245\300=\242\225\347<\376_\225;\217\242\027\275\226\213\374\272o\005\253\273\030\\\224=\317c\'\275jT\032=\367\005w==^4\275\375\347\240=\021\374\260=t`U\274%QW<\277i&=C\302\006\274~H\001=\202\371\347\274\022\325i=\362\261\031\275Q!\013\274\273I\265<\375\336l=\003\221\213\274n.]\275d=J\274o\220\003\275i\226\020\275\n\256\t\275\2510\205=h\375\3627\300\203\253=\322\307\232=\353T\005<"
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "=\256\251\271V\247\322\2720$\014\272\032\374J\271\356&\276\271\234OP\271d\21449\362\375N\267\202\242g\272+\212\376\271hGS\271\345ze\271h$\215\270M\216\035\272\212V<\271\333\373-\272\004\340\3078.52\272W3\002\272\251\330\340\271\313\001\246\267\222&&9\306\205\336\271\024\212w\272@O\037\271\315`)\2726\037\306\272\014\225a\272\357\345,\272\266\307 \273\221\261\'\272\352\317\245\272]_;\274\260F\304\272\034\022V\272\365\335\252:RP\230<~\257@:\005\225n<\016VV;\314\337_\274\020\227T<\272v\361\272=\256\234<\013\222U<\261X\002:\021\001\225\272\205C\177<\264S\346\272\037\265z9}7\224:I\314\n;,T6\274\305r\220\272d\3046<\207\371\n<s\032e\274\026V\214\273\204*\037\2736\243j9\314\271I9&\314\024:\220\313\221:\345\310\\;\264O(\2722{\n\273[\021\204\272\034;\262\271\310\254\330\271+|\036\272\'\306\224:w\014\"\271\032\027\320\272\256\215V8\274I\225\271y\267\270:~\251\341:\177\t\202\272\0346\2558f\314H\271\3127\037:k?!\272\231\3157\2729\3219\272\264\300$9\375T\216:\201\236\t\272\224\t\372\272d\377\027\271\030\310\203\272\274aD\273\353\330\220\272h\306\205\272\237\375{\273\257\246\n\272<\216\000\273x\346\235\272[\2541\273\257`\302\272-\251H\272\322o\222\272p!\225\272\2301\302\271\004\276\307\272\375Q\000\273\276\346\327\270\274\205\217\272\266\002[\272\376\222\207:\246w\016\273U\n\276\272\240 \030\271\305)\204\272t8\203\272D\354\203\272^n\251\272J)\227\272\332\27779\001\003&\272}\230\321\272\317T\220\272\306\000U\272\271iK\273@\320\020\273\024|\321\272<p:\273\321l2\272\354lg\272\371\001\234\274\020V\007\275\247\337\224\274\032\353\033\274\237\271\204\274{>\217\274\025]\230\274\032\227\262\274\224Z\301\274\005\327\263\274\007\201s\274n\366\250\273\220\354\3239Tp\004\274\3536\n\274\244\177\000\274Q\206\330\273WH\251\274{h\275\274e\203\235\274\\\\\323\273\270\014S\274M#\215\274H\025\211\274\017\r\372\274\016I6\274\244\332\313\274\373\256\037\274\276\321\223\274\245z\022\275\306*\352\273\321&\271\274\274\250w\275\252\303\274\274l\334\231\274Y\377\231<\262A,=S\004#\275\224\355\254\275\246\245d<\342-\274\275\212P\032\275D\306~\274\374s\304\275\312\342\021=\255\305(\275\341/\243=\033 &;\362\021W=$p\303\273\306e\322\272h\013\317;\021\225\202\2759\275D\274`\326\226=\201\352X=}\263\214\275=2\n\2752\356\234\275\003rF=\335\373\017=@\365\247;nA\230\2740\2659<\223\205\027\275C\303O\275\'x\002\275\334o\276\274\212\325\372\274\203m!\275\3015\211\275\014\271\354\274\306\001K\275\004\330\r\2755\354\034\275\2316\t\275Z\332\216\274x\345\020\275z\366\360\274s\201\236\275\3377\024\275\311\276\003\275<-+\275q\000\026\275\312\274\325\274*e\000\275\214x\344\274\271\027\370\274\010G}\275\021\325\013\275\347\3426\275\250\224\244\274\3428\036\2758\002\036\275\031\347\341\274.m0\275\2469\201\275\226\310\234\275\265\324?\275\270<J\275\307\344_\275\0043y\275\\\357\001\2768+\233\275\'\363\233\275\305u}\275\365h\246\275H\272\245\275\251)\221\275\177\316\203\275z\352\215\275c\323G\275}\217\237\275\236\377m\275\231\264b\275\221\014_\275\216ct\275\261Q\224\275@/[\275=\323K\275*\336\255\275H\210f\2758G\243\275E\345W\275\2665\215\275\005\250q\275\366\004\236\275\305\r-\275\331J\260<\361A\013<\357w\207<\307\347.<p\032\235<\004\352\250<\342SM=4@x<)}\230;|\226\000=X\026 =\r\264\034=2\376\302<\"\244\347<==6< \270t<@d==c\014\241<qn\333<q\021\267<\016\033\354<HZ\352<\\f\037<[U\333\273\357\220#=VY\260<-{4=\377\234\205<\002\347\343<X\261\331<\363#\263<\214f\214<Q\261\217=\226\342\035\275\376\2465<]t(:;gT\275\256sM\274-\010\277<\301)\244=\003\246w=\300j\233<\031[\205\274\373\266x\2758j\205\274\217\227}<Q\317\217<H\177@\275\336\370\306\2759>\244;\307\017\003<hG\304;e\244\320<M\033\365\273p\320\252;3\303\211<\210\n\274\275s\330\345;\223\030K=\202\265\t\275 (\200\274\'\304\200<^\362\r\274\266t\271=5\230:=bu\367<\326$\307<\236\305\371<5\007\027=\234\363\007=r\277\276=\035H+=_\352\212<\247\010m=\177k~=\003\034\260=ej\231=\210$d=O\306\375<\334\221A=\267\363\223=\321\316\n=}l==8\326\027=\322\211D=\350\307u=\200\241\322<\347c\253;\357\002\207=\026N#=\250\322u=\224k\'=5y\\=|\3418=I\257S=q\206\300=\307o\223=!E\226=HN9=\023\t2=\234\236k=\342\010q=\335\025\021>\232@\226=\027\235\205=X\241\304=\005+\326=\247\212\013>6k\363=\034\200\246=\312+T=\206\202\265=e/\006>\247\253|=n!\240=u-Q=\323T\205=w\025\337=\216\024\204=\224\355?=5\220\343=\031\233\204=\261\302\303=\377\372\203=lX\310=I\203\257=\213\303\341=\233\024\317=h\240!=(\357I<\263\364\002\273\0359g<U\225\030\274\201[\224;\313\310\"=\326)\340\273i\220l\273\254\177:<\240\213\022=\305_;=e\225\206<\250\014\233<\254\355O\274\205I\037=L\215==\0224\017<qk2<l\032\370;\035\311g<\337`\364<\352Y\357\273\034O!\274\267K\033=\325\327\307<\002\2569=\213\033+<\002\337\271<\227\2732=f\2747<H\323Y<\365Y\036>\0013K\276?\351\271\275>,\217\274\301\240`>\024QK=\003\237e\276\375\352\233>ee\214<qv\322>\345C\242=\312\372\311<\tJ\334\275\320pA\275\311\254\301=\214g\375\275\262\270\323=\312CD>\003\200\227>\021\201\021\276\212.\236\274\205\177\305\275\nKQ=\261\347X=\2043$=\000\365\276=\314\242\355=\356\276\207=\205\241t\276\321 \347\274u6A\274{b5\276V\226\246=)\357\222<<I\371\273\365Z\004=g\177\002\274\000\371:<\247\016\207=X\345\214\272\357k\201\2725I\270<\210{\212=\217\246\230=\0102\207=\231\370!=\307\251\002;`\343\331=\320\226\261=\322\324\201;\206\r\227<@E\030<\314\211\273<\200,y=\343\320\034\273^\2522\274\n\324\236=\336\2076=%\244\211= _j<\027\326&=\226T8=p\027\030=\274\305\256=?\240\366=0\014\225=8\357\221\274v\366.=\001D,<\356K\227<&\203\277=n\246\235<\222\361%=\010\327\354<cz\376=\250\351\020>\365\317\251=t\251%=e\356\321\273\354\334+>\271\227\'>\303\313\306;V5\r=\016fF<f\205\312<$\225\322==i\002<\330\300\004=\\W\024>\364*\222={V\321=g\004\342<\227g\233=\261\022\340=\324\232\252=\315P\236=\006n\304\273E\303\014\274\027\370\241\273\315\203\\\273\257\240\212\273\020\266\260\273\320i\262\273\214s\243\273\353\272\376\273\023\355\262\273\335\300\310\273\240\344\366\272B\214i\272q\274\234\273\345#T\273\271\231\217\273\241\345\210\273!\022\236\273\231\203\312\273fu\243\273`\264\254\273^|\227\273p\002e\273\353\375\217\273Y\323\033\274{W\237\273\353\242\337\273c8(\273\302\036\224\273|\004 \274\212\203q\273\3740\266\273\356\374F;\021\322\212\274\376\314\340\271|\344\2009\032^\256<\013\"\335\274f\"\266\274R\203\243\2730i\262\274B(\273;\361\027\224\274\"M\007=\001\177\014<\237L\361\273hv\252<\031\031\234;\271\2325\274kP\322\272\014d\353:M\316\343\273ws\200\274F>\361<\316J\305\274\354\331\206<\344,\036\275Y\026\202;\317<\220\274\211]\222\274\322\\\210<vV\235<>\200\211\273\203]\323;PPB\274\217\266w\274\333\341\014\274Y\007\303\273\264|\361\273\316\3045\274\346\2577\2746\017\332\273\033uo\274\205\374\017\274\266\327S\274\254\357\245\273me\247\273\203\334\036\274h\026,\274\0279j\274&\241r\274\270\002\361\273*\262\'\274KB!\274\005\202M\274\271s\026\274\304\307\303\273\217A\017\274\"Zx\274\230Y/\274\013\"\006\274\313.\226\273.\317 \274d\016(\274\3331\357\273\236~4\274\202\020\212\274U:\240\274%\302G\274\352\2756\274\351\013[\274\007*\200\274\303U\357\274\237P\223\274\263\002\233\274r?[\274}\342\305\274\333\027\203\274\335\333\213\274\243\244{\274\373\'\217\274d\021p\274:\177\332\274\350Gc\274\224\341_\274\215Qh\274Nj\215\274\035\255\226\274\310\273V\274\303pK\274\266^\306\274V\256\212\2749W\226\274rAT\274\002\324\225\274j\204J\274a\322\243\274t\254\324\273\244\264\323;;\032h\274\027\321\021;\223)?<Oe\010\274\030\260\220\273\200\206\367;\206\217b\274.\016\235\274~h\010;\304\3455;~T6\274\346\315\243\273\205V\261\272!\260\366\272v3\256<\335\211p;t\035\262\273\034aX96}\232\273\217V\341\273\005\t.\271\270\342}\273\340$\267\274J\207\210;\203\273\014<\252\255\201<\357|d\272\251;\000:r\'\003=p\252\220\271\177\234i\274\357\230H=O\254Q=\325\322)<\014\010Z=\242p\n\275\320\203*=>;W\275\260i\201=L2\021\275\271\027\240=L\361s=\0056\265\275\254z\304=d}\236\275=(\270=\000\016\247\275}\235\320=U\202\275\273\276\344\261<\23305\274G\247\304\2758~\273\275{\021\n=\231\007l<^\357\232=\n\207\240\273\366\245n\275%#\301<L7\235\2741Ru\275\350\010U=m\272C>Y\0332<\014\240\017\275\244+\321\272\206\216\211<\372\210\211\274\177\315!\274Y\\p<V\321\316\274\272\336\014\275V\356\236;n\272\305;\230@\342\274\273\n\\;\226*\242\273f\0011;X3H=\032s\324;\325\312\\\274\221\247\n\273#\214C\274l\325Q\274\276\225\200\272\312\201&\274W+\026\275\323\304d<j\340~<\261\242\213<\351\277\211;\234~\262\270\334G\375<\342\013[\273s\027\326;\325\320_<;b\361\274,V$\274\n\357\350<sB\375\274l\274\260\274)\350\t<\204\027\024\275\344\275\330\274\337\001\032<\205\313\347<E\315\023\275\274\204/;M\263/\274%~\213\274\372\321\234=$\\\024=+A\325\274@\317\215<\325\n\270\274\201\230\267\274\027t\265\274\036\036\000\2750c\r\275\331M\016=\2569\337<\256%><\360\263B\274\236\332\037<\334\315\023=g\362\224;\253\342\031\275\024H\001=#\240\203=\214\340\234<loc=\024\321\\<yh\277<z\321O<\274\021\027=;\361)=o\321\005=\252\254M;\367,j<\3641!=\273\306\225<\n\351b=bxx<\315\016\215<\216\330\221<\376i\367<\357\235\302<\236\266\n=LB\374;`\3456<\341kT=\177X)<\r\325 =12\316<jnY\274z\345\235<P\006\315;\233\362\215<i\027\344;A\305?\275\250z\350=\256\3739=\207:$\275\247\361~\275^\022\261<H\2329\275,\260\242\275\263a\'\275\357-W=\023l\260<\357\361;\276c\263\267<l\372\017\275\376\337\004=A\226\214>\337\242#=*\022\210\273@J\343;\r\243?=zL\030<\022s\362\274\302\023\230=\326{L\275X\265\256:\377O\030\275]\246\315\275*\265k<\3358(\275 \265\010\276\314\360.\275\325\232A>\202\342]=S%\325=\346\255\r==/\343=]2\230<\3601\270<X\2253=\273)|=\361\360\256=\254|\210=\221\344a<o\000n<\374\215\253=.%\201<G\007\234=\354\376\306=\026\232\316<\0214\"=\234\3211=\223\212\016=\353\227s=\357{\242<\257\025\313<\272\314\251=\325/\305;#\316\213=8\'\001=@!\342;\266\3578=\322\020\212=\013i\353<\220N\304\275d\036r=\002\222\353=\024\004|=\246\"\371=|M\341<]=T=G\2509=db\251=\373\031\260=^7\320=K\0162=}\266\202\275\\J\233=5:s=\370P\253=}\336\036=\224\201E=\330\344\226=,c\247=\234b>=S/\254=f\334;=\347\343\200=%\357\300=\2005Q=U\240\277=u\273\311<\227\367N=.\017\253=@1\032\274\002\335b=F7\351\275\313\010\337\272\264\216\361\272\224l\314\272\344\361\353\271FO\357\272\264\343\300\272\353\337\347\272\273\354\005\273\341\340\374\272\254l\351\272\264\360\006\273 J\0248\n\231\2368\240$8\272\205\r\314\271#e\231\272F\021\364\272H7\377\272\325\357\256\272,\312\004\273V.\021\272\351!K\272\351\004\245\272\264-\2769\327\2323\273\\\213u\272{\206+\273]qT\272i,\314\272\304D;\273\314Mo\272V,\320\272\325\262\354\274\333\224\3679;\257,\274\\V#=\337\241\005\275]\353==T\241d<>\013W\273\273\200\n<\313]\322\271\021K\310\271t\245\253\274\023\360\003;\374c\205\274\337P\272\272\271\032\254\274s\3654<[\263\316;\253\307\016</\312\211<m\203\274\273\343]\344\274\246\250\017=\250U\275\273\026\315\375\274\310qi;\220D6=\370\262\032\274\211E=<\262\307K=\276|\002\274Q\231/=\247,I\273*\353W9z\027!\273\343\002T:\313H\'\273\020\347J\273U)\254\273\330&(9\021\231\030\273\330\362\032\273\362T\240\273\\F\200\272\251\343v\272\003\206\336\272\222\342\"\272\224r\277\273\236\234\253\273\025\334-\273x\032,\273@\265G\273Iz\000\273p~\345\272\303o\342\272XR\021;;N\341\273aLQ\273K\tU\273\242h\207\272]\355K\273?\'e:K\200\366\272>\022~\273\327u\212\273\337\325\212\273x\026{\273Y\260\222\272H>\225\273\237L\223\273\271\226\354\273\215\320^\273\303`\217\273n\245a\273\307Z\307\273VZ\246\273\332\302|\273z\377\016\273*\362,\273\202\023\343\2737E\"\274\036\310\225\273\234~E\273\364\226\224\273\321\336k\273w\312(\273\214\346Y\273=P\036\273\204\257\261\273Z\022\253\273\305\314\233\273hW5\273z\026\262\273\327\222.\273\205\t\264\273\260\214]\273D\204\325:\314\243\253<dS\245:\177\026\241<\250+\020\274&\237A<\2438\023=z\006\240\273a\300\035<?\227\026=\324\004\000=\272\226\217=\354\375\023<\250q\205\273\010\213x\273\366\347\353<\363\376j=\275\272\300<\177\253\272;\263c\307;\007\032\354<\237\203C<9n\024<\246\250\375<M\264Q<\203\351\254;\233\372\213\273\020,4=\020\355\273<\272-\037:U\003\337\273\244OR=\350Sr<\311\301\272=LF\272<\314\360D\276u\265\231\274\242\260\314\274\261\324E=\212\303.\276\273X\353\275\345-\016\275\205\204\003=\207g\232\275\350\342\346\274\376S\007\275\227\'\252\275F\300\347=5\210\224\273\t\301\277=\000g\355;\017s\347\274\373\355$\2755\0008;kk\271\273\325n\370\275=\267\361=_z\377\273b\220\346<\314\362\370={I\326\275v=\303\275[\253s=\013\3457\275\317}8<\353`\035=j3\201;\332oW<)\241W\273Qt\303<\277o\210=f%\276\273m\007\315<Pyw=m\224T=\246\205\t>\0333\207=\220\210\247;non<\3206\017>\374\030\303=k\275\037=\247\245C<\374\331\211<\310\332X=\371\232\013=n}\306<\0311I=S\352m=Z\354\277<\347\245\312\274\245\232\215=\205PN=%1\255\274\245M\336<\346\177\367=f\330\214<6$\207=*\332\377<\000q\014=\016\330=<\366\"\032=\313H&>\254\033\027=&\010`=@0M=\3122\212=/\370Y>\255\214\204=\233\277\231<D\200\244=m\332\272=\034\303\001>\005<\205=\232s\257<D\345\327<\225\340\213=\274\356\003>\r\267\\=\0044~=2\352\034=\230\361&=\372*\336=\026_\265=\357~\357=\327\226\363=\004\302==4\rE>\003\310\032\275\351\223\254<\030\346@<\004\325<\2759EM<\261zg;\210\251\023\274\324\277{\274\020\201D<7LL\274\373\221\275\274ud\275\274B\013\261;\236\025F\274\301g\321<s_\220\275\236`\303\273M&\001<\030\205.\274J\340\255<\034\344\252<\276\020Y\272\354a\207<@\226\270<,\217\'\275U]\372\274\375\333\225\274\362o&\274\330\336\201\274D\343\333\274\356\215\203\274j\035Y\275\347\325Q>G\246D\273\371iE\275!\240i\276A\202\010>Q\021\007\276\342\310\235\275\341\3014\276\257H#>,\014+\276\247H>=\361\251\023>\022\306r\276\301\370\225>\235\327\362\275\212\230\324=_\020\351\274\004\265\225=x\001\003\276\234\\\257\274H\236\267=\321\327\343=\325H\032\275 i\327;\330\312\213\274>\371\021\275?\216i\274b\215\203=\324\022\177\275\205\214\305\275E\3515\276\373m\220\276L\257j\275\033\025\t=\326n\257<\312D\216\275y\276\361<\224\026#<TR\245\274l\323\275\274p5=<D,\363\274)\303/\275\327\311\220\274\3749\024=\335^h\274\245D\266<\200\236\346\275XO\223\274\367=\323<\"\375\t\275\303\323\036=\177\261\017=\030\250[<\276*\"=+m9=Q\245\221\275\016\334]\275+\013e\275\362\260}\274|\006\002\275e\230q\275\355\344\215\274v\336y\275:\343\306\275?\2021=\332\263\031=&c\257\2754\201d=\247S,=\006\245`<1=\372<\312\311m\274b\003{\275\202?\274\275\331\235\243<\355\204\336\273\202N\211\274Hv\004=\232\010=\276-\244\212\275*tf=\320*\243\275\306e\206=?}+=\"\t-=S\007\275=Q\372P=Z\361\347\275mp\213\275\361G\210\274\017=\261<%9\031\275;\356\200\275v\260\210\275\020\373U\275\316\2172<l\311\031<\362\255H<\326\212\016<7cS<\223\244\202<\315\244\256<^\225N<<?h<\n\t\211<\257\306\306<\316\016q<s\202*<\016d\211<\252_j<{\\\346;^Y\343<(@&<B\331\233<\313\316\202<\201v\247<\205\016><\331\370\352;\010r\242;&\032\343<N\214[<\276\275\250<\320\325\276;\256\014><j\335f<\305t(<5Q\373;\353\230\273<\307\364\207=\203\322:\274\236\301\215\275\247\243\017\275s\035\274<n\306\220=\014\004B\275\354\237\274<jO\177=g3\t\275\255#\005\275\376\374G=1Z5<\230\026\324\274\035\202\000>\252\263\277\274&\324\\<|2\203\274\242\347\261<o\255\270<\177\311 \275m\305\005\274U\367\313:%\256\233\275\320/\274\274zw\251=\243\302\265\274\253\032\202\274\321\355\177\275@\004R\274_-B=\2158\241<\351\305\203<Q\342\257<\277z\233<\231|\302<\373\357\240<DdR=\260\322\340<O\014\230<\031\232\010=\216z\031=G\010#=\246\3645=\344y\003=\005\222\340<\024\242\251<\322S\'=\373\310\221<@k\371<\356[\341<\036\\\031=B\300\362<\\\337\211<jX\362;\2777(=\307\205\321<d\010\251<\365\252\236<\372\225\311<\024[Y<\257\212\347<\'\027\016=)\020\375<2\\\021=\244N\010=\274\243\360<\000\036\014=yR\017=\257\272\245=\346f==\213n\027=P9T=\366\022\200=\220\321\177=`\227\214=\026L;=\337\260!=\252g\031=;\005\213=8\315\023=\274\312;=\227\007\034=\361\332?=\037\366e=R\256\'=\230\235\301<\271\260\202=\322\2125=\271{;=C6\023=\210=A=Q\200\363<$\035\203=\\\376(=y\375\007\275\354\320-\275\3261\253\274\321s\214\274\232\351\204\274\240c\335\274\231\030\007\275\025\234\306\274va\020\275h!\360\274?7\342\274<\024\371\274\000\342!\274\343\335\275\274>`P\2749\276\300\274\234\325\336\274\032j\317\274AS\341\274\313S\274\274\351Q\213\274\315\244\336\274\221\241_\274\256\310\264\274LD!\275\205B\315\274\330\017\027\275\350\365b\2746~\325\274 \2577\275\215\277\243\274\214\267\370\274J}\267\275l\022B\275\241M\026\275wC\201\274\224H\000=\236\361[\275\324%\027\2750\254\036=\320\340\314\275\331[k<\345\027\271\274\202\367 \276\252\220\327\273\3341\026\275\031G\232=&\266\235=\014\235\324\273\033\353\023<\026\371O:\215\225\277\273\177`\016\2751\020\315\274\241Z\256<%I<=\216Q\217\275w\024~\274\246\336\270\274v2\t\274\337\273s=\311\263\212\274]\376\024\275ep\234=\305\366\202\275m\262\215\275\307N\001\275sC\030\275F\337\340\274\373IW\275.#a\275\004=\005\275h\366e\275\345\306C\275\035\212[\2756$\251\275u\333+\275\030k?\275rt\002\275F\017\273\275\236\310\220\275\033n\026\275\372\3768\275\357\342\023\275\267\244>\275{vF\275\310[\310\274\333\t!\275t\235\205\275\311$I\275\\\014q\275\366a\315\274\024\322f\275\3203C\275Z\321\"\275\352\275\231\275\023n\316\275\005\234\301\275\357\376R\275\200\204\221\275\327\232d\275>\342\235\275!\345\362\275V\000\261\275HV\256\275\206y\273\275\327A\342\275\315\347\373\275\001m\233\275\316e\237\275d\367j\275:\020\302\275\370=\001\276\035\372\205\275g\317\240\275\371\367a\275SD\234\275\252\024\274\275i\271e\275\360\226u\275:\272\355\275\271\312\260\275!\275\306\275\311\266\207\275\210:\332\275\'\'\255\275\333<\272\275\3366s\275\266\261\315\273#n\366\273\201Q\020<\374\343+\275\270\207i<=&\214;h\365\216\274\345\026\335\273\346*\226<(\357\004\275+\352\243;\215L\356\273\263\355\261\273d\261\256\273l\273\224\271\352\240\251\274\005\356\226:\241\020\340\273@\003o\274\257\302 <d\250)<\310s\226;q\201e<\217pV;\376\023\007\273;H\213\274\343\222\246\274\247\250.\274CC\216\274\322\354.\275\205j\260\273\2505\002\275\3350i=Okv\275:$ \276 \207P\275:\2526=X\016\036=\337\223\335=-\307\n=6T%;|\332\203=\376c\351\275\321c\201\275Z\364\223\276\022\266\213=\300\034\325\275\0033\232=\206\340\322\275v\007\276=\002\227C\275\004\253\033=\274\325\033>#\321\244;}\367\343=A\217a=|}\257\274\037\304\274\274\375~\007>do9=\034\201K\275NJ\364\274\201\212v\276LwU\276.\255m\273\325EL<\037\264\233<(\004p\275!G\342<\345\350\017<\245\236\007\275\3460\t<n\030\271<x\220O\275\356\343\2369\213\361n\273\230\210\010;\031&\335\2735hB\274\016$\244\2758\003\n\274b\377\326\272\344\003 \275\021\211\247<1\236\222<\310\320\267<\316\244\014=\tE\225<~H\013\274~1\n\275f\341e\275\317\\\214\274A\016\355\274R#p\275\347\"\277\273\265El\274y\2723\275\356KC\272:DQ<\306\324\240\275\\\213\013=\250\0245<R\233_\275\2274\344;1\352\325\274F\305\317\275\272\345\200\275\177\300\221\274f\030\342\274\335\371>\275\377m\036\275\r\r\364\275\305>\201\275\232\375(\273\355\006\304\275\263\355\371<\344\007\316;rx\211<\205\364j=b\342\205;\002\243\225\275\222nM\275\005\2410\275\201\2048\274\332k\202\275!\365\302\275\315>K\275\237\317\352\274\007[\264;B\024I<z\205\334:\266\343@;\335Y\014\273\364\023\371\271;i\341;\377V$\273\275\346O;@\032\333;\320\374\226\273\252\225\256;O\031-\272\001\217\301\273\226\016\303\272\037\246\030<\314Z\t\273HM\344;\327j19W\013\200;\232Dw8\304D\214;\320\213\342:\313\311\272;\207.\351\273\224%8;\202\262\001<\020Q%;\270\231\250;p\017\203<\000\334\004\273\340\232\313;\244\203\371<\034k\035=\255\204U=Sx\200\275}X\257<\002TW\275\316{\341\275\245bN\275\300`r\270k\025K\275#xN=\007\232\306<\205\272%<h\0031=\236\200\361</B\235\274\267\271\212=L\343\264\274\007w\300<f\3628\275\234e\010\275\310\3168=\337\265\364\274c\243\247\274\325L\275=\215\356\220;\331[\021\276yy\306<\317X\017\275\307\270k\275:\255\n=\034\342,\275=Av<w\307t<-\2737\273\377%S;\035\255#\274v\335?\273\034\251\311;L\325m\274QR`:#H\004<\321\016c\273\331\321\257<f\350\207;\244\340&\274\372\010\037\274-\324\031=\272\304\336:\372\343\034<c\223W\273l\030A9C\317\303\273\323\255%<\267\315\366\272\252\274\024<\367G\003;s\362\263;x\016\211<Q\240r;\224\255A<\354\351/<~d*\272\376\315\256<\311;\242<\024^\240<\352e\325:\325\320\321;\276\274v\273\000\374\242\272Y\361>;Y\366\204\273X!\337;\225\315\251<*\271\2369\022M\360<\250\303\201\274\224`\257\272\377y\360\273ri\037=\322~X<\275\210!<=\177\245;?\364B\2711+#\274\003\361p<Z\304p\273@\307F<m\2455\272Tj\345;\310C\244\272\300\2320<\210\274\327<\302\026\317<\2340\363\273\023;\256</\374\013\275E\026\207\274E\017\221\274H\254\275\274\0003\243\274\352\362\354\274\007\264\207\275\255p\303\274\342\334\335\273\266\206M\275\004PJ\275BD\177\275\355\373\016\275}\267\026\275\321\2208\274\241B\330\274:\370s\275uw\365\274\r\371\034\275\320\201\335\274\024R\023\275V\324!\275\003+3\274\0317\213;.\243N\275{5\023\275\222\316j\275V_\305\274\370?2\275x\022\037\2755\001\363\274\036S\371\274_j\271\275\241R\210\275\235\266\345\274W\320y\274\026\362\304\274\342\347p\274\027\240\206\275\017\307\232=y\270\277\275\237\252+\275;\022\360<^r\003\276>y\257\275\277\010\251\275\344\236\010\275\277\321\243\275B\241\341;\376\275\225;\231\226\266\273?d\001\273\037s\341\274\316\237\023=\211\002/==0\264\273\376O\222=Mqn\273y\\G\275\236\003\246<?nv=d\000\231\274\222\347\274\274\325$\376\274\'\264\211\275\302\203H\275\244\314\324\274\365\366L\275zq)\275S\037>\275\231E\360\275\3452u\275\337\245\340\274\361\034\257\275\253\226\242\275=,\372\275\021\217\324\275\377\377\217\275\274L\033\275\030K\243\275@\234\303\275\346,K\275r\273\203\275tX5\275\010\235o\275\006\215\245\275 \220\013\275\212_m\274j5\256\275V\317\205\275\274\304\235\275A7l\275\010\334\242\275\336\030w\275\275W\220\275\'\300\374\275|\251\332\275\253\004\327\275\340\306c\275\327\262\220\275F0\215\275\366\301\245\275YO6\276\320\301\316\275\245\215\267\275\330\266\020\276\020\261\021\276\222\312A\276\260\366\031\276\222:\340\275c\211\207\275\324\261\t\276l\3643\276\374-\264\275S\000\344\275\204qv\275Y*\250\275\310\242\027\276{N\253\275\352\377\216\275z\004\032\276\257\243\325\275k\033\365\275\004\\\262\275\211\341\024\276W\306\362\275\007\021\024\276\232R\004\276V\236\256;\232\233\377;\321Sr;~z3;\277\310/;[ \233;\313\025\246;\242\'\223;\217\021\302;\030\237\244;C\361\206;/Fc;\310\235\036:\253\240_;\370\243\030;5\323e;\221e\202;\330\323\223;\t\363\235;\tn\200;\263t\211;\314\362f;%\334 ;P\004q;!\374\326;\013\021\207;\256\376\314;\303\227\r;\317T\205;,\315 <\326\211B;[\315\240;\204\364\322<\341m\367;\006\366\014\272\201\314\210;\347\213(;4\034\030<M\251\304\273\325\236\330\273l\371\225<\351.\033\274\332\030t<\211nM=\276\265\353\274*\213\005<\212\224\206\274rn\320\272\370\210[<bFR:\254\274\220\273/ \242;\223\252g<\377\241\241:\373M2<OR\317\274c\014\033=/\216\305\273\214\341\257\272\"\251\206<\037N\207\274\\\352.=\021\340~\274\350\033\220\275W\345?<\022aO<\365\375\272;\007=c;\254b\211;\320\353\016<@\022,<\357>\233;\243\306)<d\357\007<p5\025<DnG<\237I\310;uy\337;\362\330\303;n;v<\237\024M<\311\265\335;7\211\367;\224v\343;\236N\004<\022C\023<!\231\213;\n\233\345;<\231A<RI\r<\275\356\003<\217X~;\372\200\030<\255\340\004<\177t\314;\311\016_<\355\252\201<\272\005\212<\267v\017<C\244\377;\333\347\030<\3621@<A)\265<\307ej<\356\221k<B-a<\276\303\233<2\315\264<\340\202[<A<D<\300O3<\2467y<\006\363\261<\246\r@<\221|7<U\212\'<\2061&<c\307\221<\367)$<\261\306)<\216\316\234<\261tn<\037\324y<\241+.<\364:\223<\315rL<u\332r<3\3574<{a\216\274\247f\022\275\215\347\021<\345\267?\274\362C\327<\032\234\322<\244\017s;\310pL=\354\276 ;\374\316g\272kJ\r\273V{\037\275\202\207f\274\230Z\202<+\350\031\275b\325\001\275/\377\203\274\244\352\020<)@\206;\204\023,<\037\343Q;m\215\003<`\371\016<\336\315\355\274\\\270\205\273\037\n\215\274jd\264<\227\233\257<\237\202\n;\000\225$;\225Hk<\243WZ<n\r,=V\375\271\275\037F\205\275=\323v=%\204\277;\360\361q=\310u\212>\233_D>\321_\234=\rK\317=\375\307\224\275\005\366\241>\310z\263\275b3n=\241m\025\276\222\322\353\274\274L\235\275\0000\307;\241~\332\273\347\374\006=\251\340\324<\317\237\221<a\252\224\274\'\360\306=\352\317/\276\014^\221\274\023\355\265>j\316T\276\023\017\215=\262Y\354>g\240\022\275V\023\001\276\265\202\300\274f\355R\275\342\316*<n\014\315;dx\021=\273\210Q=z\352\263\274\326\257\241=\217S\351;\363`\340\273\243\317r\274q#v\275\256Z\014\275H\205\r=\235;1\275\213\003\314\275e*\333\274a\316Q<YvZ<|\034\226<\227\371\203;\260\233\025<\310\325\"<N\301@\275\215\352\221\274\025\212\002\275\211?\255<V\364\247<\004\256S\273K\275 \275\005\371\275<\211\022\210=\236\263\021=r\245\331\274\250B><\016\247\364<a\356{=\362\306\206=\223-\024\274\217\r\366=\252\301\375<\010p\037=vd\240\274\320\265\264=\342\325\316;\257,O=_\266\234\274\225*\360\273\370}N\275\210o=<\275>\262<\025\327\351<\3055l<\310L\261<v\315\220<z\003\312\274^a!\274\213\201\207\274\246\240\005=S?\273<\207\243]\2749)\225=\345\304h=:\272+>\263\375y;\210\222\026\272F\211\2339\304W\244;\306^\306\272\313\354]\272gVa;z\307\242;U%C:\277\274\031<+\227\2629\326F5<X]\326\272o\344\262\2722\365\371\273\351a\256;\2626\025:\370U\333;\351\225\267:E\220\374:L\\,\272\035\362M;\367\333X\272\276\030\306:\265\255+:\253\3536;\331\256\3609B{\273;\246\235\324;\013\254\033;\360P\':N\337[;\361\213\254<\362\253$\2751\360Y<x\037V=\315U\266;\351&h\274\317\216\021\275\232&\261\274#\035\267;\243\002\261\273 \014\316\274J\231\t>,\307\374<HEh\275\213\332\216<yA\214\275{\240:<\264\3033\272\211\032+=V\323\352\274$\005\017\274n#+<\213*C\275B%\355<\376\2013=\035\000\237<\204b\006<\035\221\312\274\261.\010\274\250\373)=\256\t\033=_R\234\275\274>\'<\032z}\273\252\225\210\273\237\0265<07\205\272\346\264\203:FS\r<a\365\342;\256\212\177\273\377\322\235<\370\010\314;\376\362\000=\260\203\026<%\231Z;\314\3120\274-\263\373<\360\"\016<\345K\031<\034\003\212;Lb\2317\225\253\2179\020n\t<\242|\247\272!N\200\271HWx<}\344\323;\350#\227;\264\325/<\376\243S<\027\376\246\273\357\305\275;p>\306<\016\365\245<^\017\007<\233a\3218\317\022\226<M\2446;\232d\010<\367\237s<\206jy<me\024<$\260\023=\213\3013<Ri==1m\347;\300D\016<Nk\220\273\376\025.=s\226\314<`\230H<\301\370\220<\331\221\234:\360i\211;\350\253\233<f\236\036;\234\277\354;e\034h<WIM<\377\313|;\351y`<\000N\330<Z\030\266<\366L,<j\301$=\231PC9-Jg\272\202%\222:\237\255\024;\230\254C:]\374\013:\251\375,\2730B\033:\'\033\222:\266\327{\271\276\005\020;2\274\321\270*a\2059}-\213:\372\213]:\333\266\2118\302%[:\304FW\272\242\367\017;\247\004\3019@\334\3349+\374\245\272c\301\3059,(\033\271Q~s;\221\n\3479\253J\211\272PB\'\272\365\n9\272\254j\001\273\236\272\031\272eD\231\272\2149\251\274\212\376\301;\232\3148\274v\276\257\274\222+\337\274\026\341\234<k:\257<P\371\020\274\003\344\225\273\013?\223;\200\020\023\274\210\"\204\275R\347\252\273\324q\234\274\225\214\273\274h5w=\320-\226\273\326g\240\272-\362\330\273\261\031Y<#\211&:1\017\244\273P\320\377<\366\017\251\272c8k\274\032\331a\274\351p\022=\2430\356\273G\216\003<*\r\347\273C\214\220\273\013B9=\3611\002\273\237\326q\272\200\\,;\2101o;\250h!;\266@79\231\243\202\273\352\362N;2\210a;)-\3109\271\003\232;@]F\273n\377\266\270\324\216\234:\304\222\202;n\"\013\273\361u0;N\363~\272\275ch;4\002\352:\244\312\027;\260\0102\273\376\375f:O:C\2719f\201;4%\256:.\263{\273\247\333\361\271\013\375\362\272\217\334\023\272#W\225\272\365\001\332\273\016i\245\273V\317z\272\354\303P;\346\374\377:\037S\324:{I\2229\023\206\274\272/\nl\272QD%;\207\3063\272O\333\253;\205\3245\274\265\272\317:d\311\002:cE\360;\352zf\273D\232u;\320C5:!:\001;\266`\r;\300}\231;\237\034\231\273S\273\315:\230\206h\272N\"\'; \351\360:\226\254\317\272\233\223\361\272\nP8\273\245\035\300\273\022V09\007\226\016\2744\030\005\275p\003\310\273\240B\362\272B\371\245\274\330]E\274\2621\205\274\377\326\032\275\276\305\036\274\1778><\344M\316\274\022\205\001\275\333\020+\275\235\3434\274\002J\r\275{\376\370<\020S\013\275\271\022\254\274\330\260v\274\3110\332\274\255\tu\273H\323\3218\215\225\233\274\334\323\366\273\242\246\025<\036o \275#\255\003\275\316\037\022\275\005\341]\274\347\264\321\274$\006\004\275\260\357$\275\014k\232\274\030\351\365\275\371J\326<\314J\232\275m\333\\=\001g\235\275\304\260\326=\031\034\227<[\365\376\275\263\016S;\213\265\202\275P=\036=\215\332(\276U\262\031\276(\265\375<b\206\215\275C\307\345<\211vx=\240\225/=\362\366\375\274\252k\313=:\324\203\274\213B4\2766\373j>\241\031\\\275\2306\332<T\222+\275A\233\263=\267\036\020>c\236\204\274*\300\252<\232f\024\276\364q\223<R\"b\275c\005\212\274F\323\203;\267\016,\275k\205\234\274N\363\017\275\321\232\201\275\227\274\260\274\200\355\250;\314\331\035\275-\214^\275=\353\240\2758>P\275\371\315\201\275\221\310\333<\243I\267\275\030nO\275\nX\200\274\356gS\275\377S\323\273\200\345\327\272\301\313\014\275:Vy\274\025\253r:\021\016\227\275MHo\275Z\331\254\275\251=\351\274=L3\275\207\244E\275\305\264\233\275\203\224\325\275o\256\307\275\247\025k\275\232B\250\273y(?\275\333\317D\275\201\005M\275P\351\267\275\301\221Q\275\326}F\275\037\226\313\275w\334\341\275\304\005\350\275\314^\310\275\005\304\272\275?i\314\273\006\021\014\276\262\300\363\275[\205\320\274&l\322\275\321\326g\274z_\224\274[`v\275\306A\247\274\025\337\004\275\222\303\001\276\202d\242\275G\"u\275/\324(\274\000\007\234\275\345\035\256\275$`\357\275>\007\272\275<\240\227<\235D\215<\331\352\247<\376!\020=\344\227\310:]x\224<\t\000S=8u\r=\207\2228\274\341M#=k\010\363<\201l\\=s\271\300<\362z\244<\241 \200<\n=\363<c+&=\263G\224<\313\346\375<\302<\231<\016&\325<\374-\007=r0\223;\342\014\017:b\203\301<\351l\373<\265Lc=\271\022\024=\311\233\r=\364\204\227=\037~\203<\302-*=\'\262\306\275d{\"=\224\315\203<\377MW=\216>\272\275\273\260\236=\321\215\300=\023l7\275\260\205\203\275\032K\256=<v\313\274\306\003\342<\213\032\253\273\356<\t\276Mu,=\372\204\021>\203\322h;\221w\350<C\034\265;\014E =\322|b\275\31630\276\342$\276=2\264\347\271=D\031<\030\212u\275\027\200+>,R\224\274 x\254\274\254\341\270=c%\357<u\206R>\0170\014=\223\005\304<\352j\335<x\320m=\235,\033;\302\031\323<N\254\276=\265\207\177=\361\252.\274\303\243\\=\352^B=8|\002>\314\263\264=F\260\031=\030AS=\365N\276=#k\203=\023U\325<\014\222C=\002\273\275<=~-=\240K\230=\'Y[<x\005&<\205\237r=\013Wl=x\242t=\366P\253=\352<\201=\263V\374=\276\237?=\027\3400>/ak=,\242\225=\024\360T=9B\322=<^u<2\273)=\377\371%>\211b\317=.\352/=\177\017\316=\246\307\337=\177\370P>\037W\371=\336>\212=\360^\253=\360D\371=\346\371\377=t\304W=\016U\274=y\353\361<*qv=f}\374=\207\344.=\221\2367=*r\323=\337\220\266=uO\r>`\234\346=\002\225\001>\211\007?>\360N\340=^\325\032>\274jD:_\235\016\272\301}\3449\347\375\224\272F\\g:\245C\001:\355\376\210\272\010\313\3217\265u\316:7y\034\273\375u\217:\205\313\223\272\353\333\366\272X\370P\272$\320x\273a\211\274\271\276\252\025:\206\315\321\271\260W\021\273\211rd:\303m\206\272\337\n\006:r`h:\032\376p97\237\352:\246\217\243:\333\216\246\272wvC:\\\254\0168\223:6\272\033\247%\272\004,\211\273\332f,<I\031\254<\331\221\257\273p%0;\341,\r\275\2546\r=\3677\345<\302\343{\274\327\345i<X\366\244<\227a\207\273\035I\262<j\340\317\273\300S\210\271\002=Q\2748\322\211\273\246?\200\274\372\n\305;\337\332\202\273\037\374\250< \202\020\272\345\246\004\275e\206K=\264\335\"\274\344k}<\336aF\273\227>\257:\324)\263<&1\261\273w\220G<\343\351Z\273\230\311\227<\323&\231:\356!\000\273J|\261:\220S\320\272.\224\205:\331\242\2109\340\212o\272\373\342\0069,\330B;SS2\273Q\315!;\212M\336\273\320\207\007\273\224\260\207\272\336\340e\273C\201m\272\220^\007;\326\371K\271\242Q&\273\301H\301:t\263V\272!\307\2679\370Lq:\273)\002:.\231k;\247\020\343:xo\024\273\\\353%;  (\267\377\345\277\272\273\002\200\272_\326\t\274\257\223\260:~\313\033:\364\007\227:\327\307\266\272\222Z]:\3022\3749\377e\036;&\3702\272\353N!;\205\221E\273.\034\235;\352\243\031\271\002\203\373\272\362\033\271\272\224\363Q\271\347?s\271\355\262\242;\350}O:c*H\273d\353\032;\016\001\365:.\233\271\270\\v\013;\224\344\361:\302A\206;\200\027$;@D#;\033$^;\237\312L:\231\000\017\273\376\0314:\220\262\222\273\374\376\325;4\344\032<w{\234;\221k^;\237p\207;\227@\324;\202\003\002<\251\240\272;\336\037\376;EY\344;l\221\334;\017D\245;\250\361\303:6t\272;\233\221K;G_\217;\3617\275;{\264\276;\212\005\334;\004?\254;\033V\333;\002@\301;\270\346g;\340m\227;F\014\023<\211\325\256;\014\333\004<\034\255!;\343*\270;D\2769<\212\264\214;v\363\334;\206\311p=\337\353\302<\311\216)<\251\003\321\273\031>\361<\322<\002\274\224\007\266<\372\221\020<\010\334\231<\001t\276\271m7\234:IR\242<\251\353\026=T\357\205<\362\327G<i\356\335\271\262]0\2742L\305:\'\035\010\274`\322\322:\206\236\205;\227\277\233;\024\205\367\273\016<-\273A\272\253\273\224\354;\273\326{\355;\025O\020\2736\271\202\274\363\021\"\275\002\206\031<\021\214\215\2739\327R<\032\242W<#\243\376;cA\307;\222Z\004<\250\005F<W\203\252<=Y\345;\255\2511<\323rK<\225\240Z<\240\220\217<\310\241\'<\214\255J<\202\345\020<\335;v<bE\206<U\262\022<\233\336;<?\341\"<6UO<\253\336f<f\023\317;\225?\006<\220m\205<O\025;<\300\322F<\360\272\242;\247\246N<L\250\'<\006\034\030<M\363\255<\027\'\240<\203\267\255<\riB<\020;S<\203\336l<\361\203\221<A\240\032=q.\247<\313\275\233<\005 \260<d\247\324<\237\366\371<\332\334\302<6:\233<~\247\200<k\374\254<M\336\365<\243\206\201<\032=\237<\275\\l<\177\212\206<\313\357\325<\272\'u<\3019c<\335\003\333<\201\324\236<\364!\251<\223\367k<\325>\276<;\330\225<\260\315\304<\312p\241<\3215\227;\242\376\035<0!Q:\230\037\270;\373\266\227\271\2218\231:^~\233;\t\235v;\332R\354:\362\306\324;\331)\005:\370\272H;\004\375\023;\223\016S\273PjE\272{\333\310;j\027t:~\235\274;\334\322\244:y\245\002;8\346\224:\303\242\360:|\236+8Iu\227;\002W-\273\344DJ;!\367\361;\327T\3609\347\234\206;\3265!<\273\023H:\240I\201;\354\317Q<D\266\306<\3419\036=\333\261X\274Pn\314\271\342\363\212\274\377\001\211\275\300R\257\274\206w\336;\254\304\357\274\301M\036=\013\331\235=\211\0339=r\324\245\272\325z\r=\341\027/=\003\306\236=\003f\210\2749s\356<\257Z\272\274R\376\251\274\343\322~<\317\262\242\274\225\322\242\274C\371\202=\345\264\n;@J\361\275\223\277\202:\316a\247\274s\214M\275)a\202=7\254\256<\2652h<\261mt</:M\273\322\271F<\2406\205\273\270S\2379\340\036\272;\201jl;\355\327\n;\262dc<4R\367\272\020\373\240<z\3770<\256\327\270\273\374\256\237\273Ji\003=\356^Z;\205\315\026<4\004\203:a\023\210\272C\334\333\272)\024\344;\307\344\355\272\371K\005<\367\313K:\312\210\344;f|\204<\'\033\327:\322G,<\365\342\031<S\266n;g^0<\023~\234<co\212<dL\3059nu\216<\375:\272\272\216\030\026;p\33159A\376\337;\334\343\354;\034\330\303<\255\321\225;`\230\305<N\205\034\273\304\022{;\244\354\224\273\330$\363<\205m\032<`V\037<\310\265/<\023I\345\272r7M\273(lN<\276\347q\272a\251\035<\205\240\301;\306Y;<&7\033:\233\005\002<\026\345\246<\273\004\221<\334k\305:~\273]<\351w\210;~\013\325;g\024\016;\030\031Y:\353T\245;/\242(;\364sI;W\311\262;\367\027\030;^+\200;\327\303\357:\265s\003\273T9\274\272\335\250f\273\257\331\2559\265y#\273\252\231[:x\263\232;\035\016\357:\223\316\235;m\222\033:\203\331\226:\202\227\235;# ^;n\252\224;\006u\2459\260b\266;\371\313\202:\260\336[;\3134\261;\210A4:\273-4;\264\301b<~\225\027<4\233L;\030=L\274\340\0055<\250f2\274\211\022*;\366Z\253:\313\nf<+@\007\274\370\311\235\272\025\246%=\270L\026\274\325K6<\3027\324:\276\334\034<\345\253\204\274\206J\204\273\246\001\341\273\377\342\241\273\335\254\232;\316\010]<2\031h\274\312\372\241:\253[\210<]\241\235\273i\352\335\273\265\254\022\274)\364\036\274\007\312\254\274R\340O<\264\275\204\275\nm\013<\340_\032<\263@\255;k^\177;\352\004\347;T}\340;\312\342\315;\335\n\347;\207c\321;\331_\320;V\177\257;}\362\007\274\254\243P\272c\206\013\272W2\361:\177#\034<.\373\241;\347\333\331;#\021\233;7\277\357;\211N\t;d[\234;\211\t\347;\017)\307;\225\3010<\366\216\314;\351,\023<.\257(;<\263\374;\313U\310;2_N;+\307\301;\362\214o<A\345\177<\231\273\006<\225\355,<q\3462<\215=-<\216\263l<\377\r\214<\345\271F<KQ\027<\013\022E<|F\370;\341\023\010<\373\337\340;\223x\312;\276TP<s\305j<\004P3<\337\305\345;\277\253(<\213a\337;k\030 <\364\3570<\032\257\036<\030\351Q<\275qF<\246\350/<\226;\024<\375\017L<:\206\t<\201\333O<\030\322G;=\246\240;\313m\350;\217M6;+\322\017;\352\345\241;\376\214v;\270\300O;]\214\311;s)\221;_B\230;\377`1;\262\244\250\272\217\342\217\270\001\354l:\227\224\t:\364\247\315:|Ju:\306B\232;\2544F;v\276\256;o\017]:\034\362?;\025\"\231;\023Ph;\354\312\333;H\211\360:\036\213\331;\343\350\321:\250\227y;\200\216\004<\205\241#;t\320e;k\233\037\272\327i\227;\200hO;\362O\273\273\034\322&;\245\331\013\274!\365 ;\300m\005;\246\310\"<Du\016;D\023Z\273\230y\036<\204i<\274W\274V<U\"\264:\331\274\262<\222\\\273\2747\236U\273C\210\210\273\236\200O\273\242+%<\210\026\310;\351\210;\274\002JH:\217\222#<\251\305\270\273s\004\331\271\334\241\026\274\336\236\376\273n\305\206\274\370\003 <\213\364=\275\222\\\022<=\3731<`\035\341;D\023\247;=\340\354;\333\035\010<4\323\362;\366\252\004<Mp\035<\226\300\363;\245h\353;G\206\371\273\005\325\326:an\226;\014^V;\277\3407<\313\221\272;\236\277\344;\333\300\321;\315\025\t<\243\204c;\237\366\307;\315P\330;_h\315;\215BF<\202\351\010<\261\226*<\244\303E; l\017<\331)\355;NP\264;\230\360\354;\211\021r<\016\230\217<UK*<\023qL<\004\261G<\216\005P<I\216\221<\273>\237<\r\217{<\244\213*<\355\220\200< \203\024<T\0141<yk\030<\032\014\021<\221go<\235v\207<\026\200J<b\201\016<W\324G<\232\321&<&\013K<\036\0147<c\200*<\206\013\221<\233\237r<\233\226S<\026\351)<X\305g<\324\263\025<E\305\201<FXB;\275,2\272\323.\255\271K\031\213\272\312R\203\272~}\211\272\222A\256\272\177\307[\272vG\234\272\344\000\220\272\210cl\272\270u\032\273]l\274\272\354t\"\272\265\375\222\272\271J\240\272\305\033\017\272\233\255\332\272\371\360\002\272)\313\356\272W\255\225\272\352\023\321\272\275\312\303\272\034,\002\272P8\'9E\253J\273d)\235\272\027\312\037\271\343\020T9\301\304\t\272\333\236E\270\304\336\374\271ii\220\271\325!\221<\222k\"<\016\232\220;\303\341\275\274@\364X\273\317#l;\262P;\274\216Z\217\274\233\326\330\273\330\221\032\275K|\330;\326\032N\275\3455(<\2333-=\361\317\323\273\032F\307\2746pU<=;y\273)O\343\272\261\\\253\273Z\247B\273\310\210.=\321\326 \274\220\3446<\003\354l<e\210\302;3I$\275Z\302\222;X\373\360;\037c\300;\365:\000\274\3432\024\275\036\322\221\2722\304\025\272\004\035\005\273;\354\354\272\305\366\320\2729wg\271\366<\010\273}\355\037\273\256\035\207\272\002\3014\273K\032r\273\216\350\266\273\2658\231\273\200\006\344\2728\017\026\273\3526\017\273\350e\212\273.\227\226\272\361\255B\273\345\251$\273\203\211\037\273\303\221\206\273\364\262\214\272\227n\036:\3419\206\273\352\270\036\273V\246\344:\027\333\324\271\236\035\261\272\267\347Y:\357\300\350\272m\000\256\2726o\273\272\225\030\016\273\321X4\273\273e$\273\014\235\006\273/\025\254\272\034\247\207\273\333\364R\273>,\002\273\2445\205\273\376\371\262\273r\265<\273\225D\327\273\364l*\273:\004q\2734,c\273\240s\320\273\306m3\273\356\nj\273\250\001^\273\314\3104\273\316p\260\273NiG\2733\347\235\272\365\202\250\273\005b\217\273\332\357w\272\263%\316\272\032<7\273w\224O:\347a\231\273Rw\206\273\227\211\356<R}\020<v\205g<\224-\315<\376\226\305\272M;C<\346\003Y=\225\027X<\354\000\375:\214p*=\324\224U=\236\332\231=\324#\265<\373[\223<a\244\010<\374\263(=\017\025\200=^\255\317<L\325\337<\237\217m<\036\357\350< \236\024=\372\336\327:\266Y\212\274\267\021\'=\326\201\334<x\344e=\353\237\251<u\267\010=\212E(=\264j><D\017c=\245\374\307=OeD>\270!\354<)|\340\273U2|;w\245\'<\2076.\275\247\262\350\275\250WK=\211\315A= H\347=\005,\352\274\317+\372<)\275\352\274\323\374\250\274,\372r=\273\034\002>\216\341|=\017\371\025=\234\266\t\275i?F\275\314\033\366\275\252\001H=\237a#\275\201M\032>\0373\340:\323\017:\275[\343\316=\374\252\010\276\3741\373\274s\001\376<@z\266\274\303\037X=\276\354\035=\352l\256<E\371+=y\200\317;;\276\207<k\320\322=\016I?=@\264\262;\330\250\242=\321\261\267=\226\216\014>\341\225\276=.)\303<*\250\321<F\336\345=\317I\355=\362:\022=\315\"\035=f\372\245<9\0021=$\031\251=u\200\205<\354\305\316\273W\216\260=s\024X=\217~\276=\235\213e=/P\206=5<\312=r\2268=F\235\006>\374\252\177==\013\227=a\303\037=\256_R=\032\237=<s\030\365<\256\311\020>\202\3146=\212\370(=\322,\214=y\216\023>\252\221?>\207\206\347=\232l\001=\316W^=\2544\016>j\2458>\353\307j=%\000z=\352w\271<\001HA=%\211\007>\322\256G=\314\276\365<\266\310\n>/\213\246=\213\372\020>?~\203=\320H\366=\251\024\017>f\214\272=y\270\010>\372?3;U\214);D@I<\277\213\200;T\303r<\326\004\022<^d\026;\017\030e<j5i<\223\3058\274R\355\251<\247+#\274Z\0105<\306\247i<#\372\225<\363X\342\272\235A4<\363\225\301\273\023\341y<\327B-<\265\242|<,\000\3168\177\034\344;\005\221 :\036\033\363<\371u(<\270\010\373;1H\371\273\325\304\027\274\311\325\032\274\341b\343;\306\370\265\273!\206?=M\036\247=\023$\242\275\311!\007\276\323uT<$\220\202=\377\005\270=\2413-<\016/-\274\236\035\222;:\355\'\274\336\204\270\275\256\265\355\275mS\276=#\220\301\274?\325\t>\276\030\272\273\031F\362<\221\305\245\275\220\r~=\267N\256=^\005\201\274d\351\324=\252\223}\275\210\266\344\273\351\rZ\275\314\362\360=G\324\\<X\232:\275.q\353\275\374\376\354\275\004\304.\275;\272$;\316\345\221<[\000\374<Z\217\276;M\354\234<\371#\251\272\315\366?<\030;\253<Gq\030=#~a\274J\366\262<\020&\277\274\205\272\241<\314DZ<\267Z\002=\260\324\260\273vM(\273P\316\303\273#\323\237<#\207\263<\005A\314<\264py;k\205n<\016\374\306;p\241\206<\327d\235<\030\227\314:\2220\025\274\264\252\177\274\341\2550\274\250\250V<\257\335L\275>\235\370\272\313Wv<\016\272\333<\271\313\235:\332p\225<\031\221\213;d\266(\274\r`\272<\337O\220<\013\020\230\274\241\016\004=\274qd\275-\005==\017\324\210<1I\266<\373\345\235\274G\200\207\273n\316|:1W\"<\034\343\350<\372P\273<5B\206;\2066\350<{jG;B\234\n=y\376\004=K\226Z\273C\311\t\273\335\317\345\274x6?\275\027\336\'=\326JE\275\353G\016<B#\203==\222\321<\006\345\232\273:\222n=\246\254!=F\005\361<\022@,=\023\245w=\310*\342<\'\3032<-r\022;\204\270\234<Ff:=@\0261=\330\212\031\275\362#Z<{\323\373<w\322\370<\036\270\'=r\3677=\324\306\260<\006\303\032=\237\211\225=;\216\375<\035\363\206:\267\302\237<[)\211<v\001\205<[\210\212\274\354\326\246<\303\223\247\274CA\230\275J\025:\276\315\242\361\274q\374n\274\366\362\312\275W\347\242\275\362s*<\022_H\274\342\023\366\274\315\221\030\275\370M\237\276m\304?\276}\312*\276h\261.>\033\346[=GY\213>}\206\302\276t\273_=Vo\225\274\355\245]=\362\027\350=l4\300=\221\023\001\276h:\262=@w\250\276y\322\303\275\360\032:>\373n9\276{\021)>\360\364\240\275\335\361\227\275v\254#>@\370\013=\262f\363=\333\276*=\221\225\271<M\275\301=\n\244\203=@\313a=Cg\312=\354F\313=\303\334c=)y\213<q\271\217=\315&{=\337\347\253=\302`~=\'\330\305\275\221\350\241<\317\210q=(\0224=\237z\212=\237\324\240=W\311g=ia\226=\241o\336=\265=\020=z\344U\273\311[\355;i\200E=o\026+=\304)><\265\024#=\226&~=\226\343M=.J\010>.\276\241=Yw\375<\266f\017>\213\353\303=\323>\357=\246\377\031>\272\355\335=\032\217\204=\220\022\251;\234\003\277=\017\275\311=\216:\007>\336\037\313=/z\024\276\357\334\031\274\025\335\313=\030w\304<\307n\325=k\210\366=\nV\320=o\256\372=p\260\370=\250w\201<\210\346\221\274\324\253k=\005I\332=\3721`=V\355\200<\243\034\203=\222a\264=\'\256\236;\037!a\275\212.\240\274@\"\354\274\372Z:\274\367\305[\274\027o\276\274\373\251\230\274K\317\006\275\304\347\373\274=i\225;T\364\210\273>\233\331\274)\222;\274\226yU\275\216\305\302;\352.\266\273T\207\256\274\356\373\221\274\304r\247\274}\246\r\275lJy\274M\216O\274\277\202\006\275vF\017<f\370S\274.\203\320\274\323tQ\274\271gN\274P\3307\275\2353\016\273\3379\277<R\232\014>W\352\315\274_\021#\275\2441\225=OeX=\324\363\260=\337\306\030\275\257$\363=u\324P>p\300\266=\014\003\250=\343-\204>\3050\242\275\277x\317\274\301\211J\275\004.\313\276:\374\363<\307\002~\275B6P=1\010\2459W\274R=\225d\303<\346-\025=\211\272\024\275S\226\007>/\337)>\202p7\275b\006\034=\263$\213\275\222\\*>\221\252\216\274,\313[\276\257!~;\245\255\316\275\r)\346\274\3538`\275\005\373\272\274\030\272\214\274\006\355p\275_\207\201\275\262\254d\275/ra\275\006\377\336:\307\010\206\274<\273\260\275AK\237\274\000\312\230\275\230\202\351\272+\327!\2744\203 \275\266\206\257\274s{\006\2755:v\275\270\364*\275\313\254\000\275\376\030{\275_!\342;Qw\306\274\205$\252\274\224]v\275\231\\\354\274\343^\220\275T\210m\274\362(\037\273:\303\354<\215?\317\275[\013l\275[d\212\275\333\007\347\274~i\031\275\002N\r\276G\374\233\275\n \227\275\254\225=\275l\350\224\272>oB\275p\322\256\275\021.U\275\235\302\016\276\300\022B=\330\010\300\273\206^\217\275\260r\324\274\347\223#\275\377}\270\275\307\321\244\275`\017z\275\342d\222\275\200\354\353;\244Z\362\273\3567\357\275\036{\333\275\371\005\202\275\265\305\365\275\243\021\216\274\205\350_\274\023\233\234<\203!K<\357xx<\334\230V<\277\006\231<\266\351\271<\027\0013=\207G\242<\014\263\023<\337F\n=\002U\t=\200,\023=l5\276<\330\301\341<\266zP<\265\372<<\375B)=4\264\257<M\300\341<\030\\\272<\2626\343<M\317\320<\364T\'<\273\323\014;\237\242\017=\364\251\272<\365\275\034=\326\327X<\256\261\342<\216\323\300<l8\250<\340\031s<\244\367\001<\361\266e\274\331\360\210<\376dw<r\313\013\275\232\0264\273\262C\242<a\275\323=\027\031\244=<\260\213=\201\021,\275\314\227\007>x\024\013<\234\270]\273\354X\013\274c\375\201=\314\247C\275%%\264;6F\205\273F\366\036;i\033\017=\201a\235<\347o\214\274\t\025><\231\352J\275\002\016\201\272\200[\023=\252\004^\275\235~\026\275\216\003\177;\206\334\313<yT\242;\344\202!=\263\327\006=\347\207\264<\242*\004=H\343\026=\360\366\005=\277-\254=\241\352>=\331e\216<aDw=o\270T=\337\266\244=2\207\240=\244\001\\=\335O\344<\313\021\r= \254\202=\312\'\027=\205\324;=]\331\031=<\353:=\177\312h=*\267\350<2Y4<v0e=V\203(=\032\2423=\205A\034=\301\352Y=\264E\347<\221XO=!\035\253=\2077\212=\037\333\221=\266[7=\013\355B=\234\245i=qXz=\260o\007>\376\"\243=\315\320y=`H\316=B\367\272=\331\246\003>\303\306\337=\200\315\250=\312\261K=/.\236=\351\003\355=\217\020\210=\325\317\236=PfS=\240\270\204=\256Y\327=\255\340\213=\350\340E=\002\204\307=s9\217=-L\242=\206E\205=U\270\310=\340,\217=\232\244\322=\006\312\274=\314I\337;\351c\252\273\\\240m;\247\325~\274j\234\306\273\330\314[<n\370\n=t\233z\274\326\026\270\274@\023\016;\234\237\225<yg\266<\310[{:\204z\247;Pg\200\274v\240\244<!\365\276<\203\320h;\243\016K<0\207S<\000u\353;\335?@<h\253\266;\177\274X\274\234^4<\027kj<\342\215\252<\375\370T\272Y\355\252;FU\266<n=\025\272\033j,;(\270\244=8\366\004=]\030\351\274\345\311*\272wj\215=\010\307\213\274-g\010\275\337\275!=\013\306\261=\344\235G=\256\303\006=\322Z\245=0\226\345\274 \305d<d\300\241;\320j\260\273\206\026\364<Q\315v<\354\251\265<u\226=\275\356\024\325<\270\004\212;\354\373)==\033?<C\021\033\275^\367\354=\026\235\032=_\350\361\274-\261\213\275\367\037\361\275\320\016\251\274c\t$\275\221\270\323;\334\356\341\274\267\377\363:\\\317\002\275\355[\031\273\355\335\230<\273\013o=\001M\r\275q\0047\275\234\221y;\377\250\364<\200\"\300<\036>\242<\007u3<\360;[\2747ko=\0251<=K\031\021;\024\303\203<\010-\327<\336\026L<\344n\317<\014\251v<I\270\257\2741\212w<\221h\303<Y\'\266<\035o\223\273\312\272\3228\333\364\202\274\336\277\306;\'\027E<\344,\302<\247\2516<.\305j\273\350\361\013\275sG\244<Z\374\004=\'{A=Z\323K\274\245\336\353\274Z\265\241<\307\r\\=\005\371z=F\274\013=\007\033\203<\3532\332\274\342\201o=\244a\224=\353\317:<-\334\010=\344\232\021=F\207\024;j d=7\030\034=.\256\334;\205G\200=\324\rL=\262bt<\220\312Z\274\244\216\246<JE\014\274\020\262\016=X\024\377\273M\265\241\274)\260i\274\230\332\212<\317\276\277<\205\243N\274\371\324\255:,\345\201<O\037Y;\222~\264\273\016\013\\<>[\016:\223!\365;\362\314\200<b\331\214\273K\233\001=K\027\230\274\214\216n<\334J\357;JO\031<\r\274\337;E\364\204<\3444\376:\237#\313\273\270\001&\274\324Q(\274X\342\324;\216\263\262<\023R!<\303\t\257:\345\333\304<\344\305\207\273\213\032\002<\324\007\020\273R\213\203=3\205\252<^\346\000\276\305\207\322\274\003\204\366<\333\025\231=q\321q\275\201S\255;z\220I<\212T\004=i\350\225\275N\354\247;\364x/=\241Rb\275\320)-=\351g\201=\276\325\\\275E\231/\275\276s1=\202O\225<zYF\275]\332^=m\023\234\275\324\325\222\274\006\345]\275\252\364n\275l&c;\355\375#<\356{N\275\205l\255=\035\245\310=Go&\275s\320\237\274\243\315\362<\314X\374<\221P\212\274(\260X\273s\033\375<\217a\306;\334\275!\274\000\324*=\370Qm\274&|\260;\'p&=\253\340B\274~\250r=\201\300V<T\200\354\271R\003\204<<\347]<\215K%<\270?\336<\214\314<\273\\r\021\274\300\343\203\2743Y\000\275\236\332:<[\252\316<\242\315\375<qK&\273\321j\002= \265\263\272|\3206\275\273\260m\275\260ai\273E\332h=k\333.=\206\334\333\274T\n\200<c\3631=\276\030P<\003\364\003<{UI=V\206\257:\321\224\013=2a>=32];\244M\246=\306\341\232<\217\235\260<)\314D=\330\220\025=\t\306L<\013F\007=S\217\335<$d\376<\020\226\323:1H\367;c\330\366<\027\020w=\331\244\206=\377\251&=\370\034Y=vWt<i\344\300\274\202\272|;W\3629<H\341\005:)$\236<<\323\273\272\305\217\276\273\356\257\305\272\374\021\037</\365\365\272\031\2179<\226b\313\273\351GN<\024E\333;\321rE\273<}\251\272\320\323\273;Y;@\274?\2152<\265K\224:m(\010\273\026h\255\273\206\213\023\271\246\321\023\273b\340\'<\\\242]\273\2428\227;mRp<6eY;\336\251\345;\273\316\222<2L\274;\265\312(<\226+\331\274oc\r\273\331\226u<$\261 <\316H\314;\322~<\275\321\260l\275\251\343\016\274\334\022\240;\360\244\306;\300*\245\274\350\017\353<\025\2606<\007s\021=\"\004%\272\010\'\231<\277jE\274\010\355q\275\320-\375\274\225\264\333;\030\301\337<\212\333e=)du\275?z\351\273C\236\313\274\000u\361\274\336\230\266\275\201\240\247\275\377md=|1{\274\366E\036=\253\213\017=R\353X;\032\013\227;9\344V;8\322\024=c\202\261\273\224\244\002\274J\202\016\274Z3?<V\236\244\273\274\277\212<(p\355\273\305\242\310<\315\025\263;\030\232\201:<\252I:q\270\213<\322\344c\2746\240A<y\256\"<\231^\001\274\026\310$\274\\$&\271\204\204c\273\211\364\223;\202\027\023\272\314U{<\'\362\t=?\3637<\010\365J<\366^\206<-\013\205<g\234\233<\374K2<\303j\327:\016AS<N\025\037=a\300,\274\023)\364\271p\245m\274\312\'p<\350Dk<@\2334=}\236k<,_]<\327\216j<\217\004\251<\201\350\264<h\367\330<\020\004H\273\254\267\211<\347\263\030=\244\032c\274\247\214B\273k<\240\273\341O\347\273G\305\035;:\277\217<\257\031\275<\227C\030<\342\214}<\333\024\340<\372\345\306<\177B\314<\367Y\302;\266\374m<\262\010\024\274\235\224K\274\257tC\273\320\353X\273D|\221:H\253n;, \343\273\n\270\342\274\3012\n;\3153\021;\013\0342\274\362q\016\274h\340E<\213\360\323\274\013\313\303<9\304w\274\0011 \274jqc:\313[\204\274\334\037}\2749\370\221;c}\031\274\354\037\253\274\254\352\023<BE\334:\254l\222<\301\220y\273\030hZ;\242\212,=\020\364N<:\375\232\271Bg\010\274\204{\351\274xfn\274e\212\334=t\323\273\274\233\263~=\353\252\265=(\230\253<\233\031\267\2745\'S=\346\211\t\275DX*\275\246\230\271<\347\375\252\275|yh<\021K\377\274O\031\214\274\242\367\225\274}l\010=&s\372<\366\367V\275\301\020d\275\335.\241<\0034\247=+\314\370\274:\027\224<n\341\335<\357v\300\275\241\345\243=\306;\306<(\2343=\177\340\270;\000\031\320<\222f\010\275\305\334\304\274\346\341g;g\352\233\272CA8;&~\352:\022|k;\211\300\037\275\360m\000\274\370\005\341;\017?\023;\356T\337\274B\276\240<\342\335\024\275\017\005\220;\276i(\274\034y\310\274B_\373;\357B\346\274S\002\353\274\222U\004<\000\276\211\274u\200 \275\332\371\227<\345ds9\271\0017=\360\230i\274\372 \320;\")\177=3\224\215<\331Ah=\r\320x=\032J\324\274&\224L\275\206\335\216\273\247\356\007\274\303\332\\\274\351\034\363\274\213\n\222\274 \007\347\274\333\335\231<Y,\373<\020)\232\274\310\r]\274q\206\022=\242\344\225\275 \316Y=\0216,<*\236[\275\371\307\354<\3617%\275\342\342\037\275\364\220\343\274\247Dc\275\374D\035\275\211Ma=\305\365 <\274]y\274\2544\\\275\237\375Q\274\032\310\032<\\\032\355<J\207&=VY\223;\375\217\230\273k\275\200\274\305D\252\274|\3372\274f\314\001\274G\014?\273z\273\025\274!\336\307\273dfW\274\270\232r\273\002\206\007\274\366\016\316\273\212\255\203\273OJ\323\2742\205\014<\370\373o\273\206\265w\273\031\001\"\274\253\231\311\273U\301.\274\"\231\225\272E\000+:\313\242\364\273j\251t\273\215\322\335\2725K<\274x\331\340\273\376\217\302\273*v\264\273\307J\341\273\223 \252\273\344A\025=\035\325\013\275L\337\245\274\030]\"=\233\317\210=!\021F\275^\222\005\276b\0265=\317\252><\344\331\360<\211C@=_\365\212=~\277\036\274^\226\250<\221\3230=~w\321<@\331\025=\245\027\'=\225\345O<A\352\212\275]\371\205\273E\274\004=\331\354\205\274k\251V=\004\330n=\"\346Q=}\312\005\275\240a\001<\364\364\224\275\023\335\262\274\177z\270\275\373\326\256<\220/\177<\343(o\274\263T\336\274\2701\021\275\202\332\201\274\373\213\031\2741\341r\274\301\323\217\274lt\223\274\372,\002\275\210&\275;\347)\214\274\314=&\274N\352\216\270\026\327R\275$\266\322<2\323i<Rl\003\274\310mp\274^);\274\217\355\271\274&\224\374;Z`\032;W\257n\274:\241}<Q\013\n\273\200\333&\274\017\201\201\274j\323;\274\327\345\356\274\306\037\304\272\001\202\303<Y\024\240<J\312\025\274\277GJ\275gOK\275\335\346\221\273\300\336\215\274\300\243(\275\214\314\355\274\267\320\t\275\222JL\275\342\313\250\272\213\333\010\274\325x\376\274\256\032\250\274\264l\231\275qp\344<\311\025#;\337b\375\274\3541\360\274\365\271Y\274\205\226*\275\234\247\212\273\311\256R\274x\243N\274\257\036\235;\235\205\351\273\025\3351\275w\373<\275\251\346\002\275\312\003\n\275\335\237\247\274x\241\202\271\236\023 ;\320\253=\274\340t\205;\362}\354;\003lc\273\366[\367:\357\271\352\272?v\325\273.n\235\273\025\367?\273\353<\020<\270\371)\274\004\237\177\273\021\273\356:n\0028<\030R\351;\253i\n<\006\323W\274\014\360\017:\277\362\236\273\332:\215;\233\037[\271Y\307\027\274f\235Q\2749xS<\"Z\230:8\211\316;Z_\343\272\243\337\213\273\243\353\222<\240e\356\266\212t\305:\265\267+=\351!\211<([\365\2744\332\256\274\312\341H\273 \341s=b\324\347=\340v\t\275t\032\010\275\t1T=\313EO<+p\200\275\222\227\372<\273\351q\275\013\206\345<\273\222\234\274/td<\333\"\352<m\274=<\213\213\317<\013\3313\275\221\366\364\274f\311&=\'\n4<c3-\274d\020\235;\265\354\311=\360\313\027=\023;\207;\320\322\344<\230\002c7\375b\234\2748\3224;\375\204+\275\263\341&;\276V\023<\364\177\371\273\023S\222\273\030\0025:\370\251\233\274IY\211\274\252\341\033\274\255\241*<\344\334\360\274\317\272B\274\201\376\274\273a\364\363<C\234\211<\221\255 <B\034\332\274K\357\257\273\273\237!\274\257\"\020<\226\036r\274@\377\337\274\202{\355\274^\321\243;\036\236p:\207\266[\272,\300\000\274d\236\004\274\225`M<7 2\274@<a\267I\224*<\332F$\275VB\005\274\325\200\266<\306*\355\274\225\275\305\274\362\240\035<p\343\341\274]\t\213\274*\367S\274@\370\351<5\'\200\274nc\031\2740l<\274\217\214/<no\002==U\253<\021\217\032\275\267\215\226\273\237R\262\274\003K*:\032\000\007\275\200\2369\275\225,#\275i\203\365<\364\003+<\210_\331<!\232;\274\347\325/\274O6\361<\312\017\233\273ZY\364:\273\340\013\274\3727\232\273\\\257\342<\363\326\211<\341v\247<\022\024\"=\205\336\257\273J\334\000=\304\271\227<\036g\311<\360\352\227:\033\001=\274\246\241+;D80=\224c\364<\203\277\337\274\333\212\302\274\354\342\204:/`\244<\334\260\302;w_v<\026\224.<\03620<\367.\024\274e\231\227;\261\037\016\273c<&<\253H\254;@\035[<\275\372a;\226N\033=\261\0257\274c\336\261\275\366\\\233=\326\021\320\274:j\014\275g^\330\275\330Y\205=\217j4>\035\324G\275Cp)=U\311^\275\r\325\255\275\204\007q\272\206o%;s\\\253:\275\273\317\275\257\227^=v\270\261\275_\355c\275\3531\353\274\253\017\351=\274Do=\246+\230\274\224\304\205=\031\345\343\274\3150\377\274\266>j\275\027=\013>m\371\030\275\371D\205=G\377\221<\330\362F=|\260\264\275f\270\200\274\202Lh<\037\255?=\275\266\004=!\003\370<\202?Y=u\236\270\273\030\031\205=\363\357,=2\255$=\003\360\311\273\321@\255<{\214\322;\340T@=w\336F=\251Ww\275\301m^\275\276w!<\300y\006=\034\346x<O7\374<\305[O<\246\311\206<\367\360\267;\270u\013\274\340\202\'\274\222\214\356<~\332\372<\321\355\334<\303\244M=\366\2208=\\\273^\274\274\031:<\"\330\311\272`\241\212=\014g\246=\317T\321<I\362\203=\301H\267\2729\004\300=\242\033F=\200!\306=O\3510\274\177\2742<\372\020\210=5\311\264=-\346o=\341\214\242\275\247>\212\275\236\032\003=\374\231o=}\246\257<\251s]=\262e%<DZ$=\024\325\320:\333/v\274bY\210;Dq-=\263I\\=fW+=\'+\021=\272\273\257=\203..=\031\313\\<\271h\337\273\273O\211\274q\223<\274\344\246\221;F >:\213\002\036\272E\256\010;\226\361\007\2747\350x\273\257_&<\370\177P\274M\252]\274\026\215\021<~\024\367\274l\252\304<N\271@\273\022p\257\273\253\207\006\273a\212\022\274\n\215E\274\377;\323:t\271\037\273N/8\274\221\037v<\202\014\3229R\332!\271\224\306\366\273.\230 ;\270S\3248\251\300\237;\240!C;\2745\206\275`\373\r\276\357\272\005\274Q\206\215=Pm\212=\266\377\033<!\027&\275`\344\261=\257Q\025\275\315\232\243=\'(V<w \317;\317T\271<\303\347\005\276\rU\024>\200<`\275\353\255\324<\305\271\317<\246f\370=X\244i\275\330\341\224\275S\243G\275}n6\274\3653\325=\030\272}\274\366g\207=n\364.=\241\032\214\275@\215\3608\244\006\210=\222\315<<\226\226\025\2769\242\345<5\311\230\274\n\017\002\275\351v\335\273\270\377n;\255>\014<\257\371Z\274\255\311\265;\202f\202\274{\333\336\274\237U\276<\032!a\274l\021\016\275!\r\235<]\354F\275\330\035k<\266<\204<\244\030\212\274\352\032O;\342\272j\274\241\276\272\274\000j\264:\241S\247\273\212\363\276\274\3233\037=\212\273\252\272\020s\321<\360\203\313\2748KL;*\351\342:\373\332\231;\273\010{=T\261\223=;X\223\273\000\362y\275EeE\274\246\246m<\211\326\256\273\272<\016\275\353\322\225\273#\3723\274Yum\274\260%\000=\005\242.:\306~\337\274\253\275\210<\237\236\250\275n\261\177=\235V\306<\322\313R\275\332\254\303;_\256\243\274l\230\007\275\001`\250\274\363L/\275\203\000\234\274vP.=\302C\r;\312\357\205\274\207*w\275K\272\323\274\242!!\273Z\3427<\327\264\202=~\315m\273\013\254O\274{u\205<\031\017I\274\021\372\217<c9\262<\3662\017=\311\227\301;\267CV\274X3/\271b\022\214;u=#<\343\301\347;\345\014\235<J\363\305\273\204X\177\274\236\252\246:\332\241(<\363N+< O\177<\251(\331;\360\330<<\216\321\214<r\364\354\273\327\243\361:\354\372\350;6\252\227<B#\224;\325\003#<(|\335\272{\005\266<L#\357\273.d\033<e\201\007<\247\203\206\273{>\026=\233\375\203\273\301_\233<k\032<\275\272\010\253\275$}\230=#\366\026=o\244\260\274\361R\242=\"9\031\275w\320\265\273\357W\001\274\200T\214\274\360_(\275\353\2053<\'\203=\2737UL<\355uW=\362\206\251<8\2574=\253\333\355\273\274G\372\275\334f\215=\262\374\005\275\260\341\250\274,\230\024\2742R\003\275\202\346\344:\367\227\246\274\377\226\260\274\312H%\274\353\205\372<:z\272\274>\345\025=\360\300\n=\262\350\201=N\026\317;S\242m\274\263\216,<2\347\204;\033\253\000=\023\253e<\235e\t=\014\032\250\272=D^\274\257\017&\274\260,\302<\365\263\236<_\306\027=`,J<\3355\334<\0020\022=!\263 \274\323r\252\273\240\302\013<\213\277 =\343\016\346;\2162\344;\227\317;\272\023\346\336<\231\345}\274X\272J\274.\300\310<\325\211A=\350\317\337\274\237\252\201=\205\325\207=\'M&=\266\365&=\272^E<\223XO=\217q\363\272\277\260|=\330k\205=\343\233F=\320q\035<U\210\374\274hy`;\026\312n=$\203 =\334a\201=TH\322<m\310\223=\231j\260=\n_\352<4Q\370;I\031\247<u\331\275<\206\330\250<\202Q\276<\312\303\213\274\344Nq=*\212\201\273+\272\007=\032\316\320;\347\230C;\374z\202<\235\035\230;\223\323V<\321\013\r=\226I*:Y\004@;\270}9<\252\201\002=\321C\377<\\%\014<\337\337\247<\313\221O\272\037\377\026=\373\222\021=\200N\330;\024\347w<\303+0<\217\351\247<\370\221\244<\325\270&\273\265\t\272\273GW$=\242P\333<\356T\n=\364\330\023<\t!\226</\307\000=Y\017&<\332\375\253<FL\246=\253\347\242\275\35101\275\003\244\360=\021\021\025=k\305\252=h\177H\275m\031\334=\265\023W\275W\364\336=\322\366\033\274\032v\022\276\304\332d;4h\335\275\355\006D>\365\357\261=\236%+9\364\370\367=&\010\023>\360\326\241\275M\354\305\275\364\023\207\275\276\276\247<9\370\273=\316\270\265;\316\025\030=A\r\342=\276h\327\273\362\327\211\275\340\272\212=\377MF<\214\343\247\275\377\333\203=:\027\030;4\004 \273\320\377\005=+\220\020<\230\207~<\210\342\203=w\351\217;\310\263\035\273\3653+<\234#W=&[W=\2650J=\025[!=\361sV<\333\277\260=\226\332u=0\275\347:\377T\271<\302ZO<\363C\366<\014\352!=\021!\245\273K\021$\274\346i\212=\227UA={m =\n\266w<\342v\023=`\307\007=\262\321\343<\252\272\234=K\205\335=\\\251?=N\302`\274O<A=CW\252<\2472W<\302\366\305=\367\033\275<\323\212\000=\301\315\351<}K\331=\361\001\325=h\211\224=R\007G=]\370\246:\366\033\025>o\214\370=\341(d\273\300\366\035=\356\232z<\005T\355<\231\306\207=\277\227Y\273\266L\215<\030}\001>\252\206\227=(\026\237=\002\252\271<\232\234y=|f\251=\321\322\233=\307\024\261=\362\270\313:\362\241\335\274JO\254\273GpF<Iq\014\275\304\321\232\274d\243Y\271\205=\270\274\225\033\352\274Y\312E\274\272\213\314;\241\301Z<\231`\024\274\000A\257\274I\005d\274\352JW<.\332\373:$\232T\274g\355\272\273\307\235Q\2741\261w\274\"\033\014\273>Y\274\274{\236(\275\315\nG<\241\210\326;\340\306N<\022n\257\273\256\255\033\274\210\262\353<K\024\240\274\337F\003=\324\3105=M\322\344<\276\256\244<\2011\205=\245b =\r=`;o%\227\274\302\226\331\275\247\213\377\274\3700\013\275\217\302\304=\364]\220\275\"\205\037=\361\352\333\273D\"\322<\211w\026=\360C\214=d\213\277\274\r\332z=\210\022\r\275\370\350\030\275\205\024?\275\267\260==O\244%\275xG\360<s\333\202<Sz\303\2755\256\201<2\322u\274:\372\225<\341\332\013=\366\254\351\274\306\252\017\274\275\377\227\275\034\240,\274\310\254\360;\351gf\275\337 \001\275\022\253\'\274[\000g\275\177|c\275\334\311\305\274\351\030\252;\310\003\033\274\033\240\027\275\316\364\016\275\037+\022\274\342\304j=\016\022\210;\330\302\364\274i\321\340\273\314\216\306\274\357d\306\274\032\365\230\274\244\2221\275c\241\231\275A\270`<n\213\237<\0079\234<\323I\231\274Z\324\337\274\322&_\272Sn\351\274\003\376\363;\3215\264\274\317\261\221\275\215\277\344\274`\032\207\273f(\246\275\316]X\275\317\211\252\274z\035\257\275\001!t\275\032d!\275Er(=7\"$\273\340\215\005\275\235\375~\275\377x\236\274ox\324=w=\016=\324\362K\275\327\257\250;\321\341<\275kQe\275\302\2604\275\"\177\222\275\305\024\237\275\321\020:=\376\325#=\312,\303;\244\272V\275\313\321\307\274,\364\324<\250\315\267\274\224\027\275\274\376k\021\274\200m\310\274\271\375Q\274V\352\267\274\225\375\335;\371\241\006=+\373Q\273\222M\356<R\027\373\272Py\027;\021Ol\274C\300\213\274\3127\213\274\"\210}<\275\270}\275\271i\304\274\366\321\324\274\265Y\034;eO\352\270\272\233\265:&Z~\274*\326\303;\373\222d<9-\303\274\'xB\2745H\036\274\326 %\273\310t]\274\243K\355:\235\353\207\275\265o8<\210\226\373\274j^\003=\3316\322<W\245\177<\333=\024>\305\315\312\273\333\200\330\275\246\237\313<\263\024\366=Zf[=M\210\r=o\325\356<]\310_>\313\266\274=\320\330y\271\342\372\364\275aJ\210;\030\270\213=\330,\214\275\242e\231<\307\240\247\274\327Dm=\242\\\r>\217\005\244\275\324\2319=6\'\357=\366\251\274=\370L\202;\"\203\367\275\246\340g\274\001\355Q=\376?\226=\314\304\000\276\331\242\322\274\265\262\270\274\252\217\227\274\rJ\004\275\322}a<\277\254h=!\255\252\274\2614\347<\273P*\271N\230\2359\006#\215\274O\\\347\273j\254R\275\351A\260<\213b\257\275ZAc\275\311\323\214\274\357\305\025<\361\334\016<\033\365p<.\333\353\274@\250I<\366\031\377<\340[\256\274\342\007p\273\371\300\232\274/T\346<\221N\330\274z\003\013\274\n\224\247\275\210;\347;PJ#\274\324\2745<\237\314\205\274\0276i\274s\303\301\274\274\226(=\030\326\231=c\361\241\275\356\374k=2\014\363\273\004w\222=\217\353\002\275$\r\017=g\021\000\275fA.=\376\200\223\275\362\002\207\274?\367@\275\357Kd<D\024V=\"{\263<\211\020\264\274  Y<\016\024)=\035\377\224\273\311\036\216\274\214\325\201<\337\333\203\275\337\254?\275\200*\247\274YR\202\275\356\224\303<\031\335\r=\271\317/<\242\335\034;\304\006\";\245\235\021=\374\234.\274\177\036\334\273\224\030M;\347$K;\300p\300\274vp\266<\223\233\352\272\222\000\337<7\031\021<q\300\374;P\310 \274\010+\235<\377\032.\274\214\346\313;!\313\316;\313\250\223\274UG\227\274\022\340\360:[U\\\274\354\305-\274\307*\n;h\366\200<[\267\001=_\304\365;\352x\200<\010\236\'=\000i\325<\310\341\001=\007*\227\275\277\313$<\3755\333= \361\274=4\262-\275\340\324P\275\203\350\310\273\216\265\204\274\203\013\200\275\263\374\226<\307\267\023=m?\362\274\231QU>\320\274\036\275\275\021T=\033\025\366<\350\245C=\360\014\r\275\026\270\214=\327\231,<\323\354\260\275\216g\204\273\367\306\214\275\326\302\200\274\001m,\275\320m\330\274?u*\276\355\331S\275E\025\370<\344\371\214\274x\211)>\266\036\021=\246!F<\031[<\273r\230\376\272\235\254R=\302\302\234\2740\016\t\274R\2105<\036\354P<\255\320\373\274\241G(=\343\364\3509<?+=\376f\025<\336\010\376;\256\350\367\273g\010\220=\3139\323\273\370\316\311:\271Q\313<\210\031\004\275w\324\003\275\"\2150\273\023@\334\274\263w\305\274\227\224\036<:\373\010=\\\031\210=$D\241<`\370\363<\265@i=e\353\034=\014^:=a\277\002=\034\222g\273\253\237\r<\213H~=\365\376-\275Z\216O\274su\210<\370\'}\273\236;~<\032\212\256=\212\212g=~E;=giT=\303\333\t=A\303\343<\252?\343=#\313==\362\215\220\273!9\246=\277*K\275{\337\257\274\310\210{\274\354)=\275\354\005\234\274i\376n=\215t3=\336u_=\000\226\342;Y\036Z=\352\252\303=\216\370\213=\245\260P=\001\360L\274\274~\350;E\371<<IH\223\274\004\310\225<\263\227\216<\232\n_<\020\025D;\227\326\211<(1?\273-\366\246\273\001]\355\273De\030<0ZG<H\223X<)T\330\274k\255*\273a$\r<\205+\t<Y\310\247<\232\275s<\337\204\205;c\"\232<w\373\233<\343X\020\274\'\213\336\272\177\2117\274\327\225\216;\014\324\177;^\345\302\274=\336\304;\212\013?\2740\304h<\366ED\273\261&\217\274\342\003\277\2748\374\305<\2569S\275\215|\200\275\313\002\277\274\005\017\020>\037\354\025\275l}\022\275\235e\036>\301\332\364\274\000\360\223=\270|\004\276\203\367\261=\3027\220\274\341q3\272%cm\275\372~\336<\230*\331=C$\222=P\220\305\273\303\374K\275\017\010 \275\301,\023<\333\347r;\014\335\244<s\247\302\274\245\200\202\274s\315T\275\021\010\r=\251\213\345\2748\351\r=\240\260\304<\350\036\342\274d\263\r=K#\001=#x\366<\355\3157<\363q\024=\363\033^;\232/M\274|\037\035\274\271\237\324<\372\241\273<\nmv<\366\'\227\275\342Wz\274\006\232\322<\346\036\303; \265+=n\244\330<Rjk<*R(=\030\006!=\374\037\272\274\332\216+\274\374\376\260\274\272\001\363;\335W\357:5\271\206\274[\243\357;\306\310_\275\022\2245\275\261\177,=\251\300<=\003b\033\275\216\000\210=q9\200=[\'\004=k&(=\277\213\323<\254P\207;0f*\275\320\305\212\271f\335\352<\365\010\371<\221|\366<\226\"\322\2757\035\354\274<O~=\030\332\026\2745h\217=\327p3=\331(u=\302\350\300=\252\220i=\356\2167\275\206f\247\274\334\357<\274\201%\026=\363\337(<+\355D\275z\231\006<E\201)\275\327\332Q<-\323\346;\346I\217\274\'7B<Q\210\243\274<\350\233\2749\202\007\274\307\365\200\274\372Q/;\210\254\301:\373W\204<\350I4<\367\252 \273\322\353\213\274\275\311\007;\371Q\000=\222X\010=\323\216\037\273\273\n>\273\301\017\017\274z}\211;Q\357{\273\032\212\201\274.\211[:\236\306\226<\005\250\226;\245\251\265\273\002\2666\273\021K\266\272\267\030\257<o\177\303\274o\250\263<g\001\374\273\314.)\275\272\254\363<\232\364d=\364\312\256<\376:R;\210\311\370\275\240\324E<\311\307\301\275\365Z\005\274|\337s=\235FN\275\214\275_=3\206\226\274\251}\305=\241\300j=w\337\264<xE\257<\034\2757=\220P\213\275\321c\305\275\372\316t\275\273}?\275\343j\032=a\374\247<vr\231\274.\335F\275\267\261\000<\034&0\272I&\367<\237\010\032=kOW<\231\302\n=K\244\242\274\307\002\t\275\0039\250<\217S\030\275B$\023\275y\352r\274\255b\000\275\241cB\274\251\337J\274W\020\325<\266\223U<(\202\216;I\360\245\2744w.<\307\036\203=\r=r=\372K\213\274\357n\363\273\001D\331\274\314\342\323;\236n\004\273\345A\t\275bes\274\361\003\r=yM\207<\030u\262\274:8\345\273[k\234;\312\363\370;\214\005\226\274\t\316\211=\271b0=\361n\234\274/p]\275`\037#<27N\275\326\335u\275\366\203@<\030N|\275\247j\346\273\213\310\"\275p1h=\200[\221\273\2707\005\275\216\303\360\274\344-\224\274\rI\312=*[\211=1\310:\275\303\241o\274\017\'?\275{\237\206\274V\323\354\274\224U\225\275<T\350\2740\206d=\374\226\222<\265\255[\274\217U\344\274\035MD;X\271\330<a\031\355\274\225\010\237<\245\314\204\274c0\200=d\207.<\263\tz;\014\231\250<u#]:\260C\235\273\324\372\026=\222\305\236=\000\031\276;\325\n\362\273.\3166\274\270|\377;\257\225\340\273t\033\026=\312\024\316\274(<d\271/?\215<\2064\216\273\r\"\205<\216u\356<\324\272\274:/[u<\024\347\210=\261\016G\274\203?\030\2748@E\274\207\357\013<\343\024w;\327\321\321\274\026\334e\274x\302\252\274\322\321[\276!4\341\275\374\215\367<\357\316\334\275B\344\376;\215\000\020\276y}h\275\035I\275<\324sa\276\370\034\276\274\303\372X\275>\370\001\276\261\267\363<\201?><\350\\s\274\267|\355=\301\353\356\274\361\025\265=\230\252\022\275\212=y\275\317\350E\275}\324\364;\372\262\315\275\256\346\302<\345h&\275\325~S\276\020\024\017=n\370_\273H\020\326;\004\231\264<\322\215\244\274[\364\231<\013Ol\274\030\323\325=\327,\206<\222{\002=\344\315\010=R(\"<\366\276J<\007\352\241=\177\232\331=[\205\020<\331\345\201\273\356\314\262;\230\002q=\244\264\267\271\177\2563=-E\027\275*\030\240\273eI\024=\231\362P\274\244B\342<\365[I=\347\236\234<\3573\344<Zg\316=\020|\371\273%\305\214\274\357I\354\274.\024\026=\347\341\214<pM\016;\325m\350\273?\325/\273\347\353J\274\255\367\336=\314\276\010=\030Z\035=\323\225V=q\213\322<\313\231\323=s\362\314=\336?\275=iK&\275R\246\330\274Kn\230=\353\351,=\350\260~<b\220\307=v\256\210\275\033A\272\274)\363Z=\326\313M\275\255\252!=.\250\237=\377\024q=W!M=\032\257\306=\322F1\275\372\320\013\275H\215\205=\225\r\322=D\200\324<\351\204\207=\350\020\265\274oI\216=\223\201\265:\035\323\374\274}\230)\274.+\203<\027+-\275\334I\304\274G\245\030;\264\205\345\274\321\004\364\274%/\010\274\247\n\307;\321Y\226<I\321\005\273\201\337\366\274\351\327\373\273X\004\200<\204nV<\212\270X\274&\002\341\273+\225w\274\324\025\033\274\326M\341\272\034\234\376\274^g@\275\245!$<0\0306;\1771I<\241\350\236\273\022\227\306\273\310\301\372<\300\266\310\274\263\351\010=\035\331\212=<\276\243=\306\223\355<\370\334\025=$K,\275\255V\316;3\357\022\275\340y\025\275\260\205\371\274Hf,<\313C\361=\364\247\363\274\272F!=\277l\007\275xm\331=\276!F\275\376u\337=\272\030\250<\177i#=\366\240\023\275|>\227\275\034\373\326\275Y\323~=\017\202-\275>\241\307=S\201\202\272\220\036\333\275\320\230\007=\"\314\004\275\261\374\372\275o{i=l\343\230\275)@9\274\201\377\231\275\3426\227\274\332\352L<~\341\215\275q\316)\275ZM\016\274\334\250\201\275\353\370k\275\306-\245\274.\245\244;\204\007\276\273l\360\222\274\257\345B\275\007m\3069\333\333\206=\335$Q<4\"\371\274Q\374\007\274YO\001\2755zU\274\006\301\250\274\325\267e\275\264\336\237\275\266\344<<\033\301v<4\371r<\304\036\211\274\211\r\261\274\ts\216;\226\226\370\274\212\t\244\272M\277\331\2743\000\230\275x$\n\275\311\003\003<\242:\311\275\307s\203\275L\200h\274\363\362\311\275\3708y\275\330*\022\275|\204)=\350\351\365:\204d\035\275\3534\225\275Z\336v\274\237X\361=\260R2=\272\201E\275`\233\234;\327+j\275_\027W\275\370M7\275\025\037\253\275\2677\245\275\225\2341=\n{\024=\222A\032<0\347=\275\351\262e\274`\372-=)\262\r\275\017\316\344\274\224\327\200<\242\330\265<5\307\204;,\017\004\273\221\240V;\017\276\026<\027\234Q<]\237\266\2731\246\273</\377\252;\362\270\272<\360\260\272;\272\377\230:.\323\377;\327\365w<\320\373\233<?\255\007=\t\210b;-,\276;\316\0160<A\234\252<$\024\003<f8\247;\350\360g<\313\370\276<^gG<\325\347\274;\376F\270;$\302\310;\t\343p<\2231\206\273\244e-<\260#\035=\247\327,\275\260J\035\275\254ca;+\304\005;\216\r\250<BQ\275\274\"j\234\274\220jP\275:b\251=O\262\253<\204\336\260<\333\205\311\275\000\203X\275\316\203u=Ek\002=\347~|<\034\360\233=\211\006\024=\345gJ\275\230\317\201\275\331\322\034\275\336\362\371\272/\311\031=5\t}=\312\222\254;:\005\331= \003\024=\361\037\254\275\253\365\323\273cQ\001\275\032\236\367\274a#\032=\023\220\006=\305\337B8I6Z\2733\266!<\332\335*<[3\017=\221!D\274e\235\351<&$\2759\252\211\022=D\004\265<\313\253/=.Bi<\205I\233<\006\252[==\370^=\244\006i;%\003\253\272P\254u<\205\275\366<E\"\261<\335\007\013<\372\242\334<\034\037&=,\225\265<\231\254s\274\356\371\237;\224\242\221<~`\323;\320\370b;/;\377<\005\031==\004\315P=8q\354\273\005\246\007\272\223\216\261<\276;\031<\301X\305=\326\226\361;f\372\362<L\374\264\274\340\271_=\"\006k=\361+\000=\362\2564<\340,\272<\207\307o=~d\266=k\306-;S1\202\274Em\305<\262:\353<\013\264G=\243\356\200<\360\n\017=`\305c=\345Z\335<\004+R=\216\236\277<\007\030\376<\344\027!=\341\306k<\314j\036=\237\226\331<\254\016\346:\030\310\021\274&\275o<}\266\270\273\206\204\0359f\013\214<\006\376\t;\0103\'\274\227{\356;e\331\233<\376\245\306<\373\356(\273\005\340\022<\t\032\211\274\363V\027=\352h\225<\305b\004;M\r\r<\306\2338\273\242\211&;\200\031\034<\247\"\004\274HzI\274Q\223\361<\257\312\243<\316\362\267<\030\272n;>\"%<t\223\353<bQ\201;3\013\303<\224\245\201<\214\232C\275q\3666\272\237r\346=\255\272\226=\331-\211<\217B8\275C\314\200=\203\224Y\275\261\027S=\002_\005=\257\223\353\275\354\033\340\272I\336p\275+\315\364=_\357t=V\315\320;#\221j=\301\034\230=\250\351\233\275\252\242\255\275\346\260y\275mp\365\274/\370\232=\014x\r\273\243q/=\020D\024=\\gb\274\022<!\275p\'\273<#\356`<\371\245m=\327\020P=\353\3017\274O\020\253\274K\035\331<\300P\345\273K\337\266:\273\365\345<\272\261\017;\tn\272\2740-d\272Yc\016=\027\3306=\301\356\253;\036+\254<\006\224\\\274\322\323\256=)^\'=@\370\006\274\252?\221<\000\322\000\274B\2448;\207r\222<^R\204\274\320\272\306\274\314+j=;\310\036=\214\366*=\027\325\224;\247\000\250<qm\312<\231\331u<\247\031\247=-{\266=u*l<\264\301\"\275t5\010=\n\237\002\274y:Y\274?\262+=\030\020\014\271\000\363\323;hEe<\354(\253=\222k\210=0\240\303<\346&\314<\023\205\305\274\355\223\017>\021r\266=\213\367\366\274$\264\033=w\036\224\274,\205\342\273:\261s<\371R.\275\001\236O\274}\256\330=\310Dx=\\3$=\244/v\274-v\363<\361x\200=\245X:=pL\224=\256\210\350\273\014FS\273\305\026|<\374\330\377;\256\240;<\010\301\362;\003\312-\272\205a\311;\213\227\344\272?\000\241;\316\326\032\274\016uU\272\216m\340;\353c\243;\227\017\212<\177\230\224\274VC5\274\020\030\207\272\252qW;~Zp;n6\347\270Cy\340\272\023\344{;\273\331@:C\"K\274\214\205h\273\204I\254;W(i;\315\266T:Y\361\313\273\0106U<\305\223\326\273\212@\220\274s)\322<\332:\217<\354!K\275A\374\341\274\037\273B=\334&\250=\2215j\274\023_\027=sF\257<\364l\001\275\307\023\037\275&\351\006=\260\177\226\273H\225l\275;\214\r;6\017\314\274p--\275@\211\265\274\334\013Q=)\340\026=\033\032\274\274\236_\014=\345\276\210\275\302\231\023\275\210\t\250\274\351.\327<\006\270\272<r\216C=\310\344\002\273\305\027\031=\240N\222;\363\023\223\274\037\240|<l\226\343<7_@<\2467\206<\350\010+<\363\251\234;\373\321Z<\034\233p<)\206\225<\"\214\260\274\200U\311\273\224\375\313;8\246\033\273\342\025\n=\005\370(\2759)\014\275\010\021e;\\\033\016;\304\376\"<&#\224;\274\307E\274\014\203\007<\241).<\225\314\025\275\305\0303\274\302\261\355:\341\023\024<\016\312\3749~\320\241<\225\230\201;\304\rS\275\334.\005\275u\272\006;;\007B=\264q\250<tF\036<4g\235<1b\252;^\004\274<|2\204<\360`\001=x\306\r\275N.\222\274\203\353\301<C\224\t<r%N=0\336\214\275\227\2269\275L\222\326<\256t\000<\217\257|<\341\"\304<\274\310g\273\230m\330<\003l-<v**\275#\231d\274E\241\270<\300\254\003=\"K\032<&\022$;yP3<\267>\006\275\274{\245\273\224\340\272\273\026@\216<\203SO\274\204\302\311<\014P\266<\2542\221<\203K&<\320\262#:\026E\204\273\306\317\253\273\365\214\027\273\000\023\312;U\260\316<\266\313p\272\030\366\250\274a\311\203\274h\236\320;s\220\010<\253.m<_\247\321;l\n\364;\005p\256<<]$;C\242\223\273$\307\207;D7\035;X\357\250;\374\311\324;\273\252\272\274\236~\330<\315<,\274\365gd=\002$x<\272\225\274\274\001\010\354\274S\243\334<Run<1\210\220=\352\024<=\237\207\344=\304\237\177==\313|\275x\300\013=n\022\250<\032\244g=\010\317a\275|\307\030=\232\010S\275\230I\014<\353\263\034\275\026\3237=\260\025\221=B\006P=1L\260;}\241\022\275\270\217\223\275@c\352<gq:=\0300Z<eA#\274\335a#\275\255\304\010\275\r\327==8q\214\274>\014\242<[\024\013=C{\246\2748\2301=\207\023\032=\337-%=\326j\275<\270\035p<\202\206?;z\\\034\274D\005\331\273/J\315;m\031\013=<9#\273\030\336h\275\266\367\020\275\022N\244<\205\361:<e\306\017=\016H@<w\363\227<\310\2220=\327\361n<(\016\202\274\274\250\316\271\231\205\351;\343\267\322;H-\233;<\377\334\273\206\217\311<\306%/\275\272^\267\274\202\234\001=\014\006V=\363\034\302\274`\264\220=at\211=\r\366\276<;[a=Cr\217<\002J\252<\276K\t\275\314\235\272;\263\233^=!\3075=\207\270g<\3707\255\275Y\016\020\275n\361_=T\017><\033\355\204=\230\215\025=h\371i=\021\307\271=J\364\032=\366g\341\2741,j\273\220\203~;)\343\312<\023\221\027<\240P\"\275\214{5=@\t\311\274L\253\"\274\254\225\036\272 +\362\273\241A\267\274;\250r<\364W\277;C\262.\274\016\272\217;\323\006\317;\253\243=\274\365-\222\274z\247h\274\357\303\363\273\026.\372;\275\017\245\274s\253:\274\213\025\372\274\264{\347;\360.\300\273\006\320\341;j\224=\274\017#t\273\222!\205<\335\266S<\003\226\225\274\346Z\"\274\205\013\347\274\200\005\037\273\271\374\217\273\371\324\004\275\203\273\375;R0\010\274\3663\023\274r\246\233\275`l\020=o\320\016\275o\245\236=h\326\003\276\202\027\252\275<\321\306<\"\2441=\371Wo\275s%\365\274\3426\204<\231L\333<}7-=\253`\370\274\205<\211<\351sB\275m\212=\275\322\366\035<y\377\r\275\020g\243=@t\002>&\354\276\275\335\350\253<\306\302*\275\367\277\205=&\022\213\275*\253\221\275\177\362\031=\357c\020\275Gn\010\275J\337\223\273v\305\217\274\224\271\223<\231\210\305\273;Q\376\274\215`\336<\271\206\256<\261\226\246\274\220\212\010<u#\241<\217\201\200\274a\260\320\274\021-c\274\237k)\275\021N\222<\205\377&\275\033EV\275\374\341\"\275\310\247\216<d\207H\273\rD\265<r\254\222\274\303S\362;\331\356,=\340\n\307<0\354\313\274>\340\251\274k\270\222\274\325(-\274\373\2217\274g\025\250\274_k\262:\032\341h\274\242\244\276\274\212\n\371;#E\2378\1772t\275FK_=\020R\031=|\316-\2751<\214<T\257\240;\364,\363\273\264\374\210\2754\244J\2750[\336\274\022\230|<\331B\001\275*\252\277\275\335\357\224\275\336(\311<\t\270=\274\265`\023=v\205.\274\277\007\371;\256\251D=ZR\337<hv\211\275\350F4\275A\226\220\275[\207\305\274UY\r\275k\221\255\275\267\2575\274F\360\334\274^\344\034\274)\177\253\274\350vp:u&\372\272\351\364^\274\200\370\273\2730\005\320\273a\017\207\274\271\n,\274\302\264\r\274\342N=;\267\237\225\274[*t\273\357\331p\274v\342Y<V\270\253\273\3508[<Wq\204\274\355\211-\274#\306\257\273I\263L;.-3\274\223\023}\274\272R\210\274\256\234D\273\331\236\274\273\016\347\345\273\010\001\306\273Kdm\274\034I\3109\276%\216\274r\201!\274\355;\013=\n\276p=\370\2045\2752yL\274\241L\320\275\'\r\261=\'\245\257=\234\273m\274\310\033W\275\210\204\212=\021\213\032=R\202\346\275\232&\366\274\376\204\211\275q\225\314:\013yH<\350M\034=0v5=\235\013e<O\223\031=u\013\340\274uf\000\276\277\355\214=\3132\003\275\300HB=\017<\336\273\025=\222=L\263\261=\262\\]\274\215\307\233\2741|:\275b\321\016\274>\331\302\274\223\345E\275\200|/7\017\320\357\273c\022\277\274wM\247\274U\342\n\274\304\301\374\274\014\317\304\274m[M\274\343l\362\273\370PO\275/6D\274}B\007\275\253\210\362<|b^\274\240\216\204;w\316\307\274N\206\312\274\276\215B\2743[\335;\254\317\014\275<\r\022\275v\030\004\275\231\365\334\274\230\355j\274\367\343\363\274>\274z\274\351y\362\274\250&\3328J{\024\275b\304`\275Z\0136\275\026Md\275\000\201\025\274\373\225\034\273\227}?\275*\302\033\275\246%\322\273P\224X\275\nb)\275\\5#\275\270M\213\274r\001D\275\204\300\002\275\304YI\275\027!\371;\220\'>\274\234\006\347\272\245P\364\274\313\016!\275C\224\261\274\353\257\022\274\272\2438\275\326\"\033\275\350\2003\275\336\t\263\274\026,`\274\007n\355;\350\205\203\274\337H\026\275\377\217\254\273\304\273B\275w\200O\275\301b\250<\334\313[<\2431l\274\036\360\240\274\337*Q;\263\303\311\273`\263O\274\2238`\272\350\275\226;\n\223A\274\232\371\247\272\033\277\302\273\274\227:\274iCX;\362\026\004\275\301\'\277<\366\252@\274\301\345\346\273\217m\264\273M\267\003\274\342\377k\274\240\361\2308\343\205\372:d^\225;G@&<0\236_\272\317Vb\274;\212\033\274\310\225N8\242\275\203\274\016\032\273;\317\245\225\273\'\227\200<\267s\022\275\234p\272\274\205Hq\274\200\2604=7[\236\274\266\023\216\274\266w\020\275\2133*\275x\211\311\275\004\256\225<\037\271\035=a\030\317\275\'\373Q\274\357z\365\274\\\213\347<\310\020\264\274-\243+=\365\347\013;\333\027\371\274\027\240\254\274\207b\200<T\305\010\275\200i\013=\203\2047=d\0247=\311\324K\273\277\236\312<\023\3621\275\322\235\274=f\354\200\2754\301\253;1\0132=\227 \214<^\325\324\274s\001\361\274u;[;J\265\377\273=\332\276\274u\333\277\272K\300\343;\225t$\275|*\241<R|2\274\300g\355\274rt\270;\245\035t\275q-Z\273\217!0<^\370\202\274\331\312&\274^\335z\274k%\372\274`\350\344;\361L>:b\365)<\210\013\022=\277y\363\271\345}\201\274@\230\343\274\215\207\255;6s\324\274K\316\002<\326\3627=/\031p=Q5\000:\350\263W\275\253L\031\275NQ+<\234\034\320\274V\035-\275\317; \274\216\365J\274\311\276V\275\237\375|<\2539\025\275*\346\023\275P]\034\274H\232\250\275\347\375\n\274\326C\212\273\204\rH\275Z\337\001\275\366\354\231\274\022\215,\275\026^\301\274 $\006\275\024\275\034\274{\220\231;;\363=\274\352\226d\275\227Z\203\2753l\005\275\363\327Y\275\013Sx\273\232Fs<\252$\025\273\006a\261\274\327$\326\273\355\267{<N\231\027\275\227\265\202\274-\215\332\273]\271\240\274Y4\274\274\366(;\274\225\37079\370d#<e\2105\274\023\347\216\274v\n2\274A\362\014<V2G\273\r\225O\274hE\257\273\304i\204\274\377\225\221\274\360-k\273\265\241\300\274mD\004\275\036\'r\272\313t\322;\270\350E<\322\322\221\273\313\222\031\274@\317\353<9\243u\274\231\365\246<v\203\327;We\341=u\222\244<L\027H\275\233b6<\271HB\274\014!\343\274S= \274\313\276\002<\'\375#\275\016@\003>u\357\331\275S\364X=e>\200\272\"\313m=s\231\'\276\377-\270=\216\2167\275l\261b=E\332\337\274\346A\350\274&\336*\274\212\376\032=\222\021\202\275!Q\356=\343\304\274<\254#\230\275\266\220e=\334\320\036\275\244\367\031\274\025\311\030=k\375@\275=\356w\274E(\207\275\21313\274\333xL<\246}|\275\037\261\334\274G\247\240\274%Em\275\356\336=\275+M\300\274\030e\325:\306\t=\274\264u<\275\016O\005\275\207\223@\273??\221=\250\332\037<\306F\354\274\0023\305\273\320\377\340\274V;\337\274\2651\271\274`\254*\275\246\310{\275\t\300\266\273\301B\233<\303\374\304<\352\025\235\274g\332\347\274S\352\366;|5\336\274}n\306\274\255\323\314\274)\367\212\275+\216\357\274\t\232\006<\004\225\262\275\271\263H\275\330\'\016\275\365\347\241\275a\204V\275\031\251\004\275zJ\r=\360?\206\274\347.\025\275\225^n\275\361\206M\274x\302\314=\312\231\342<\010iM\275\326\346A<\305\324E\275wk\\\275\210\3469\275\216\250\220\275S\230\216\275\307p\013=\300Z\"=\032\304\375;;j8\275\236\301\322\274J\225\314<\014\037\254\274;\376a\275\310\375w<Y\360\363\274\266\252>\274t\'h\274\310\312t\274\375lD;\020\373\014<\014\014\235\274y[E\275\240(\231\273\377\310\205:\372Y5<\nC\340\273\022\3455<[5%\275\036=\276<\215\227\032\274k\014\222\273R\220B;\231X\013\274\006J\233\274yA=;\263\343\253\273OS\010\275\">u;\226-\003<\253\332\362;1\314\330\273\231/\372:\016%o<\242B*<\370_^<\203\314\t=\027\321\235;a\314\320\274\206\203\340=\24770=\020\020\254<<\332\216<2P\260\274&\361\274<\031\325\026=\324\357\375<D\343\230\274\021\263\205<\017\004(\275Vl\334=%A\342\270Q$ =}\3705\274[\203S=\372\210\031\2755/6\273\0241\346\273\323\027\254<\r\226x=\326\336\002<\336\264\364=:V\023\275?\352\223\274-@\342\274\301\3327\274\007K\240\274\227\027\306\2743\375\303<!\307r\275\264\213\254\274\326\366\004\275A\024\233\274\274\377\230;\210\255f;\373C\023\275uV\225\275\266\262\013\274\2262\t<\341\351.<\036\035\365\274\035-\215<\027\364m\275\215\304\206=\3523\364;p\330h\274\324\255Q<\231\2210\274\227;\022\275\226\224\231;\345\024\235\273\374ck\275\264\017x<d\322\254<.v\271<0\374\247\274\222g\021\273\304\tz\274\361\310\201<\2739Q=\372z$=\323\345D\275\2350,\275\362u3\2752|]\2749E\364\273\005\305e\275\275\335Q\275\r\224\211\275\017Ay<M\356\336<{\231\232\274\301\265\352\273\214\354\377;\216\032\302\275\234\204\201=k\205\256<\374\216\013\275s\314\024=P~j\274BNz\275\340\230n\274\225\372\234\274\261\201M\2750\237.=\234\364\357<\230gC\275\300\342\252\275\305|\205\274T\340\\\275\354\333\355<{{q\274\223\226H<-\367s\273\254\347\266\272:U6\274:d\030=\342\306\341<\036\372\032<\333\233\324<\366g\367<\302\243y:j\231\340<7\266h\274\300\303\001\272\356\341\234<l\256r\273\344\222\300;h\266\246<\026\351\215\273\264\365\265<\024a\326<\352\030\274<\262\025X<\252\025\216<\242|\304\273B\274\306<$\274w\273$#\016\273Pa\270\272\204\315\232;T~\224\274\321\3677;f\'X\273\343p\215<\203\036\001\275|\320:\275\356\247\321<\027\266\375\274U\247\214=k\203M>|\352r=\331\r\340<@p\021=\205x\202\272H*D\275:2\237\274\322\006\213\275\375-v\275\0163\033\274\363\216\314\274\215\360\006=9u\001=\022\260\001=\205\014\213\274p\365\000\275\236\350\201=\005\210\212=!\313T<4\274\024=\303\033\302=S*\017\275\200X!\275\263\254\005>\331\307\317\274@\002K\275\'_\007=b\313W<\2117k\273\035/\001\272\001\347e=>\334\030=\366\251\240< u8=\255x_=\3525\021\274\333_==\216X\037<^\202O<*\310\002=\256g!\274\206\025\222\274\313\3654=P\204v\270[\202\247<\226a\'=\003\016\003=\"\253\320<\260[\330<\362~\035<\343Z6=\243d9\274\177\222\001=#[\232\272\234\376v<\231\376\026<H\361h<\272\363M=4\340\225=L\377;=LB\002\273G\212\366<.\370\227=!\341H=\253\302\022<>`\254=\026\026N=\361\032\034=\034:\016=a[\n=&\200\036\273\356W;=\271\231\336\274[5v<t\207\'=\343kR:\205\341\276<\227d>=U\250\010=\200\026C=\022o\025=o\022\334<\2022\302<\343\276;<\322\275N<\252\365\205\270\354\006\363;\340)\203<4\264&=\261\204\322=\021m\260\272\016J?<\\\317\347:\342\324z;\013%\277\274\250\325\211\274T\322}\274\210\203^\274\023d\336;z\227\034\274\240\212T\273\221\325a;\304\356\276;\270&\240\274\337\266\315<\313\352l:l\177Q<\344\362\025\2747].\274\207\"D\273~\232\320;\r\304,\274\246\251j\274\257\024\'<\271~\245\273p\322\017;\264\304\342\273\306f(\272\203lf\274\226\346\353;\177\020\241\274^\366\200\273N\342\220=\030\205*=\304\357\351\274\31678=a\262\236\273\311\354\341;:\204A\275\261\324T<7\343\335\274}\007\023<\034\014\203=\004\232]=\n\366\213\274\202\341v\275\206\213\357<Rr\252\275\301\037[=:L/=\026E\361<\025\242\234\274B\205\342\274\266\024s\275\243_[=\256\r\245\275\'*\226=\202\023\240\274<B0=<(\345=\177\323\253\275\261\224\215\273\333\333\340;\253\216\314<s\363\230\273\276\347\311;\241A\024;\234\025\362\273Y9\033\275\212@\021\275Qg\266\274\033\013/\275\340\322y:4\300\204\274,\023@\274S\322\255\274\317\020\346<\342a\033\275\231\375\034=d\205*=\366\006\3059Q\367\202\274<U\324\274|\377\n\274:@2<\311e\273\274\343(\321\274\351Y\203<z@\301\274\023j\320;\252B>\275\005\303\026\2743\013\345\274QX\220\274E7\357\2747\006t\2756z5\275\'\"\233\273`\001\301\273Q,E\274r\264`\275[*D\275o\351\234\273Y)I\275\2319\313\274\304,|\275\034\371.\274 \n\330\274aD>\273\215p}\275\312\206\325<);(<\305\327o\273\342O\227\274U0F\275\354_I\274\312\321\205\273\203\202\241\274B\342\313\274 \343\'\267\377\032T\274\354F\245\271\351\224,<\355\307J<uo\331\274wV\326\273\327\006=\275I\264\213\275\337\265J\274\334\3068\274\267\370\237\273\2514[;bc`<\267L&\273\375\330\346\274\341P\n<aq\250;\322\246\315:YK\277\274\346\331\223\274?]\267\273w\007K\272\332\212\244;jJ\256\274\322`\023\275\001.:\2734\303\013\272\003\3009\274\233%U\274s\255\313\273\217\320\370\272i\026p\273\237\253\254\274\034\203\270\274\260\200\262\274\314\346\207\273Y\272v\273$W\231\274\242\0060;p\206l;\301d!\275J\220#\275\250;\301<:\251\014<%@M\275\314\367Y\274\346\306\356=+\351\246\274%\2331\2740W\004\276\257\344F\275\227\215T\274uIN\274\232<U=\031\277\341\275\274Y1<\232\364d\275\\\316\253\275\324\343\326\274\306xx=\342\204L=\367\276\226=\177A\000\275\212B\003;\331\325\250\2736t/\275\374D\247\275\306\214\337\274\370)\330=c\360\323;,\361h=_\222t\273\355\305\211\274\027\022\343;~\3025\273Op-<\224<w<2\210/9\"BP\275qr\003=\036,\267<b\310\214;\273\260\001\275X!\213\274\240\251&\275\361y\204\271S$\347\272\323\016\203\275\2344I\275?\301\007\273\365\224\013<\'g\234\274\313-\226\274\316\250^\274$\364\245\273\211,/\272pJ\276\274\202\360\034\275o\330\376\272\336\325R;\034\276\032\272\363\213\200<\263\t\234\273s\340\016\274\252\356\332\274b)\354\274\325t\251;\203\227\025<\330\316P;\202:\277\273\346rn\275R_u<6\253k<2\277\244<\215&t\275H\245\211\275\005\300G\275\224j\r<k\235\r<\250\322\276\275\035\320\267\275\253\314\271\273?<2;H.\313\274\2303\007\274\272\315I\275\246\326\265\274\261\013\231\274n\353\216\275\301\364z\275\364U7\275~\225\247\273\310\360\274\274\202\365\327\274\266\312\003\275\330\t\346;\277R\035\274\344\2341\275S\365^\274\376\374\"\274;\231\330;z\007,<\237\200d\273<\271a<\212\215S\274a%\235\272\023\233\202\273\235\202\023\275?V{\274xt\345;8\013(\275X?\024\271\321g\240\274\330L\207\274\346\373\022\273\276\014x\274\225\316h\274hL\374\267\013O\244\273!}!\275\206G\341\2735@\201\274>\314U\274\034\036*\274\006\347\033\273S\023\001\275\326\224\017<n\306\'\274\000\022\222<+\024\244\273e\232\376\274j\262E>4\270\245\272\023D\327=t[\321=so\342= \222\277\275HO\"\274}\270\351\273AJZ=^\302e<\330f\315\275\344u\371<5G\347<!\202\006=h\306i;AJ3=\214o\227<\370./\275.5\177\275\306\235f=\331\026\267=\250\310\227=\'g.=</.=LC\270\275rn:=\376~\332=Lt\216=\245\n\235\275=A\304\273\365\236\205\275\306*\330\274h=\273:\000x\366;\270\364\227<\335/g\274\351\357\225<\247\t\022\274|\031\237\274\021\177>\273N\362\250\274\2125\021\275P\344[<X\322E\275*y\027\275I\264\027\274\330G\344\2742\253\t;\303\332\266\274~\237\322\274o\007\233\273\252#J\274p>g\275J@\215;&&\375\274\333\265U<\343\256\241\274ou\303\273\034(\206\2748\035a<\366Xk=\002\315L=\317af\275n\240E\275\002\356\311<N\025\020<\020.\016<\336\022\200\275\211\210\243<\250\324!\274\332m\362<\313\214}\274\024X\365\273\313\2475\275\207!\273<\366\352\206\275l{{<J\320\016\275\n\370e\275s\267\237<\314\372\371\274A\214\001\275\010\310.\275\036lB\275@\352j\275\031\354\313\273\202\372|\274\001l\365\274\004\375a\275\032\272\031\275)!\212;&\356\031<\323\345\307=E1I<\230qt8O\270G;\274\302\032=a\363#\274z\272\241\273\226\343\337;\310\000\"<\343\376\215\274\237\010\330<\035\323\260;n\360\020=\355\211\024<\332\2661<\003\276\347\273h$\225<d\255\314\271\301|\327;\340\320]<\244\346V\2744\314\037\274\266{\373;\244\007P\274\242ol\274\316\245+<\373\'}<\016~\n=\307\036\031<\303\033\207<\301\262&=O\005\271<\032\004\032=o)\224\275`\2141<\332#\236=\257\263\262\273\262\232\007=kIX\273nM\026=\351\301\263=\362j\300\274\322\006:<\226v\003=\342\324~\274\257p\312=3\313>\275\327\213\212=\024l*\275!\307\335\274zND\275\367\220\367<y\322H<x_^\275>k\254\274R\221\230\2752\310\353\273\203MU=\2408/\275\263*\014\275!<\210\275\000\256\007=q\364\273\275\212\214\271=\301\263\t\275\030\034e<<\356\310\273\266\214\300:v?Y=\027C\253\274\311L\007\274\213\250-<\236\327\250<\377\343\264\274B\260-=\277\336(<\266\026o=$J\205<vrw<\2321\254:\267\323\216=G\355%<\262\242\002;T\333\020=\270\177\340\274\366\245l\274\256\031\244;\363\200\311\274V\374\353\274\022c\260<p\360\013=M\211\213=\215\216\277<\211\264\374<\004\327X=\355\225%=\3722e=\365\210*=P\347!\273\037rC<3\032\223=\025\357#\275\205\322#\274G\213\314< \211\032<\220t\262<np\273=\367\371\221=QO\217=/\365U=F\017\031=S\341\r=f\374\357=\300\255v=tVm9\235\016\272=|g+\275\"O\007\274\343\255\374\272\337\0013\275\325\261\277\274\275q\225=\250xZ=nY\200=\217ef<l\224u=|\341\312=\207\324\223=\205c\222=\002x\035<J\023!=\006\270g<\317k\355<\2616\"<\255M\274\274\202\344\'<K%9\274\336\006\260<a\005\207<\270q\306:\2159o<\226\025L<h\265,\273\256|z=\260\252g;\006E\257;\225%\212<\021\330\007<\210lN<.\037\247<Z\345g\273L\336\022\273\235\365\031=\234r\213:o\361-<\207%\307<\266\336\210<I\202\013<{\327J=\023\253\333:D\365\252;\330\0179\276\260G6=h\267s=`G\032=\370_\317\275\360{\254=Z\225\225<\3656\240\275\360\001D\275\177_&\275\001\225\252\275\0056\342\275\377\211\030>\272\346\021\276\036(#=\227\234\016=D\203\301\275\3662T\273\222K\206\274n\025\203=[\257\326\275\212[\362\275\260=\000=\037\003M\275R\200\363\275U~\267\275\266\316\223\275\226\262\320<2\245\332=O\364\014\275\264\217\250=\326K_>\207\r\364<E!j=\330\337\273<\271$V=\341\3324<tE\026\275\212u\035=__\003<\\\233#=\344\214$=jg\017\273,\326&=\274B`=yd\177;\342\375\316=\314\010\216<\242Sv\274]\313\314<.\247t<\010\275<<\226!%=\240\247\0018\356\'\221\273CiQ=\005\202\000\274\031\271\251<\241\346e<\251\360H=\256\017\362<\nK\277=\300>\r<\236\213?<J\241\377:\353\343X=<i0=P\345,=\347!\214:\364R\356\274At\303=\344w(<5\257\200=\300\211\274<\212M\222<\021\303\215<i\271\204=\321\020\200<\223\357\376=O\214\t\275\344d\240;^<1=\357\254\343;\'\027/<b\375\200=\300cD<\327\355I\273~\371D=X\254+<\230\r \274U\352\225=\tv\301=b\334V=\211r\235=\263\035\207<\rE\245\274"
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "\033\330f=\304\\\332<\241\366\241<\217\013\025=\202\376\261<\324\205\036=\371/\256=\325\372\014=\330\265\335;B\261\223=0.\221=5\013\271=\327*^=\353\007W=\350\330=<\003\225.=\1776\252=\227+\035=T\272X=\3160\370<\006|0=\025vp=\305\235f<\216\326\313\273\327j\225=qA`=gB\234=\372\251\033=\204\276\205=\357\027e=\005dA=7\2421=\304\207\255=c\016\203=\330\200\023=*y%;\266\220\256\274\220\017\262\274\300\224\215<\366\363\2239\034\000\202=\224\257\233=2\3333\274\264\270a=;f\'=\227\310T<\242\271\272\273\374\"\331<\374\316Q\274H\205a<\327]2=\277\220*\274\374\n\216<\310\006\007\274\037@8\275\222U\264\274\271\303#\274\256L\304;\273\221\263:[\n\347\274\203<\206\275\232\311T\275J\337y=P\207\034\273 \325\322=8C\234=\202k\374<\2436\230=\231\026I=u=\211=\262\273\026>b\244\252=X\357X=\202\"\361=;\317\344=v\343*>\326*\r>b\317\306=K\377_=;\210\360=4\217\007>^\361\203=mC\266=\362\023O=\'C\216=\367\010\333=\353\255C=\021R\000=\026\251\365=\367d\306=a\300\341=\263\004\243=\201S\350=o\023\273=S\344\320=\316\307*>\242\025\'>\217\240\035>\343\021\217=\020N\326=\377\375\263=^\317\335=\320Dd>Fa\017>\246\326\020>6\364G>\007\351N>\205I\177>\212AO>|O\033>Br\253=3\316E>$\375y>\352\327\346=[`\036>\2160\215=\207\311\317=\341\\F>sM\333=\325\361\333=\032\267[>\370o\023>\020l\">f\"\340=_uO>\037\344)>!\233P>\260\270$>"
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
  op: "ConcatV2"
  input: "split:1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_1"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_1/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_2"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_1:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_3"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_4"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_4"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_3"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_5"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_1"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_1/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_2"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_1:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_3"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_4"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_4"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_3"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_5"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_2/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_2/concat"
  op: "ConcatV2"
  input: "split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_2/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_2/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_2/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_2/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_2"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_2/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_4"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_2:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_6"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_7"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_5"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_6"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_8"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_2/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_2/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_2/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_2/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_2/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_2/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_2"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_2/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_4"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_2:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_6"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_7"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_5"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_6"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_8"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_3/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_3/concat"
  op: "ConcatV2"
  input: "split:3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_3/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_3/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_3/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_3/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_3"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_3/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_6"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_3:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_9"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_6"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_10"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_10"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_7"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_7"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_11"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_3/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_3/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_3/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_3/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_3/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_3/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_3"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_3/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_6"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_3:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_9"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_6"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_10"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_10"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_7"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_7"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_11"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_4/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_4/concat"
  op: "ConcatV2"
  input: "split:4"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_4/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_4/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_4/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_4/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_4/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_4/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_4"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_4/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_8/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_8"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_4:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_8/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_12"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_8"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_13"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_9"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_12"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_9"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_4:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_14"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_4/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_4/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_4/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_4/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_4/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_4/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_4/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_4/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_4"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_4/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_8/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_8"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_4:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_8/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_12"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_8"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_13"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_9"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_12"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_9"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_4:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_14"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_5/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_5/concat"
  op: "ConcatV2"
  input: "split:5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_5/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_5/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_5/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_5/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_5/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_5/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_5"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_5/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_10/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_10"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_5:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_10/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_15"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_10"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_16"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_16"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_11"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_11"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_5:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_17"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_5/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_5/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_5/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_5/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_5/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_5/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_5/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_5/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_5"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_5/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_10/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_10"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_5:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_10/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_15"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_10"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_16"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_16"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_11"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_11"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_5:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_17"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_6/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_6/concat"
  op: "ConcatV2"
  input: "split:6"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_6/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_6/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_6/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_6/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_6/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_6/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_6"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_6/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_12/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_12"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_6:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_12/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_18"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_18"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_19"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_12"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_19"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_13"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_18"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_13"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_20"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_6:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_20"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_6/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_6/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_6/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_6/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_6/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_6/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_6/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_6/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_6"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_6/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_12/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_12"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_6:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_12/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_18"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_18"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_19"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_12"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_19"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_13"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_18"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_13"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_20"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_6:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_20"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_7/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_7/concat"
  op: "ConcatV2"
  input: "split:7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_7/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_7/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_7/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_7/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_7/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_7/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_7"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_7/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_14/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_14"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_7:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_14/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_21"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_21"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_22"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_14"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_22"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_22"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_15"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_15"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_23"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_7:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_23"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_7/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_7/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_7/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_7/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_7/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_7/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_7/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_7/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_7"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_7/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_14/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_14"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_7:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_14/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_21"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_21"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_22"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_14"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_22"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_22"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_15"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_15"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_23"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_7:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_23"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_8/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_8/concat"
  op: "ConcatV2"
  input: "split:8"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_8/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_8/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_8/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_8/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_8/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_8/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_8"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_8/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_8/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_16/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_16"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_8:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_16/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_24"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_24"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_25"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_16"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_25"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_17"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_24"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_17"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_26"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_8:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_26"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_8/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_8/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_8/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_8/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_8/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_8/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_8/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_8/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_8"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_8/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_8/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_16/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_16"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_8:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_16/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_24"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_24"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_25"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_16"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_25"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_17"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_24"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_17"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_26"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_8:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_26"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_9/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_9/concat"
  op: "ConcatV2"
  input: "split:9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_9/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_9/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_9/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_9/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_9/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_9/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_9"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_9/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_18/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_18"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_9:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_18/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_27"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_27"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_28"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_18"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_28"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_28"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_19"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_19"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_29"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_9:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_29"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_9/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_9/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_9/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_9/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_9/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_9/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_9/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_9/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_9"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_9/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_18/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_18"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_9:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_18/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_27"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_27"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_28"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_18"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_28"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_28"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_19"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_19"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_29"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_9:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_29"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_10/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_10/concat"
  op: "ConcatV2"
  input: "split:10"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_10/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_10/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_10/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_10/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_10/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_10/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_10"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_10/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_10/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_20/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_20"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_10:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_20/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_30"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_30"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_31"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_20"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_31"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_21"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_30"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_21"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_32"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_10:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_32"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_10/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_10/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_10/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_10/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_10/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_10/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_10/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_10/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_10"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_10/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_10/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_20/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_20"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_10:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_20/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_30"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_30"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_31"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_20"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_31"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_21"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_30"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_21"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_32"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_10:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_32"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_11/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_11/concat"
  op: "ConcatV2"
  input: "split:11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_11/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_11/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_11/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_11/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_11/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_11/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_11"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_11/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_11/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_22/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_22"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_11:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_22/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_33"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_33"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_34"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_22"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_34"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_34"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_23"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_23"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_35"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_11:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_35"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_11/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_11/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_11/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_11/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_11/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_11/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_11/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_11/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_11"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_11/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_11/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_22/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_22"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_11:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_22/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_33"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_33"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_34"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_22"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_34"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_34"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_23"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_23"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_35"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_11:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_35"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_12/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_12/concat"
  op: "ConcatV2"
  input: "split:12"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_12/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_12/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_12/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_12/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_12/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_12/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_12"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_12/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_24/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_24"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_12:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_24/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_36"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_36"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_37"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_24"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_37"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_25"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_36"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_25"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_38"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_12:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_38"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_12/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_12/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_12/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_12/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_12/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_12/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_12/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_12/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_12"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_12/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_24/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_24"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_12:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_24/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_36"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_36"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_37"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_24"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_37"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_25"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_36"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_25"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_38"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_12:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_38"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_13/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_13/concat"
  op: "ConcatV2"
  input: "split:13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_13/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_13/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_13/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_13/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_13/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_13/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_13"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_13/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_13/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_26/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_26"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_13:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_26/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_39"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_39"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_40"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_26"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_40"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_40"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_27"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_27"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_41"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_13:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_41"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_13/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_13/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_13/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_13/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_13/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_13/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_13/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_13/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_13"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_13/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_13/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_26/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_26"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_13:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_26/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_39"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_39"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_40"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_26"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_40"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_40"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_27"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_27"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_41"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_13:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_41"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_14/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_14/concat"
  op: "ConcatV2"
  input: "split:14"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_14/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_14/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_14/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_14/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_14/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_14/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_14"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_14/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_14/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_28/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_28"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_14:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_28/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_42"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_42"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_43"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_28"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_43"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_29"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_42"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_29"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_44"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_14:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_44"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_14/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_14/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_14/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_14/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_14/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_14/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_14/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_14/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_14"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_14/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_14/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_28/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_28"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_14:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_28/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_42"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_42"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_43"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_28"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_43"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_29"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_42"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_29"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_44"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_14:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_44"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_15/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_15/concat"
  op: "ConcatV2"
  input: "split:15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_15/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_15/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_15/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_15/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_15/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_15/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_15"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_15/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_15/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_30/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_30"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_15:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_30/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_45"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_45"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_46"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_30"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_46"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_46"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_31"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_31"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_47"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_15:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_47"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_15/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_15/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_15/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_15/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_15/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_15/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_15/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_15/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_15"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_15/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_15/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_30/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_30"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_15:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_30/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_45"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_45"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_46"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_30"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_46"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_46"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_31"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_31"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_47"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_15:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_47"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_16/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_16/concat"
  op: "ConcatV2"
  input: "split:16"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_16/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_16/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_16/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_16/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_16/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_16/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_16"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_16/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_32/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_32"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_16:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_32/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_48"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_48"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_49"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_32"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_49"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_33"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_48"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_33"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_50"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_16:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_50"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_16/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_16/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_16/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_16/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_16/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_16/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_16/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_16/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_16"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_16/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_32/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_32"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_16:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_32/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_48"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_48"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_49"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_32"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_49"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_33"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_48"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_33"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_50"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_16:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_50"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_17/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_17/concat"
  op: "ConcatV2"
  input: "split:17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_17/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_17/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_17/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_17/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_17/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_17/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_17"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_17/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_34/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_34"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_17:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_34/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_51"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_51"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_52"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_34"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_52"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_52"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_35"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_35"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_53"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_17:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_53"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_17/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_17/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_17/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_17/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_17/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_17/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_17/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_17/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_17"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_17/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_34/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_34"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_17:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_34/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_51"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_51"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_52"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_34"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_52"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_52"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_35"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_35"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_53"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_17:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_53"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_18/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_18/concat"
  op: "ConcatV2"
  input: "split:18"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_18/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_18/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_18/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_18/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_18/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_18/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_18"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_18/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_18/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_36/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_36"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_18:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_36/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_54"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_54"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_55"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_36"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_55"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_37"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_54"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_37"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_56"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_18:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_56"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_18/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_18/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_18/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_18/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_18/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_18/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_18/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_18/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_18"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_18/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_18/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_36/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_36"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_18:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_36/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_54"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_54"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_55"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_36"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_55"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_37"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_54"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_37"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_56"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_18:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_56"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_19/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_19/concat"
  op: "ConcatV2"
  input: "split:19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_19/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_19/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_19/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_19/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_19/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_19/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_19"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_19/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_19/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_38/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_38"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_19:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_38/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_57"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_57"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_58"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_38"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_58"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_58"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_39"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_39"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_59"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_19:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_59"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_19/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_19/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_19/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_19/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_19/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_19/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_19/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_19/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_19"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_19/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_19/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_38/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_38"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_19:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_38/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_57"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_57"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_58"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_38"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_58"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_58"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_39"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_39"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_59"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_19:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_59"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_20/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_20/concat"
  op: "ConcatV2"
  input: "split:20"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_20/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_20/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_20/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_20/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_20/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_20/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_20"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_20/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_20/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_40/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_40"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_20:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_40/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_60"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_60"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_61"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_40"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_61"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_41"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_60"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_41"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_62"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_20:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_62"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_20/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_20/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_20/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_20/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_20/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_20/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_20/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_20/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_20"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_20/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_20/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_40/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_40"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_20:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_40/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_60"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_60"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_61"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_40"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_61"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_41"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_60"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_41"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_62"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_20:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_62"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_21/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_21/concat"
  op: "ConcatV2"
  input: "split:21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_21/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_21/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_21/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_21/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_21/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_21/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_21"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_21/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_21/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_42/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_42"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_21:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_42/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_63"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_63"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_64"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_42"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_64"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_64"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_43"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_43"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_65"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_21:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_65"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_21/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_21/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_21/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_21/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_21/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_21/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_21/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_21/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_21"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_21/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_21/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_42/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_42"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_21:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_42/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_63"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_63"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_64"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_42"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_64"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_64"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_43"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_43"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_65"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_21:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_65"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_22/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_22/concat"
  op: "ConcatV2"
  input: "split:22"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_22/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_22/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_22/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_22/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_22/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_22/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_22"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_22/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_22/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_44/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_44"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_22:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_44/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_66"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_66"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_67"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_44"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_67"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_45"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_66"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_45"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_68"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_22:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_68"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_22/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_22/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_22/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_22/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_22/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_22/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_22/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_22/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_22"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_22/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_22/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_44/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_44"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_22:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_44/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_66"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_66"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_67"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_44"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_67"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_45"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_66"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_45"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_68"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_22:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_68"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_23/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_23/concat"
  op: "ConcatV2"
  input: "split:23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_23/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_23/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_23/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_23/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_23/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_23/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_23"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_23/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_23/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_46/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_46"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_23:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_46/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_69"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_69"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_70"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_46"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_70"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_70"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_47"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_47"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_71"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_23:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_71"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_23/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_23/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_23/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_23/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_23/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_23/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_23/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_23/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_23"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_23/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_23/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_46/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_46"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_23:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_46/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_69"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_69"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_70"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_46"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_70"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_70"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_47"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_47"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_71"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_23:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_71"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_24/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_24/concat"
  op: "ConcatV2"
  input: "split:24"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_24/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_24/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_24/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_24/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_24/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_24/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_24"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_24/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_24/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_48/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_48"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_24:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_48/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_72"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_72"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_73"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_48"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_73"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_49"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_72"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_49"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_74"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_24:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_74"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_24/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_24/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_24/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_24/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_24/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_24/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_24/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_24/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_24"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_24/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_24/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_48/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_48"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_24:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_48/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_72"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_72"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_73"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_48"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_73"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_49"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_72"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_49"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_74"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_24:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_74"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_25/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_25/concat"
  op: "ConcatV2"
  input: "split:25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_25/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_25/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_25/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_25/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_25/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_25/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_25"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_25/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_25/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_50/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_50"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_25:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_50/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_75"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_75"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_76"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_50"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_76"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_76"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_51"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_51"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_77"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_25:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_77"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_25/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_25/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_25/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_25/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_25/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_25/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_25/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_25/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_25"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_25/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_25/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_50/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_50"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_25:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_50/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_75"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_75"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_76"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_50"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_76"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_76"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_51"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_51"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_77"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_25:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_77"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_26/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_26/concat"
  op: "ConcatV2"
  input: "split:26"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_26/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_26/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_26/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_26/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_26/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_26/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_26"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_26/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_26/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_52/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_52"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_26:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_52/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_78"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_78"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_79"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_52"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_79"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_53"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_78"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_53"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_80"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_26:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_80"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_26/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_26/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_26/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_26/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_26/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_26/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_26/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_26/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_26"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_26/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_26/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_52/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_52"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_26:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_52/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_78"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_78"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_79"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_52"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_79"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_53"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_78"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_53"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_80"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_26:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_80"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_27/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_27/concat"
  op: "ConcatV2"
  input: "split:27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_27/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_27/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_27/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_27/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_27/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_27/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_27"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_27/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_27/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_54/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_54"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_27:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_54/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_81"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_81"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_82"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_54"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_82"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_82"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_55"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_55"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_83"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_27:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_83"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_27/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_27/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_27/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_27/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_27/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_27/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_27/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_27/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_27"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_27/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_27/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_54/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_54"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_27:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_54/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_81"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_81"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_82"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_54"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_82"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_82"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_55"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_55"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_83"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_27:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_83"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_28/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_28/concat"
  op: "ConcatV2"
  input: "split:28"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_28/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_28/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_28/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_28/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_28/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_28/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_28"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_28/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_28/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_56/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_56"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_28:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_56/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_84"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_84"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_85"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_56"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_85"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_57"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_84"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_57"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_86"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_28:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_86"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_28/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_28/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_28/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_28/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_28/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_28/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_28/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_28/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_28"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_28/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_28/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_56/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_56"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_28:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_56/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_84"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_84"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_85"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_56"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_85"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_57"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_84"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_57"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_86"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_28:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_86"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_29/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_29/concat"
  op: "ConcatV2"
  input: "split:29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_29/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_29/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_29/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_29/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_29/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_29/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_29"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_29/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_29/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_58/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_58"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_29:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_58/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_87"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_87"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_88"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_58"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_88"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_88"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_59"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_59"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_89"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_29:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_89"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_29/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_29/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_29/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_29/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_29/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_29/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_29/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_29/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_29"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_29/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_29/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_58/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_58"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_29:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_58/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_87"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_87"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_88"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_58"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_88"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_88"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_59"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_59"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_89"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_29:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_89"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_30/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_30/concat"
  op: "ConcatV2"
  input: "split:30"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_30/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_30/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_30/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_30/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_30/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_30/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_30"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_30/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_30/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_60/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_60"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_30:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_60/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_90"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_90"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_91"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_60"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_91"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_61"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_90"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_61"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_92"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_30:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_92"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_30/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_30/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_30/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_30/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_30/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_30/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_30/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_30/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_30"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_30/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_30/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_60/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_60"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_30:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_60/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_90"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_90"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_91"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_60"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_91"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_61"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_90"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_61"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_92"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_30:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_92"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_31/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_31/concat"
  op: "ConcatV2"
  input: "split:31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_31/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_31/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_31/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_31/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_31/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_31/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_31"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_31/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_31/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_62/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_62"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_31:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_62/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_93"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_93"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_94"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_62"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_94"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_94"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_63"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_63"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_95"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_31:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_95"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_31/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_31/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_31/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_31/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_31/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_31/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_31/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_31/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_31"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_31/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_31/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_62/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_62"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_31:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_62/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_93"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_93"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_94"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_62"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_94"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_94"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_63"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_63"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_95"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_31:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_95"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_32/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_32/concat"
  op: "ConcatV2"
  input: "split:32"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_32/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_32/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_32/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_32/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_32/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_32/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_32"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_32/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_32/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_64/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_64"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_32:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_64/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_96"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_96"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_97"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_64"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_97"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_65"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_96"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_65"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_98"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_32:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_98"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_32/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_32/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_32/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_32/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_32/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_32/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_32/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_32/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_32"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_32/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_32/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_64/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_64"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_32:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_64/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_96"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_96"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_97"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_64"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_97"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_65"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_96"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_65"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_98"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_32:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_98"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_33/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_33/concat"
  op: "ConcatV2"
  input: "split:33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_33/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_33/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_33/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_33/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_33/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_33/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_33"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_33/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_33/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_66/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_66"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_33:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_66/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_99"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_99"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_100"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_66"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_33:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_100"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_100"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_67"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_67"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_101"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_33:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_101"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_33/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_33/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_33/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_33/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_33/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_33/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_33/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_33/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_33"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_33/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_33/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_66/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_66"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_33:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_66/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_99"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_99"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_100"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_66"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_33:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_100"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_100"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_67"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_67"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_101"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_33:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_101"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_34/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_34/concat"
  op: "ConcatV2"
  input: "split:34"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_34/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_34/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_34/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_34/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_34/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_34/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_34"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_34/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_34/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_68/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_68"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_34:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_68/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_102"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_102"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_103"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_68"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_103"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_69"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_102"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_69"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_104"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_34:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_104"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_34/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_34/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_34/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_34/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_34/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_34/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_34/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_34/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_34"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_34/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_34/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_68/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_68"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_34:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_68/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_102"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_102"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_103"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_68"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_103"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_69"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_102"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_69"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_104"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_34:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_104"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_35/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_35/concat"
  op: "ConcatV2"
  input: "split:35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_35/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_35/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_35/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_35/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_35/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_35/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_35"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_35/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_35/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_70/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_70"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_35:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_70/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_105"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_105"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_106"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_70"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_35:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_106"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_106"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_71"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_71"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_107"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_35:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_107"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_35/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_35/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_35/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_35/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_35/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_35/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_35/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_35/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_35"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_35/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_35/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_70/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_70"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_35:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_70/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_105"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_105"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_106"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_70"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_35:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_106"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_106"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_71"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_71"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_107"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_35:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_107"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_36/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_36/concat"
  op: "ConcatV2"
  input: "split:36"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_36/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_36/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_36/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_36/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_36/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_36/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_36"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_36/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_36/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_72/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_72"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_36:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_72/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_108"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_108"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_109"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_72"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_109"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_73"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_108"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_73"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_110"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_36:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_110"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_36/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_36/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_36/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_36/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_36/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_36/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_36/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_36/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_36"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_36/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_36/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_72/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_72"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_36:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_72/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_108"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_108"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_109"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_72"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_109"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_73"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_108"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_73"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_110"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_36:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_110"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_37/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_37/concat"
  op: "ConcatV2"
  input: "split:37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_37/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_37/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_37/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_37/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_37/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_37/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_37"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_37/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_37/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_74/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_74"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_37:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_74/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_111"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_111"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_112"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_74"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_112"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_112"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_75"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_75"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_113"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_37:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_113"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_37/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_37/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_37/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_37/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_37/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_37/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_37/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_37/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_37"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_37/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_37/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_74/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_74"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_37:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_74/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_111"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_111"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_112"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_74"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_112"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_112"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_75"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_75"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_113"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_37:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_113"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_38/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_38/concat"
  op: "ConcatV2"
  input: "split:38"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_38/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_38/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_38/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_38/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_38/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_38/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_38"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_38/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_38/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_76/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_76"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_38:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_76/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_114"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_114"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_115"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_76"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_115"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_77"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_114"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_77"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_116"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_38:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_116"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_38/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_38/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_38/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_38/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_38/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_38/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_38/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_38/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_38"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_38/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_38/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_76/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_76"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_38:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_76/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_114"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_114"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_115"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_76"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_115"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_77"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_114"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_77"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_116"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_38:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_116"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_39/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_39/concat"
  op: "ConcatV2"
  input: "split:39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_39/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_39/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_39/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_39/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_39/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_39/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_39"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_39/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_39/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_78/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_78"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_39:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_78/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_117"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_117"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_118"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_78"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_39:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_118"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_118"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_79"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_79"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_119"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_39:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_119"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_39/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_39/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_39/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_39/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_39/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_39/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_39/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_39/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_39"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_39/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_39/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_78/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_78"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_39:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_78/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_117"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_117"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_118"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_78"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_39:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_118"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_118"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_79"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_79"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_119"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_39:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_119"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_40/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_40/concat"
  op: "ConcatV2"
  input: "split:40"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_40/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_40/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_40/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_40/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_40/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_40/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_40"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_40/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_40/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_80/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_80"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_40:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_80/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_120"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_120"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_121"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_80"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_121"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_81"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_120"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_81"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_122"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_40:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_122"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_40/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_40/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_40/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_40/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_40/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_40/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_40/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_40/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_40"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_40/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_40/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_80/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_80"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_40:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_80/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_120"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_120"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_121"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_80"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_121"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_81"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_120"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_81"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_122"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_40:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_122"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_41/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_41/concat"
  op: "ConcatV2"
  input: "split:41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_41/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_41/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_41/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_41/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_41/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_41/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_41"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_41/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_41/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_82/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_82"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_41:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_82/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_123"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_123"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_124"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_82"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_41:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_124"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_124"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_83"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_83"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_125"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_41:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_125"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_41/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_41/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_41/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_41/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_41/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_41/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_41/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_41/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_41"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_41/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_41/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_82/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_82"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_41:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_82/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_123"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_123"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_124"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_82"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_41:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_124"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_124"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_83"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_83"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_125"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_41:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_125"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_42/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_42/concat"
  op: "ConcatV2"
  input: "split:42"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_42/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_42/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_42/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_42/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_42/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_42/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_42"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_42/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_42/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_84/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_84"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_42:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_84/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_126"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_126"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_127"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_84"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_127"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_85"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_126"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_85"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_128"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_42:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_128"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_42/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_42/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_42/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_42/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_42/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_42/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_42/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_42/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_42"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_42/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_42/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_84/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_84"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_42:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_84/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_126"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_126"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_127"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_84"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_127"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_85"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_126"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_85"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_128"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_42:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_128"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_43/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_43/concat"
  op: "ConcatV2"
  input: "split:43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_43/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_43/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_43/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_43/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_43/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_43/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_43"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_43/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_43/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_86/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_86"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_43:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_86/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_129"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_129"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_130"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_86"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_130"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_130"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_87"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_87"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_131"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_43:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_131"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_43/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_43/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_43/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_43/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_43/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_43/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_43/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_43/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_43"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_43/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_43/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_86/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_86"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_43:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_86/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_129"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_129"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_130"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_86"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_130"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_130"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_87"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_87"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_131"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_43:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_131"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_44/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_44/concat"
  op: "ConcatV2"
  input: "split:44"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_44/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_44/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_44/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_44/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_44/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_44/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_44"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_44/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_44/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_88/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_88"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_44:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_88/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_132"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_132"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_133"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_88"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_133"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_89"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_132"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_89"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_134"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_44:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_134"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_44/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_44/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_44/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_44/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_44/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_44/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_44/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_44/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_44"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_44/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_44/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_88/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_88"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_44:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_88/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_132"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_132"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_133"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_88"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_133"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_89"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_132"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_89"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_134"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_44:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_134"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_45/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_45/concat"
  op: "ConcatV2"
  input: "split:45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_45/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_45/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_45/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_45/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_45/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_45/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_45"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_45/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_45/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_90/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_90"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_45:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_90/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_135"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_135"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_136"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_90"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_45:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_136"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_136"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_91"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_91"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_137"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_45:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_137"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_45/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_45/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_45/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_45/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_45/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_45/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_45/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_45/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_45"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_45/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_45/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_90/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_90"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_45:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_90/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_135"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_135"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_136"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_90"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_45:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_136"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_136"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_91"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_91"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_137"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_45:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_137"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_46/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_46/concat"
  op: "ConcatV2"
  input: "split:46"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_46/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_46/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_46/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_46/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_46/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_46/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_46"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_46/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_46/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_92/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_92"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_46:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_92/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_138"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_138"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_139"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_92"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_139"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_93"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_138"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_93"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_140"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_46:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_140"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_46/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_46/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_46/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_46/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_46/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_46/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_46/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_46/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_46"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_46/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_46/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_92/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_92"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_46:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_92/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_138"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_138"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_139"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_92"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_139"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_93"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_138"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_93"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_140"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_46:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_140"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_47/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_47/concat"
  op: "ConcatV2"
  input: "split:47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_47/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_47/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_47/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_47/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_47/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_47/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_47"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_47/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_47/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_94/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_94"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_47:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_94/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_141"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_141"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_142"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_94"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_47:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_142"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_142"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_95"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_95"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_143"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_47:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_143"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_47/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_47/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_47/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_47/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_47/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_47/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_47/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_47/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_47"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_47/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_47/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_94/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_94"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_47:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_94/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_141"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_141"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_142"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_94"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_47:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_142"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_142"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_95"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_95"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_143"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_47:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_143"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_48/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_48/concat"
  op: "ConcatV2"
  input: "split:48"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_48/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_48/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_48/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_48/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_48/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_48/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_48"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_48/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_48/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_96/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_96"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_48:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_96/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_144"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_144"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_145"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_96"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_145"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_97"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_144"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_97"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_146"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_48:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_146"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_48/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_48/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_48/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_48/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_48/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_48/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_48/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_48/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_48"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_48/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_48/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_96/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_96"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_48:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_96/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_144"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_144"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_145"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_96"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_145"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_97"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_144"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_97"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_146"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_48:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_146"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_49/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_49/concat"
  op: "ConcatV2"
  input: "split:49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_49/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_49/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_49/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_49/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_49/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_49/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_49"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_49/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_49/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_98/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_98"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_49:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_98/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_147"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_147"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_148"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_98"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_148"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_148"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_99"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_99"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_149"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_49:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_149"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_49/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_49/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_49/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_49/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_49/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_49/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_49/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_49/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_49"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_49/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_49/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_98/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_98"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_49:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_98/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_147"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_147"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_148"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_98"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_148"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_148"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_99"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_99"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_149"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_49:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_149"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_50/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_50/concat"
  op: "ConcatV2"
  input: "split:50"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_50/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_50/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_50/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_50/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_50/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_50/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_50"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_50/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_50/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_100/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_100"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_50:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_100/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_150"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_150"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_151"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_100"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_151"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_101"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_150"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_101"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_152"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_50:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_152"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_50/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_50/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_50/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_50/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_50/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_50/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_50/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_50/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_50"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_50/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_50/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_100/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_100"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_50:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_100/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_150"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_150"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_151"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_100"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_151"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_101"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_150"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_101"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_152"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_50:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_152"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_51/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_51/concat"
  op: "ConcatV2"
  input: "split:51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_51/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_51/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_51/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_51/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_51/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_51/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_51"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_51/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_51/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_102/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_102"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_51:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_102/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_153"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_153"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_154"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_102"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_51:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_154"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_154"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_103"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_103"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_155"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_51:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_155"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_51/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_51/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_51/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_51/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_51/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_51/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_51/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_51/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_51"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_51/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_51/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_102/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_102"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_51:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_102/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_153"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_153"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_154"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_102"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_51:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_154"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_154"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_103"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_103"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_155"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_51:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_155"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_52/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_52/concat"
  op: "ConcatV2"
  input: "split:52"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_52/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_52/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_52/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_52/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_52/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_52/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_52"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_52/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_52/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_104/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_104"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_52:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_104/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_156"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_156"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_157"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_104"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_157"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_105"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_156"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_105"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_158"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_52:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_158"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_52/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_52/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_52/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_52/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_52/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_52/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_52/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_52/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_52"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_52/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_52/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_104/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_104"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_52:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_104/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_156"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_156"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_157"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_104"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_157"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_105"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_156"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_105"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_158"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_52:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_158"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_53/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_53/concat"
  op: "ConcatV2"
  input: "split:53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_53/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_53/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_53/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_53/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_53/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_53/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_53"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_53/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_53/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_106/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_106"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_53:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_106/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_159"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_159"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_160"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_106"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_53:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_160"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_160"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_107"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_107"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_161"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_53:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_161"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_53/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_53/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_53/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_53/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_53/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_53/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_53/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_53/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_53"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_53/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_53/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_106/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_106"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_53:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_106/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_159"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_159"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_160"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_106"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_53:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_160"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_160"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_107"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_107"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_161"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_53:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_161"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_54/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_54/concat"
  op: "ConcatV2"
  input: "split:54"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_54/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_54/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_54/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_54/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_54/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_54/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_54"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_54/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_54/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_108/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_108"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_54:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_108/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_162"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_162"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_163"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_108"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_163"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_109"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_162"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_109"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_164"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_54:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_164"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_54/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_54/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_54/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_54/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_54/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_54/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_54/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_54/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_54"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_54/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_54/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_108/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_108"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_54:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_108/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_162"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_162"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_163"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_108"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_163"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_109"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_162"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_109"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_164"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_54:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_164"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_55/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_55/concat"
  op: "ConcatV2"
  input: "split:55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_55/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_55/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_55/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_55/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_55/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_55/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_55"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_55/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_55/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_110/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_110"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_55:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_110/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_165"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_165"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_166"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_110"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_166"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_166"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_111"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_111"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_167"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_55:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_167"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_55/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_55/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_55/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_55/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_55/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_55/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_55/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_55/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_55"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_55/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_55/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_110/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_110"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_55:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_110/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_165"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_165"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_166"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_110"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_166"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_166"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_111"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_111"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_167"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_55:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_167"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_56/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_56/concat"
  op: "ConcatV2"
  input: "split:56"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_56/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_56/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_56/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_56/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_56/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_56/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_56"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_56/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_56/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_112/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_112"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_56:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_112/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_168"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_168"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_169"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_112"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_169"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_113"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_168"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_113"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_170"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_56:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_170"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_56/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_56/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_56/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_56/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_56/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_56/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_56/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_56/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_56"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_56/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_56/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_112/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_112"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_56:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_112/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_168"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_168"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_169"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_112"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_169"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_113"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_168"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_113"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_170"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_56:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_170"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_57/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_57/concat"
  op: "ConcatV2"
  input: "split:57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_57/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_57/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_57/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_57/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_57/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_57/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_57"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_57/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_57/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_114/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_114"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_57:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_114/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_171"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_171"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_172"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_114"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_57:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_172"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_172"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_115"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_115"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_173"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_57:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_173"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_57/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_57/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_57/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_57/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_57/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_57/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_57/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_57/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_57"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_57/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_57/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_114/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_114"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_57:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_114/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_171"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_171"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_172"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_114"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_57:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_172"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_172"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_115"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_115"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_173"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_57:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_173"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_58/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_58/concat"
  op: "ConcatV2"
  input: "split:58"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_58/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_58/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_58/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_58/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_58/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_58/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_58"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_58/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_58/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_116/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_116"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_58:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_116/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_174"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_174"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_175"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_116"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_175"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_117"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_174"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_117"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_176"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_58:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_176"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_58/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_58/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_58/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_58/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_58/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_58/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_58/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_58/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_58"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_58/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_58/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_116/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_116"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_58:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_116/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_174"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_174"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_175"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_116"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_175"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_117"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_174"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_117"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_176"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_58:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_176"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_59/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_59/concat"
  op: "ConcatV2"
  input: "split:59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_59/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_59/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_59/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_59/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_59/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_59/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_59"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_59/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_59/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_118/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_118"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_59:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_118/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_177"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_177"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_178"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_118"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_59:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_178"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_178"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_119"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_119"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_179"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_59:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_179"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_59/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_59/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_59/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_59/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_59/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_59/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_59/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_59/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_59"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_59/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_59/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_118/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_118"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_59:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_118/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_177"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_177"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_178"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_118"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_59:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_178"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_178"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_119"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_119"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_179"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_59:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_179"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_60/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_60/concat"
  op: "ConcatV2"
  input: "split:60"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_60/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_60/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_60/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_60/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_60/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_60/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_60"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_60/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_60/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_120/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_120"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_60:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_120/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_180"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_180"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_181"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_120"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_181"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_121"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_180"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_121"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_182"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_60:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_182"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_60/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_60/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_60/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_60/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_60/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_60/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_60/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_60/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_60"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_60/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_60/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_120/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_120"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_60:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_120/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_180"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_180"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_181"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_120"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_181"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_121"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_180"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_121"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_182"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_60:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_182"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_61/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_61/concat"
  op: "ConcatV2"
  input: "split:61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_61/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_61/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_61/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_61/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_61/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_61/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_61"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_61/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_61/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_122/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_122"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_61:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_122/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_183"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_183"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_184"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_122"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_184"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_184"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_123"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_123"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_185"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_61:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_185"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_61/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_61/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_61/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_61/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_61/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_61/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_61/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_61/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_61"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_61/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_61/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_122/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_122"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_61:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_122/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_183"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_183"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_184"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_122"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_184"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_184"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_123"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_123"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_185"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_61:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_185"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_62/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_62/concat"
  op: "ConcatV2"
  input: "split:62"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_62/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_62/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_62/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_62/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_62/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_62/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_62"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_62/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_62/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_124/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_124"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_62:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_124/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_186"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_186"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_187"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_124"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_187"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_125"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_186"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_125"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_188"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_62:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_188"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_62/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_62/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_62/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_62/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_62/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_62/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_62/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_62/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_62"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_62/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_62/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_124/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_124"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_62:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_124/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_186"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_186"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_187"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_124"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_187"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_125"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_186"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_125"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_188"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_62:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_188"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_63/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_63/concat"
  op: "ConcatV2"
  input: "split:63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_63/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_63/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_63/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_63/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_63/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_63/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_63"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_63/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_63/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_126/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_126"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_63:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_126/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_189"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_189"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_190"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_126"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_63:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_190"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_190"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_127"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_127"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_191"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_63:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_191"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_63/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_63/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_63/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_63/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_63/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_63/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_63/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_63/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_63"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_63/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_63/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_126/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_126"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_63:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_126/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_189"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_189"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_190"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_126"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_63:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_190"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_190"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_127"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_127"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_191"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_63:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_191"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_64/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_64/concat"
  op: "ConcatV2"
  input: "split:64"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_64/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_64/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_64/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_64/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_64/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_64/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_64"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_64/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_64/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_128/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_128"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_64:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_128/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_192"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_192"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_193"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_128"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_193"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_129"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_192"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_129"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_194"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_64:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_194"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_64/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_64/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_64/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_64/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_64/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_64/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_64/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_64/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_64"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_64/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_64/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_128/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_128"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_64:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_128/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_192"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_192"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_193"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_128"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_193"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_129"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_192"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_129"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_194"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_64:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_194"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_65/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_65/concat"
  op: "ConcatV2"
  input: "split:65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_65/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_65/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_65/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_65/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_65/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_65/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_65"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_65/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_65/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_130/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_130"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_65:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_130/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_195"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_195"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_196"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_130"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_65:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_196"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_196"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_131"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_131"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_197"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_65:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_197"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_65/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_65/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_65/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_65/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_65/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_65/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_65/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_65/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_65"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_65/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_65/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_130/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_130"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_65:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_130/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_195"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_195"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_196"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_130"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_65:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_196"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_196"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_131"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_131"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_197"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_65:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_197"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_66/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_66/concat"
  op: "ConcatV2"
  input: "split:66"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_66/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_66/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_66/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_66/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_66/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_66/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_66"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_66/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_66/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_132/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_132"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_66:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_132/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_198"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_198"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_199"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_132"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_199"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_133"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_198"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_133"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_200"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_66:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_200"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_66/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_66/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_66/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_66/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_66/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_66/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_66/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_66/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_66"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_66/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_66/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_132/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_132"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_66:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_132/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_198"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_198"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_199"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_132"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_199"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_133"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_198"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_133"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_200"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_66:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_200"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_67/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_67/concat"
  op: "ConcatV2"
  input: "split:67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_67/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_67/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_67/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_67/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_67/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_67/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_67"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_67/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_67/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_134/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_134"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_67:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_134/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_201"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_201"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_202"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_134"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_202"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_202"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_135"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_135"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_203"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_67:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_203"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_67/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_67/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_67/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_67/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_67/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_67/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_67/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_67/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_67"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_67/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_67/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_134/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_134"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_67:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_134/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_201"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_201"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_202"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_134"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_202"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_202"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_135"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_135"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_203"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_67:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_203"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_68/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_68/concat"
  op: "ConcatV2"
  input: "split:68"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_68/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_68/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_68/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_68/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_68/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_68/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_68"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_68/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_68/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_136/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_136"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_68:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_136/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_204"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_204"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_205"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_136"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_68:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_205"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_137"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_204"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_137"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_206"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_68:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_206"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_68/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_68/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_68/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_68/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_68/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_68/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_68/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_68/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_68"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_68/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_68/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_136/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_136"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_68:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_136/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_204"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_204"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_205"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_136"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_68:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_205"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_137"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_204"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_137"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_206"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_68:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_206"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_69/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_69/concat"
  op: "ConcatV2"
  input: "split:69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_69/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_69/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_69/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_69/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_69/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_69/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_69"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_69/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_69/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_138/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_138"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_69:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_138/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_207"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_207"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_208"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_138"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_69:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_208"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_208"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_139"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_139"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_209"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_69:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_209"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_69/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_69/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_69/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_69/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_69/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_69/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_69/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_69/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_69"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_69/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_69/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_138/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_138"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_69:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_138/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_207"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_207"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_208"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_138"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_69:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_208"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_208"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_139"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_139"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_209"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_69:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_209"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_70/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_70/concat"
  op: "ConcatV2"
  input: "split:70"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_70/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_70/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_70/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_70/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_70/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_70/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_70"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_70/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_70/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_140/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_140"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_70:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_140/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_210"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_210"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_211"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_140"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_211"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_141"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_210"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_141"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_212"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_70:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_212"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_70/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_70/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_70/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_70/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_70/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_70/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_70/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_70/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_70"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_70/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_70/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_140/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_140"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_70:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_140/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_210"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_210"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_211"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_140"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_211"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_141"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_210"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_141"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_212"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_70:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_212"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_71/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_71/concat"
  op: "ConcatV2"
  input: "split:71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_71/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_71/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_71/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_71/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_71/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_71/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_71"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_71/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_71/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_142/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_142"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_71:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_142/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_213"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_213"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_214"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_142"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_71:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_214"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_214"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_143"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_143"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_215"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_71:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_215"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_71/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_71/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_71/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_71/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_71/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_71/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_71/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_71/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_71"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_71/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_71/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_142/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_142"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_71:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_142/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_213"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_213"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_214"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_142"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_71:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_214"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_214"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_143"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_143"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_215"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_71:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_215"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_72/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_72/concat"
  op: "ConcatV2"
  input: "split:72"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_72/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_72/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_72/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_72/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_72/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_72/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_72"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_72/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_72/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_144/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_144"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_72:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_144/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_216"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_216"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_217"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_144"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_217"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_145"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_216"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_145"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_218"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_72:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_218"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_72/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_72/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_72/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_72/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_72/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_72/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_72/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_72/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_72"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_72/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_72/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_144/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_144"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_72:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_144/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_216"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_216"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_217"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_144"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_217"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_145"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_216"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_145"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_218"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_72:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_218"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_73/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_73/concat"
  op: "ConcatV2"
  input: "split:73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_73/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_73/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_73/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_73/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_73/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_73/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_73"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_73/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_73/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_146/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_146"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_73:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_146/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_219"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_219"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_220"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_146"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_220"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_220"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_147"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_147"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_221"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_73:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_221"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_73/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_73/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_73/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_73/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_73/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_73/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_73/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_73/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_73"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_73/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_73/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_146/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_146"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_73:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_146/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_219"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_219"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_220"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_146"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_220"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_220"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_147"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_147"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_221"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_73:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_221"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_74/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_74/concat"
  op: "ConcatV2"
  input: "split:74"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_74/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_74/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_74/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_74/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_74/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_74/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_74"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_74/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_74/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_148/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_148"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_74:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_148/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_222"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_222"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_223"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_148"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_74:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_223"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_149"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_222"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_149"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_224"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_74:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_224"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_74/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_74/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_74/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_74/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_74/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_74/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_74/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_74/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_74"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_74/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_74/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_148/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_148"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_74:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_148/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_222"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_222"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_223"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_148"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_74:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_223"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_149"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_222"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_149"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_224"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_74:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_224"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_75/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_75/concat"
  op: "ConcatV2"
  input: "split:75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_75/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_75/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_75/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_75/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_75/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_75/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_75"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_75/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_75/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_150/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_150"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_75:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_150/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_225"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_225"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_226"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_150"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_75:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_226"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_226"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_151"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_151"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_227"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_75:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_227"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_75/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_75/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_75/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_75/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_75/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_75/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_75/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_75/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_75"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_75/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_75/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_150/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_150"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_75:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_150/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_225"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_225"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_226"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_150"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_75:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_226"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_226"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_151"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_151"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_227"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_75:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_227"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_76/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_76/concat"
  op: "ConcatV2"
  input: "split:76"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_76/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_76/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_76/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_76/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_76/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_76/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_76"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_76/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_76/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_152/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_152"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_76:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_152/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_228"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_228"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_229"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_152"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_229"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_153"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_228"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_153"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_230"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_76:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_230"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_76/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_76/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_76/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_76/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_76/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_76/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_76/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_76/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_76"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_76/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_76/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_152/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_152"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_76:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_152/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_228"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_228"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_229"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_152"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_229"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_153"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_228"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_153"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_230"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_76:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_230"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_77/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_77/concat"
  op: "ConcatV2"
  input: "split:77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_77/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_77/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_77/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_77/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_77/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_77/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_77"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_77/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_77/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_154/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_154"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_77:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_154/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_231"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_231"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_232"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_154"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_77:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_232"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_232"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_155"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_155"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_233"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_77:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_233"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_77/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_77/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_77/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_77/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_77/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_77/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_77/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_77/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_77"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_77/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_77/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_154/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_154"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_77:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_154/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_231"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_231"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_232"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_154"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_77:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_232"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_232"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_155"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_155"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_233"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_77:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_233"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_78/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_78/concat"
  op: "ConcatV2"
  input: "split:78"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_78/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_78/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_78/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_78/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_78/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_78/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_78"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_78/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_78/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_156/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_156"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_78:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_156/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_234"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_234"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_235"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_156"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_235"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_157"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_234"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_157"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_236"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_78:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_236"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_78/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_78/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_78/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_78/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_78/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_78/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_78/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_78/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_78"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_78/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_78/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_156/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_156"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_78:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_156/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_234"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_234"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_235"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_156"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_235"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_157"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_234"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_157"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_236"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_78:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_236"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_79/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_79/concat"
  op: "ConcatV2"
  input: "split:79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_79/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_79/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_79/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_79/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_79/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_79/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_79"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_79/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_79/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_158/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_158"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_79:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_158/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_237"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_237"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_238"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_158"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_238"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_238"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_159"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_159"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_239"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_79:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_239"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_79/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_79/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_79/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_79/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_79/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_79/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_79/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_79/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_79"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_79/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_79/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_158/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_158"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_79:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_158/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_237"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_237"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_238"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_158"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_238"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_238"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_159"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_159"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_239"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_79:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_239"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_80/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_80/concat"
  op: "ConcatV2"
  input: "split:80"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_80/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_80/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_80/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_80/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_80/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_80/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_80"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_80/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_80/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_160/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_160"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_80:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_160/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_240"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_240"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_241"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_160"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_80:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_241"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_161"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_240"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_161"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_242"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_80:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_242"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_80/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_80/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_80/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_80/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_80/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_80/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_80/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_80/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_80"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_80/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_80/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_160/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_160"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_80:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_160/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_240"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_240"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_241"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_160"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_80:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_241"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_161"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_240"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_161"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_242"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_80:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_242"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_81/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_81/concat"
  op: "ConcatV2"
  input: "split:81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_81/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_81/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_81/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_81/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_81/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_81/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_81"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_81/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_81/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_162/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_162"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_81:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_162/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_243"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_243"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_244"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_162"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_81:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_244"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_244"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_163"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_163"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_245"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_81:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_245"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_81/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_81/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_81/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_81/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_81/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_81/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_81/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_81/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_81"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_81/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_81/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_162/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_162"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_81:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_162/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_243"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_243"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_244"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_162"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_81:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_244"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_244"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_163"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_163"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_245"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_81:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_245"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_82/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_82/concat"
  op: "ConcatV2"
  input: "split:82"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_82/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_82/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_82/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_82/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_82/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_82/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_82"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_82/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_82/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_164/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_164"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_82:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_164/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_246"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_246"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_247"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_164"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_82:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_247"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_165"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_246"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_165"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_248"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_82:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_248"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_82/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_82/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_82/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_82/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_82/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_82/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_82/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_82/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_82"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_82/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_82/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_164/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_164"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_82:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_164/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_246"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_246"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_247"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_164"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_82:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_247"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_165"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_246"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_165"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_248"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_82:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_248"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_83/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_83/concat"
  op: "ConcatV2"
  input: "split:83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_83/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_83/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_83/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_83/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_83/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_83/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_83"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_83/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_83/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_166/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_166"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_83:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_166/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_249"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_249"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_250"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_166"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_83:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_250"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_250"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_167"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_167"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_251"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_83:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_251"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_83/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_83/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_83/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_83/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_83/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_83/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_83/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_83/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_83"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_83/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_83/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_166/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_166"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_83:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_166/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_249"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_249"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_250"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_166"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_83:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_250"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_250"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_167"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_167"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_251"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_83:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_251"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_84/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_84/concat"
  op: "ConcatV2"
  input: "split:84"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_84/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_84/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_84/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_84/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_84/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_84/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_84"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_84/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_84/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_168/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_168"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_84:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_168/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_252"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_252"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_253"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_168"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_253"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_169"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_252"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_169"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_254"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_84:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_254"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_84/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_84/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_84/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_84/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_84/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_84/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_84/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_84/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_84"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_84/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_84/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_168/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_168"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_84:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_168/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_252"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_252"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_253"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_168"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_253"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_169"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_252"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_169"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_254"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_84:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_254"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_85/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_85/concat"
  op: "ConcatV2"
  input: "split:85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_85/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_85/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_85/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_85/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_85/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_85/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_85"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_85/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_85/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_170/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_170"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_85:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_170/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_255"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_255"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_256"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_170"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_85:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_256"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_256"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_171"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_255"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_171"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_257"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_85:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_257"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_85/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_85/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_85/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_85/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_85/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_85/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_85/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_85/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_85"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_85/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_85/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_170/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_170"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_85:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_170/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_255"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_255"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_256"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_170"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_85:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_256"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_256"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_171"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_255"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_171"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_257"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_85:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_257"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_86/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_86/concat"
  op: "ConcatV2"
  input: "split:86"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_86/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_86/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_86/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_86/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_86/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_86/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_86"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_86/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_86/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_172/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_172"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_86:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_172/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_258"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_258"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_259"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_172"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_86:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_259"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_259"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_173"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_258"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_173"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_260"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_86:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_260"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_86/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_86/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_86/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_86/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_86/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_86/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_86/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_86/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_86"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_86/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_86/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_172/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_172"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_86:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_172/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_258"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_258"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_259"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_172"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_86:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_259"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_259"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_173"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_258"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_173"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_260"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_86:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_260"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_87/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_87/concat"
  op: "ConcatV2"
  input: "split:87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_87/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_87/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_87/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_87/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_87/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_87/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_87"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_87/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_87/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_174/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_174"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_87:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_174/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_261"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_261"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_262"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_174"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_87:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_262"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_262"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_175"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_261"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_175"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_263"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_87:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_263"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_87/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_87/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_87/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_87/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_87/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_87/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_87/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_87/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_87"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_87/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_87/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_174/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_174"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_87:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_174/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_261"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_261"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_262"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_174"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_87:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_262"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_262"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_175"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_261"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_175"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_263"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_87:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_263"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_88/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_88/concat"
  op: "ConcatV2"
  input: "split:88"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_88/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_88/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_88/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_88/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_88/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_88/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_88"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_88/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_88/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_176/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_176"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_88:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_176/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_264"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_264"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_265"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_176"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_88:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_265"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_265"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_177"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_264"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_177"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_266"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_88:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_266"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_88/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_88/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_88/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_88/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_88/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_88/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_88/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_88/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_88"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_88/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_88/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_176/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_176"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_88:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_176/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_264"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_264"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_265"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_176"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_88:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_265"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_265"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_177"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_264"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_177"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_266"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_88:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_266"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_89/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_89/concat"
  op: "ConcatV2"
  input: "split:89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_89/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_89/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_89/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_89/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_89/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_89/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_89"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_89/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_89/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_178/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_178"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_89:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_178/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_267"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_267"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_268"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_178"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_89:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_268"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_268"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_179"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_267"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_179"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_269"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_89:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_269"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_89/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_89/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_89/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_89/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_89/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_89/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_89/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_89/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_89"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_89/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_89/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_178/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_178"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_89:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_178/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_267"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_267"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_268"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_178"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_89:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_268"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_268"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_179"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_267"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_179"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_269"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_89:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_269"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_90/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_90/concat"
  op: "ConcatV2"
  input: "split:90"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_90/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_90/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_90/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_90/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_90/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_90/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_90"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_90/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_90/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_180/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_180"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_90:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_180/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_270"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_270"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_271"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_180"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_271"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_271"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_181"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_270"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_181"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_272"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_90:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_272"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_90/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_90/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_90/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_90/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_90/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_90/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_90/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_90/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_90"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_90/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_90/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_180/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_180"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_90:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_180/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_270"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_270"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_271"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_180"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_271"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_271"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_181"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_270"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_181"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_272"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_90:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_272"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_91/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_91/concat"
  op: "ConcatV2"
  input: "split:91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_91/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_91/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_91/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_91/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_91/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_91/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_91"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_91/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_91/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_182/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_182"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_91:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_182/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_273"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_273"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_274"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_182"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_91:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_274"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_274"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_183"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_273"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_183"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_275"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_91:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_275"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_91/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_91/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_91/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_91/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_91/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_91/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_91/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_91/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_91"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_91/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_91/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_182/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_182"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_91:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_182/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_273"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_273"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_274"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_182"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_91:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_274"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_274"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_183"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_273"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_183"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_275"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_91:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_275"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_92/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_92/concat"
  op: "ConcatV2"
  input: "split:92"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_92/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_92/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_92/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_92/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_92/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_92/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_92"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_92/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_92/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_184/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_184"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_92:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_184/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_276"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_276"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_277"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_184"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_92:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_277"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_277"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_185"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_276"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_185"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_278"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_92:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_278"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_92/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_92/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_92/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_92/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_92/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_92/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_92/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_92/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_92"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_92/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_92/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_184/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_184"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_92:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_184/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_276"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_276"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_277"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_184"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_92:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_277"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_277"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_185"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_276"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_185"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_278"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_92:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_278"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_93/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_93/concat"
  op: "ConcatV2"
  input: "split:93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_93/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_93/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_93/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_93/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_93/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_93/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_93"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_93/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_93/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_186/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_186"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_93:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_186/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_279"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_279"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_280"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_186"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_93:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_280"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_280"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_187"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_279"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_187"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_281"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_93:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_281"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_93/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_93/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_93/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_93/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_93/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_93/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_93/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_93/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_93"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_93/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_93/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_186/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_186"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_93:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_186/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_279"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_279"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_280"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_186"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_93:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_280"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_280"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_187"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_279"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_187"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_281"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_93:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_281"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_94/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_94/concat"
  op: "ConcatV2"
  input: "split:94"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_94/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_94/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_94/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_94/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_94/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_94/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_94"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_94/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_94/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_188/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_188"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_94:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_188/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_282"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_282"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_283"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_188"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_94:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_283"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_283"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_189"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_282"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_189"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_284"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_94:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_284"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_94/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_94/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_94/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_94/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_94/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_94/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_94/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_94/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_94"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_94/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_94/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_188/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_188"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_94:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_188/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_282"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_282"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_283"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_188"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_94:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_283"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_283"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_189"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_282"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_189"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_284"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_94:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_284"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_95/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_95/concat"
  op: "ConcatV2"
  input: "split:95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_95/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_95/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_95/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_95/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_95/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_95/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_95"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_95/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_95/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_190/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_190"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_95:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_190/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_285"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_285"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_286"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_190"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_95:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_286"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_286"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_191"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_285"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_191"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_287"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_95:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_287"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_95/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_95/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_95/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_95/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_95/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_95/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_95/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_95/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_95"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_95/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_95/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_190/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_190"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_95:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_190/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_285"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_285"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_286"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_190"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_95:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_286"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_286"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_191"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_285"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_191"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_287"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_95:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_287"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_96/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_96/concat"
  op: "ConcatV2"
  input: "split:96"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_96/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_96/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_96/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_96/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_96/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_96/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_96"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_96/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_96/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_192/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_192"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_96:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_192/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_288"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_288"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_289"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_192"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_289"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_289"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_193"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_288"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_193"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_290"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_96:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_290"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_96/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_96/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_96/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_96/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_96/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_96/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_96/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_96/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_96"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_96/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_96/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_192/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_192"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_96:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_192/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_288"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_288"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_289"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_192"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_289"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_289"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_193"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_288"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_193"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_290"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_96:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_290"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_97/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_97/concat"
  op: "ConcatV2"
  input: "split:97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_97/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_97/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_97/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_97/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_97/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_97/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_97"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_97/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_97/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_194/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_194"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_97:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_194/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_291"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_291"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_292"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_194"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_97:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_292"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_292"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_195"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_291"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_195"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_293"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_97:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_293"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_97/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_97/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_97/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_97/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_97/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_97/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_97/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_97/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_97"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_97/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_97/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_194/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_194"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_97:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_194/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_291"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_291"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_292"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_194"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_97:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_292"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_292"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_195"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_291"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_195"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_293"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_97:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_293"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_98/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_98/concat"
  op: "ConcatV2"
  input: "split:98"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_98/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_98/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_98/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_98/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_98/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_98/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_98"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_98/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_98/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_196/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_196"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_98:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_196/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_294"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_294"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_295"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_196"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_98:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_295"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_295"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_197"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_294"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_197"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_296"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_98:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_296"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_98/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_98/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_98/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_98/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_98/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_98/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_98/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_98/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_98"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_98/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_98/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_196/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_196"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_98:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_196/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_294"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_294"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_295"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_196"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_98:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_295"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_295"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_197"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_294"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_197"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_296"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_98:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_296"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_99/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_99/concat"
  op: "ConcatV2"
  input: "split:99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_99/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_99/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_99/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_99/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_99/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_99/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_99"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_99/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_99/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_198/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_198"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_99:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_198/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_297"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_297"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_298"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_198"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_99:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_298"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_298"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_199"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_297"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_199"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_299"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_99:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_299"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_99/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_99/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_99/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_99/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_99/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_99/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_99/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_99/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_99"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_99/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_99/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_198/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_198"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_99:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_198/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_297"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_297"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_298"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_198"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_99:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_298"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_298"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_199"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_297"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_199"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_299"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_99:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_299"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_100/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_100/concat"
  op: "ConcatV2"
  input: "split:100"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_100/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_100/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_100/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_100/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_100/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_100/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_100"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_100/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_100/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_200/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_200"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_100:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_200/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_300"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_300"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_301"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_200"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_100:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_301"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_301"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_201"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_300"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_201"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_302"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_100:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_302"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_100/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_100/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_100/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_100/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_100/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_100/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_100/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_100/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_100"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_100/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_100/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_200/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_200"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_100:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_200/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_300"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_300"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_301"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_200"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_100:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_301"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_301"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_201"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_300"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_201"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_302"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_100:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_302"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_101/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_101/concat"
  op: "ConcatV2"
  input: "split:101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_101/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_101/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_101/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_101/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_101/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_101/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_101"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_101/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_101/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_202/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_202"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_101:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_202/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_303"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_303"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_304"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_202"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_101:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_304"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_304"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_203"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_303"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_203"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_305"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_101:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_305"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_101/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_101/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_101/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_101/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_101/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_101/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_101/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_101/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_101"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_101/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_101/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_202/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_202"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_101:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_202/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_303"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_303"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_304"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_202"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_101:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_304"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_304"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_203"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_303"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_203"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_305"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_101:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_305"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_102/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_102/concat"
  op: "ConcatV2"
  input: "split:102"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_102/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_102/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_102/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_102/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_102/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_102/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_102"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_102/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_102/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_204/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_204"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_102:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_204/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_306"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_306"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_307"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_204"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_307"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_307"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_205"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_306"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_205"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_308"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_102:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_308"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_102/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_102/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_102/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_102/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_102/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_102/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_102/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_102/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_102"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_102/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_102/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_204/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_204"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_102:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_204/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_306"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_306"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_307"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_204"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_307"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_307"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_205"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_306"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_205"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_308"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_102:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_308"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_103/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_103/concat"
  op: "ConcatV2"
  input: "split:103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_103/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_103/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_103/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_103/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_103/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_103/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_103"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_103/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_103/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_206/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_206"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_103:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_206/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_309"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_309"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_310"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_206"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_103:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_310"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_310"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_207"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_309"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_207"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_311"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_103:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_311"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_103/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_103/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_103/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_103/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_103/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_103/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_103/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_103/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_103"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_103/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_103/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_206/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_206"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_103:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_206/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_309"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_309"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_310"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_206"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_103:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_310"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_310"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_207"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_309"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_207"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_311"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_103:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_311"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_104/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_104/concat"
  op: "ConcatV2"
  input: "split:104"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_104/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_104/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_104/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_104/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_104/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_104/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_104"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_104/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_104/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_208/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_208"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_104:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_208/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_312"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_312"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_313"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_208"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_104:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_313"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_313"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_209"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_312"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_209"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_314"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_104:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_314"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_104/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_104/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_104/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_104/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_104/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_104/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_104/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_104/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_104"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_104/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_104/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_208/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_208"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_104:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_208/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_312"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_312"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_313"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_208"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_104:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_313"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_313"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_209"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_312"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_209"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_314"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_104:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_314"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_105/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_105/concat"
  op: "ConcatV2"
  input: "split:105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_105/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_105/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_105/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_105/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_105/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_105/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_105"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_105/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_105/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_210/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_210"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_105:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_210/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_315"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_315"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_316"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_210"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_105:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_316"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_316"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_211"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_315"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_211"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_317"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_105:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_317"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_105/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_105/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_105/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_105/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_105/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_105/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_105/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_105/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_105"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_105/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_105/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_210/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_210"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_105:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_210/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_315"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_315"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_316"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_210"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_105:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_316"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_316"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_211"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_315"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_211"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_317"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_105:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_317"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_106/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_106/concat"
  op: "ConcatV2"
  input: "split:106"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_106/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_106/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_106/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_106/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_106/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_106/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_106"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_106/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_106/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_212/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_212"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_106:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_212/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_318"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_318"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_319"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_212"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_106:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_319"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_319"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_213"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_318"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_213"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_320"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_106:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_320"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_106/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_106/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_106/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_106/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_106/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_106/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_106/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_106/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_106"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_106/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_106/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_212/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_212"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_106:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_212/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_318"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_318"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_319"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_212"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_106:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_319"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_319"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_213"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_318"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_213"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_320"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_106:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_320"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_107/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_107/concat"
  op: "ConcatV2"
  input: "split:107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_107/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_107/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_107/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_107/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_107/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_107/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_107"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_107/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_107/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_214/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_214"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_107:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_214/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_321"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_321"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_322"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_214"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_107:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_322"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_322"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_215"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_321"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_215"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_323"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_107:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_323"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_107/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_107/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_107/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_107/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_107/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_107/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_107/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_107/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_107"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_107/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_107/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_214/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_214"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_107:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_214/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_321"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_321"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_322"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_214"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_107:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_322"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_322"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_215"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_321"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_215"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_323"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_107:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_323"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_108/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_108/concat"
  op: "ConcatV2"
  input: "split:108"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_108/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_108/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_108/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_108/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_108/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_108/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_108"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_108/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_108/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_216/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_216"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_108:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_216/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_324"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_324"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_325"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_216"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_325"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_325"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_217"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_324"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_217"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_326"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_108:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_326"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_108/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_108/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_108/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_108/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_108/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_108/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_108/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_108/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_108"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_108/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_108/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_216/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_216"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_108:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_216/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_324"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_324"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_325"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_216"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_325"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_325"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_217"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_324"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_217"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_326"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_108:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_326"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_109/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_109/concat"
  op: "ConcatV2"
  input: "split:109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_109/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_109/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_109/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_109/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_109/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_109/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_109"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_109/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_109/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_218/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_218"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_109:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_218/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_327"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_327"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_328"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_218"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_109:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_328"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_328"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_219"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_327"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_219"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_329"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_109:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_329"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_109/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_109/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_109/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_109/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_109/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_109/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_109/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_109/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_109"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_109/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_109/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_218/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_218"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_109:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_218/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_327"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_327"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_328"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_218"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_109:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_328"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_328"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_219"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_327"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_219"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_329"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_109:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_329"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_110/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_110/concat"
  op: "ConcatV2"
  input: "split:110"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_110/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_110/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_110/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_110/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_110/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_110/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_110"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_110/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_110/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_220/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_220"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_110:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_220/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_330"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_330"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_331"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_220"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_110:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_331"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_331"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_221"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_330"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_221"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_332"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_110:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_332"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_110/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_110/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_110/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_110/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_110/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_110/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_110/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_110/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_110"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_110/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_110/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_220/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_220"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_110:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_220/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_330"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_330"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_331"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_220"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_110:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_331"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_331"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_221"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_330"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_221"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_332"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_110:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_332"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_111/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_111/concat"
  op: "ConcatV2"
  input: "split:111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_111/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_111/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_111/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_111/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_111/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_111/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_111"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_111/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_111/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_222/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_222"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_111:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_222/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_333"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_333"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_334"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_222"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_111:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_334"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_334"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_223"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_333"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_223"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_335"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_111:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_335"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_111/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_111/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_111/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_111/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_111/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_111/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_111/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_111/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_111"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_111/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_111/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_222/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_222"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_111:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_222/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_333"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_333"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_334"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_222"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_111:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_334"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_334"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_223"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_333"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_223"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_335"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_111:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_335"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_112/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_112/concat"
  op: "ConcatV2"
  input: "split:112"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_112/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_112/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_112/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_112/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_112/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_112/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_112"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_112/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_112/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_224/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_224"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_112:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_224/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_336"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_336"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_337"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_224"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_112:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_337"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_337"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_225"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_336"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_225"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_338"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_112:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_338"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_112/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_112/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_112/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_112/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_112/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_112/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_112/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_112/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_112"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_112/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_112/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_224/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_224"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_112:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_224/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_336"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_336"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_337"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_224"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_112:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_337"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_337"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_225"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_336"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_225"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_338"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_112:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_338"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_113/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_113/concat"
  op: "ConcatV2"
  input: "split:113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_113/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_113/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_113/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_113/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_113/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_113/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_113"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_113/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_113/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_226/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_226"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_113:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_226/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_339"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_339"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_340"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_226"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_113:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_340"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_340"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_227"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_339"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_227"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_341"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_113:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_341"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_113/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_113/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_113/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_113/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_113/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_113/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_113/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_113/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_113"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_113/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_113/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_226/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_226"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_113:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_226/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_339"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_339"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_340"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_226"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_113:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_340"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_340"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_227"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_339"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_227"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_341"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_113:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_341"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_114/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_114/concat"
  op: "ConcatV2"
  input: "split:114"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_114/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_114/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_114/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_114/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_114/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_114/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_114"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_114/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_114/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_228/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_228"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_114:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_228/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_342"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_342"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_343"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_228"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_343"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_343"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_229"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_342"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_229"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_344"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_114:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_344"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_114/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_114/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_114/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_114/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_114/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_114/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_114/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_114/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_114"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_114/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_114/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_228/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_228"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_114:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_228/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_342"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_342"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_343"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_228"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_343"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_343"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_229"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_342"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_229"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_344"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_114:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_344"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_115/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_115/concat"
  op: "ConcatV2"
  input: "split:115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_115/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_115/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_115/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_115/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_115/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_115/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_115"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_115/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_115/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_230/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_230"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_115:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_230/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_345"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_345"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_346"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_230"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_115:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_346"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_346"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_231"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_345"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_231"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_347"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_115:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_347"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_115/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_115/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_115/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_115/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_115/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_115/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_115/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_115/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_115"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_115/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_115/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_230/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_230"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_115:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_230/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_345"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_345"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_346"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_230"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_115:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_346"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_346"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_231"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_345"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_231"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_347"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_115:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_347"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_116/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_116/concat"
  op: "ConcatV2"
  input: "split:116"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_116/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_116/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_116/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_116/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_116/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_116/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_116"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_116/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_116/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_232/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_232"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_116:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_232/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_348"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_348"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_349"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_232"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_116:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_349"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_349"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_233"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_348"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_233"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_350"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_116:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_350"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_116/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_116/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_116/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_116/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_116/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_116/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_116/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_116/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_116"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_116/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_116/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_232/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_232"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_116:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_232/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_348"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_348"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_349"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_232"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_116:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_349"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_349"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_233"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_348"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_233"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_350"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_116:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_350"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_117/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_117/concat"
  op: "ConcatV2"
  input: "split:117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_117/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_117/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_117/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_117/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_117/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_117/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_117"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_117/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_117/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_234/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_234"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_117:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_234/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_351"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_351"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_352"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_234"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_117:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_352"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_352"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_235"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_351"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_235"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_353"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_117:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_353"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_117/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_117/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_117/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_117/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_117/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_117/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_117/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_117/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_117"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_117/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_117/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_234/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_234"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_117:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_234/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_351"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_351"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_352"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_234"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_117:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_352"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_352"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_235"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_351"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_235"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_353"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_117:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_353"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_118/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_118/concat"
  op: "ConcatV2"
  input: "split:118"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_118/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_118/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_118/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_118/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_118/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_118/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_118"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_118/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_118/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_236/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_236"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_118:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_236/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_354"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_354"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_355"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_236"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_118:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_355"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_355"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_237"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_354"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_237"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_356"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_118:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_356"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_118/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_118/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_118/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_118/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_118/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_118/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_118/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_118/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_118"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_118/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_118/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_236/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_236"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_118:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_236/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_354"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_354"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_355"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_236"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_118:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_355"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_355"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_237"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_354"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_237"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_356"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_118:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_356"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_119/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_119/concat"
  op: "ConcatV2"
  input: "split:119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_119/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_119/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_119/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_119/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_119/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_119/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_119"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_119/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_119/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_238/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_238"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_119:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_238/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_357"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_357"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_358"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_238"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_119:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_358"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_358"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_239"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_357"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_239"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_359"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_119:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_359"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_119/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_119/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_119/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_119/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_119/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_119/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_119/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_119/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_119"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_119/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_119/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_238/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_238"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_119:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_238/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_357"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_357"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_358"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_238"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_119:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_358"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_358"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_239"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_357"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_239"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_359"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_119:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_359"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_120/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_120/concat"
  op: "ConcatV2"
  input: "split:120"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_120/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_120/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_120/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_120/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_120/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_120/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_120"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_120/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_120/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_240/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_240"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_120:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_240/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_360"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_360"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_361"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_240"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_361"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_361"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_241"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_360"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_241"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_362"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_120:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_362"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_120/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_120/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_120/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_120/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_120/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_120/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_120/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_120/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_120"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_120/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_120/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_240/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_240"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_120:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_240/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_360"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_360"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_361"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_240"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_361"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_361"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_241"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_360"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_241"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_362"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_120:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_362"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_121/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_121/concat"
  op: "ConcatV2"
  input: "split:121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_121/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_121/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_121/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_121/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_121/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_121/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_121"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_121/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_121/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_242/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_242"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_121:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_242/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_363"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_363"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_364"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_242"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_121:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_364"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_364"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_243"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_363"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_243"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_365"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_121:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_365"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_121/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_121/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_121/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_121/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_121/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_121/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_121/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_121/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_121"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_121/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_121/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_242/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_242"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_121:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_242/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_363"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_363"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_364"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_242"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_121:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_364"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_364"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_243"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_363"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_243"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_365"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_121:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_365"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_122/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_122/concat"
  op: "ConcatV2"
  input: "split:122"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_122/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_122/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_122/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_122/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_122/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_122/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_122"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_122/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_122/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_244/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_244"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_122:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_244/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_366"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_366"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_367"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_244"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_122:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_367"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_367"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_245"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_366"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_245"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_368"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_122:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_368"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_122/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_122/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_122/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_122/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_122/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_122/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_122/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_122/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_122"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_122/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_122/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_244/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_244"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_122:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_244/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_366"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_366"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_367"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_244"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_122:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_367"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_367"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_245"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_366"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_245"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_368"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_122:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_368"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_123/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_123/concat"
  op: "ConcatV2"
  input: "split:123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_123/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_123/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_123/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_123/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_123/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_123/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_123"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_123/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_123/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_246/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_246"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_123:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_246/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_369"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_369"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_370"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_246"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_123:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_370"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_370"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_247"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_369"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_247"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_371"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_123:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_371"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_123/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_123/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_123/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_123/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_123/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_123/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_123/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_123/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_123"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_123/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_123/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_246/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_246"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_123:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_246/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_369"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_369"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_370"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_246"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_123:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_370"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_370"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_247"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_369"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_247"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_371"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_123:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_371"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_124/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_124/concat"
  op: "ConcatV2"
  input: "split:124"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_124/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_124/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_124/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_124/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_124/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_124/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_124"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_124/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_124/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_248/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_248"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_124:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_248/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_372"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_372"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_373"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_248"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_124:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_373"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_373"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_249"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_372"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_249"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_374"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_124:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_374"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_124/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_124/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_124/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_124/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_124/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_124/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_124/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_124/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_124"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_124/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_124/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_248/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_248"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_124:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_248/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_372"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_372"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_373"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_248"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_124:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_373"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_373"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_249"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_372"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_249"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_374"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_124:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_374"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_125/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_125/concat"
  op: "ConcatV2"
  input: "split:125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_125/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_125/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_125/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_125/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_125/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_125/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_125"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_125/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_125/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_250/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_250"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_125:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_250/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_375"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_375"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_376"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_250"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_125:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_376"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_376"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_251"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_375"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_251"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_377"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_125:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_377"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_125/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_125/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_125/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_125/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_125/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_125/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_125/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_125/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_125"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_125/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_125/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_250/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_250"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_125:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_250/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_375"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_375"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_376"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_250"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_125:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_376"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_376"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_251"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_375"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_251"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_377"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_125:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_377"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_126/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_126/concat"
  op: "ConcatV2"
  input: "split:126"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_126/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_126/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_126/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_126/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_126/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_126/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_126"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_126/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_126/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_252/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_252"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_126:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_252/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_378"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_378"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_379"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_252"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_379"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_379"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_253"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_378"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_253"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_380"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_126:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_380"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_126/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_126/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_126/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_126/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_126/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_126/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_126/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_126/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_126"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_126/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_126/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_252/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_252"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_126:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_252/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_378"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_378"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_379"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_252"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_379"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_379"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_253"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_378"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_253"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_380"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_126:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_380"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_127/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_127/concat"
  op: "ConcatV2"
  input: "split:127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_127/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_127/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_127/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_127/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_127/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_127/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_127"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_127/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_127/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_254/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_254"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_127:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_254/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_381"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_381"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_382"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_254"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_127:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_382"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_382"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_255"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_381"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_255"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_383"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_127:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_383"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_255"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_127/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_127/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_383"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_127/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_127/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_127/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_127/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_127/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_127/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_127"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_127/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_127/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_254/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_254"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_127:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_254/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_381"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_381"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_382"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_254"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_127:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_382"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_382"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_255"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_381"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_255"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_383"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_127:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_383"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_255"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 6
          }
        }
        tensor_content: "\r\234\022\277F\272g>F\322P\276Y\217\267\273vr\341>\250\356\275=\251\014\332\276\367\355\371\276\313\301`>\264\340\251>C_\203>\214N\205>\022\353A=\226=\022\276\254z\261>\332\326\342=\230\207\221=4\027\311\276N\027\307>\2417\264\2758\315U\276\311\027i\276\255V\272>\234\344t\276\261\266\376\275[=\370>\371\346a\276\361\027\334<\024\231\362=\230Tn\276o\326\017>\001\324\266\276R\332\265\276\235\r\201\275D|n>\327~\230>|\240\275>14\317\276_J\231>\357\267(\277\211\301\352=\307\224\307>\3362\221>%1\326>\337\010\245\276\3347q\276\353\032\235>\235\033\261\276:\020\370\276\320(!>Y\377a>\313\220\267\2768G\270>m\204P>\037I\207=\022_\023\273a?\037\277\352\216\025\273\241<\323>\364\211\273=8\351\247\276@\333B\276\230\316\007\276l\347\020?\256\224/?\304\343P\276\035\030\236\276\226\335\322>\266\356\336>\321\203\003\2770\275\313>-\235\267\276\376\241\314=\001\214\347\276\024\244\235>\330+\244>*\221K>l\362\020\277\347\241\271\276-\221\236>\262\271\226>\217P\376\2757\254\236\276\311\020\210>\366\276P>!:\247\274\3154\257\276\261\270\276>%\342\010\274\252=\250\276\375dJ>*@F>\224\255\206<\357\\o>G^\207\277Q\240\236=\021*l\276\342\350\232\276\322\340%\276<\014(?\2745B?y\353n\276c3 \275\023\240!>d\323\002\277,.H>\253\252\271\275\230\305\214>\366\362\217=\206\"@=\257\343\322\276T\303\226=\244\202\373>\310\266\227\276\356\013\315<\214\024\252\276\310\312\201>\244\246\031\276\2058\374\275\n\271\227>G\241\232\276\320\356_>\246X\203>Iq|\276!\323.\276R\237\231>\333f\276\275\\\273\022?\316\243\363>\324\254\324\276\373\353(\276\177\331\273\276\261n\026\274\005\262\263\276Gt\260\276\254$g=\341\325\005>\340\302\365>dl\250>8\372\352>\264\375r\276\r#\265\276}oQ\276\226\273Z\2762k\235\276\222\350p\276f\370\342\275`&\353>8\315[?\343&J\276\240H*\276\224\270j>\352\371\034\276+l\000\276:\271\343>\017\206m\276\021\250{>H\3053>\354\010\243\276\230`\000\277&xg>\311\303\254>\306\000\211\276\376o\031\276\275\021\263\276\270\341\256>\220\356\330\275Q\253\326>\024\377\000?U\235\017\276\014\364\356>\374\243\213\276S\363\250\2760>q\276\263\357\002?\354\230\316=\216j!\276`\177\031\277U\276\311>\001\2364\276\"]#>/\372\364\276q\215\211>\2002[>qX\334>]\270\365\276\375\236\256>\341\236\340\276\177\352\013>H2\220>y\203\345\276\0344\217="
      }
    }
  }
}
node {
  name: "b_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\325\"\372>\343\032\363>\0012\321<\221\265\222>\376\253p\276\037\330\374\275"
      }
    }
  }
}
node {
  name: "output/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_383"
  input: "w_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "output"
  op: "BiasAdd"
  input: "output/MatMul"
  input: "b_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
